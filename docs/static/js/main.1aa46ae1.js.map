{"version":3,"sources":["webpack:///static/js/main.1aa46ae1.js","webpack:///webpack/bootstrap 0bc9a8a61383a479b719","webpack:///./~/promise/lib/core.js","webpack:///./~/asap/browser-raw.js","webpack:///./src/index.js","webpack:///./~/d3/build/d3.js","webpack:///./~/object-assign/index.js","webpack:///./~/promise/lib/es6-extensions.js","webpack:///./~/promise/lib/rejection-tracking.js","webpack:///./~/react-scripts/config/polyfills.js","webpack:///./~/react-scripts/~/whatwg-fetch/fetch.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","noop","getThen","obj","then","ex","LAST_ERROR","IS_ERROR","tryCallOne","fn","a","tryCallTwo","b","Promise","this","TypeError","_45","_81","_65","_54","doResolve","safeThen","self","onFulfilled","onRejected","constructor","resolve","reject","res","handle","Handler","deferred","_10","push","handleResolved","asap","cb","promise","ret","newValue","finale","bind","_97","i","length","done","value","reason","_61","prototype","global","rawAsap","task","queue","requestFlush","flushing","flush","index","currentIndex","capacity","scan","newLength","makeRequestCallFromMutationObserver","callback","toggle","observer","BrowserMutationObserver","node","document","createTextNode","observe","characterData","data","makeRequestCallFromTimer","handleTimer","clearTimeout","timeoutHandle","clearInterval","intervalHandle","setTimeout","setInterval","scope","MutationObserver","WebKitMutationObserver","_interopRequireWildcard","__esModule","newObj","key","Object","hasOwnProperty","default","buildSVG","minDate","Date","maxDate","x","d3","scaleTime","range","width","y","scaleLinear","height","barWidth","Math","ceil","domain","ticks","timeYear","every","max","d","div","select","append","attr","style","html","name","svg","selectAll","enter","on","transition","duration","formatTime","formatValue","event","pageX","pageY","axisBottom","axisLeft","_d","url","timeFormat","format","margin","top","right","bottom","left","fetch","response","json","factory","ascendingComparator","f","ascending","pair","tickIncrement","start","stop","count","step","power","floor","log","LN10","error","pow","e10","e5","e2","tickStep","step0","abs","step1","translateX","translateY","center","scale","offset","bandwidth","round","entering","__axis","axis","orient","context","values","tickValues","apply","tickArguments","tickFormat","identity$1","spacing","tickSizeInner","tickPadding","range0","range1","position","copy","selection","path","tick","order","tickExit","exit","tickEnter","line","text","merge","insert","k","epsilon","isFinite","transform","getAttribute","parentNode","remove","tickSizeOuter","filter","each","_","arguments","slice$1","slice","tickSize","axisTop","axisRight","dispatch","t","n","Error","Dispatch","parseTypenames","typenames","types","trim","split","map","indexOf","type","get","set","concat","creatorInherit","ownerDocument","uri","namespaceURI","xhtml","documentElement","createElement","createElementNS","creatorFixed","fullname","space","local","local$1","Local","nextId","toString","filterContextListener","listener","group","contextListener","related","relatedTarget","compareDocumentPosition","event1","event0","__data__","parseTypenames$1","onRemove","typename","__on","o","j","removeEventListener","capture","onAdd","wrap","filterEvents","addEventListener","customEvent","that","args","sourceEvent","none","empty$1","EnterNode","parent","datum","_next","_parent","bindIndex","update","groupLength","dataLength","bindKey","keyValue","nodeByKeyValue","keyValues","Array","keyPrefix","ascending$1","NaN","attrRemove","removeAttribute","attrRemoveNS","removeAttributeNS","attrConstant","setAttribute","attrConstantNS","setAttributeNS","attrFunction","v","attrFunctionNS","styleRemove","removeProperty","styleConstant","priority","setProperty","styleFunction","propertyRemove","propertyConstant","propertyFunction","classArray","string","classList","ClassList","_node","_names","classedAdd","names","list","add","classedRemove","classedTrue","classedFalse","classedFunction","textRemove","textContent","textConstant","textFunction","htmlRemove","innerHTML","htmlConstant","htmlFunction","raise","nextSibling","appendChild","lower","previousSibling","insertBefore","firstChild","constantNull","removeChild","dispatchEvent","params","window$$1","window","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","dispatchConstant","dispatchFunction","Selection","groups","parents","_groups","_parents","root","nopropagation","stopImmediatePropagation","yesdrag","view","noclick","selection$$1","noevent","MozUserSelect","__noselect","DragEvent","target","subject","active","dx","dy","identifier","defaultFilter$1","button","defaultContainer","defaultSubject","extend","definition","create","Color","color","toLowerCase","reHex3","exec","parseInt","Rgb","reHex6","rgbn","reRgbInteger","reRgbPercent","reRgbaInteger","rgba","reRgbaPercent","reHslPercent","hsla","reHslaPercent","named","r","g","rgbConvert","rgb","opacity","h","s","l","Hsl","hslConvert","min","hsl","hsl2rgb","m1","m2","labConvert","Lab","Hcl","deg2rad","cos","sin","rgb2xyz","xyz2lab","Xn","Yn","z","Zn","lab","t3","t2","t0","lab2xyz","t1","xyz2rgb","hclConvert","atan2","rad2deg","sqrt","hcl","cubehelixConvert","Cubehelix","BC_DA","ED","EB","bl","E","C","D","cubehelix","basis","v0","v1","v2","v3","linear","exponential","hue","constant$3","isNaN","gamma","nogamma","rgbSpline","spline","colors","color$$1","zero","one","parseCss","identity$2","cssNode","cssRoot","cssView","defaultView","getComputedStyle","getPropertyValue","decompose","parseSvg","svgNode","baseVal","consolidate","matrix","e","interpolateTransform","parse","pxComma","pxParen","degParen","pop","translate","xa","ya","xb","yb","q","reinterpolate","rotate","skewX","scaleX","scaleY","join","cosh","exp","sinh","tanh","hsl$1","hue$$1","end","lab$1","hcl$1","cubehelix$1","cubehelixGamma","cubehelix$$1","now","clockNow","setFrame","clearNow","clock","clockSkew","Timer","_call","_time","timer","delay","time","restart","timerFlush","frame","taskHead","wake","clockLast","timeout","nap","poke","pokeDelay","Infinity","taskTail","sleep","interval","init","schedule","__transition","state","CREATED","set$1","STARTING","get$1","elapsed","SCHEDULED","schedules","STARTED","timeout$1","RUNNING","ENDED","tween","ease","ENDING","tweenRemove","tween0","tween1","splice","tweenFunction","tweenValue","_id","attrRemove$1","attrRemoveNS$1","attrConstant$1","interpolate$$1","value1","value00","interpolate0","value0","attrConstantNS$1","getAttributeNS","attrFunction$1","value10","attrFunctionNS$1","attrTweenNS","_value","attrTween","delayFunction","delayConstant","durationFunction","durationConstant","easeConstant","onFunction","on0","on1","sit","removeFunction","styleRemove$1","interpolate$$2","styleRemoveEnd","styleConstant$1","styleFunction$1","styleTween","textConstant$1","textFunction$1","Transition","_name","newId","linear$1","quadIn","quadOut","quadInOut","cubicIn","cubicOut","cubicInOut","sinIn","halfPi","sinOut","sinInOut","pi","expIn","expOut","expInOut","circleIn","circleOut","circleInOut","bounceIn","bounceOut","b1","b0","b3","b2","b4","b6","b5","b7","b8","b9","bounceInOut","inherit","timing","defaultTiming","nopropagation$1","defaultFilter","defaultExtent","ownerSVGElement","local$$1","__brush","empty","extent","brushSelection","dim","output","brushX","brush$1","X","brushY","Y","brush","overlay","property","initialize","cursors","handles","redraw","started","handleSize","emitter","Emitter","moved","point1","mouse","shifting","lockX","lockY","point","moving","noevent$1","move","point0","mode","MODE_SPACE","MODE_DRAG","signX","W","w0","e0","w1","e1","signY","N","n0","S","s0","n1","s1","MODE_HANDLE","MODE_CENTER","flipX","flipY","emit","ended","touches","touchending","keydowned","keyCode","keyupped","altKey","changedTouches","metaKey","signsX","signsY","shiftKey","beforestart","dragDisable","interrupt","listeners","selection1","selection0","input","interpolateValue","starting","BrushEvent","constant$4","compareValue","compare","source","Path","_x0","_y0","_x1","_y1","defaultSource","defaultTarget","defaultRadius","radius","defaultStartAngle","startAngle","defaultEndAngle","endAngle","Map","map$1","object","isArray","createObject","setObject","createMap","setMap","Set","set$2","objectConverter","columns","Function","JSON","stringify","customConverter","row","inferColumns","rows","columnSet","forEach","column","tree","xm","ym","xp","yp","_root","leaf","x0","y0","x1","y1","_x","_y","next","addAll","xz","yz","cover","removeAll","defaultX","defaultY","quadtree","nodes","Quadtree","undefined","leaf_copy","vx","vy","find","nodeById","nodeId","x$1","y$1","formatSpecifier","specifier","FormatSpecifier","match","re","fill","align","sign","symbol","comma","precision","formatTypes","defaultLocale","locale$1","formatLocale","formatPrefix","Adder","reset","add$1","adder","bv","av","acos","pi$3","asin","halfPi$2","haversin","sin$1","noop$1","streamGeometry","geometry","stream","streamGeometryType","streamLine","coordinates","closed","coordinate","lineStart","lineEnd","streamPolygon","polygonStart","polygonEnd","areaRingStart","areaStream","areaPointFirst","areaRingEnd","areaPoint","lambda00","phi00","lambda","phi","radians","lambda0","cosPhi0","cos$1","quarterPi","sinPhi0","dLambda","sdLambda","adLambda","cosPhi","sinPhi","u","areaRingSum","spherical","cartesian","cartesianDot","cartesianCross","cartesianAddInPlace","cartesianScale","vector","cartesianNormalizeInPlace","boundsPoint","ranges","lambda0$1","lambda1","phi0","phi1","linePoint","p0","normal","equatorial","inflection","phii","delta","lambda2","sign$$1","lambdai","degrees$1","antimeridian","angle","boundsLineStart","boundsStream","boundsLineEnd","boundsRingPoint","deltaSum","lambda00$1","phi00$1","boundsRingStart","boundsRingEnd","epsilon$2","rangeCompare","rangeContains","centroidPoint","centroidPointCartesian","W0","X0","Y0","Z0","centroidLineStart","centroidStream","centroidLinePointFirst","z0","centroidLinePoint","w","W1","X1","Y1","Z1","centroidLineEnd","centroidRingStart","centroidRingPointFirst","centroidRingEnd","centroidRingPoint","lambda00$2","phi00$2","cx","cy","cz","X2","Y2","Z2","rotationIdentity","tau$3","rotateRadians","deltaLambda","deltaPhi","deltaGamma","compose","rotationLambda","rotationPhiGamma","forwardRotationLambda","rotation","invert","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","circleStream","direction","cosRadius","sinRadius","circleRadius","Intersection","points","other","entry","link$1","array","clipExtent","visible","interpolate","from","to","a1","corner","comparePoint","compareIntersection","ca","activeStream","polygonInside","winding","polygon","a0","ring","bufferStream","segments","clean","startInside","cleanInside","clipPolygon","clipStream","first","v_","x_","y_","x__","y__","v__","rejoin","result","clipMin","clipMax","clipLine","clipBuffer","lengthLineStart","lengthStream","lengthPointFirst","lengthLineEnd","lambda0$2","sinPhi0$1","cosPhi0$1","lengthPoint","cosDelta","sinDelta","lengthSum","containsGeometry","containsGeometryType","containsPoint","distance","containsLine","ab","ao","ob","containsPolygon","polygonContains","ringRadians","pointRadians","graticuleX","sequence","graticuleY","graticule","lines","DX","DY","outline","reverse","extentMajor","extentMinor","stepMajor","stepMinor","graticule10","areaRingStart$1","areaStream$1","areaPointFirst$1","areaPoint$1","x00","x0$1","y00","y0$1","areaRingSum$1","areaRingEnd$1","boundsPoint$1","x0$2","y0$2","centroidPoint$1","X0$1","Y0$1","Z0$1","centroidLineStart$1","centroidStream$1","centroidPointFirstLine","centroidPointLine","x0$3","y0$3","X1$1","Y1$1","Z1$1","centroidLineEnd$1","centroidRingStart$1","centroidPointFirstRing","centroidRingEnd$1","centroidPointRing","x00$1","y00$1","X2$1","Y2$1","Z2$1","PathContext","_context","lengthPointFirst$1","lengthStream$1","lengthPoint$1","x00$2","x0$4","y00$2","y0$4","lengthSum$1","PathString","_string","circle$1","validSegment","segment","clipAntimeridianLine","sign0","sign1","clipAntimeridianIntersect","cosPhi1","sinLambda0Lambda1","atan","clipAntimeridianInterpolate","transformer","methods","TransformStream","fitExtent","projection","clip","geoStream","boundsStream$1","fitSize","size","resampleNone","project","resample$1","delta2","resampleLineTo","c0","c1","depth","d2","phi2","x2","y2","dx2","dy2","dz","cosMinDistance","resampleStream","maxDepth","ringStart","ringPoint","ringEnd","a00","b00","c00","projectionMutator","projectAt","projectRotate","projectTransform","recenter","cache","cacheStream","theta","preclip","clipAntimeridian","postclip","identity$4","projectResample","resample","transformRadians","clipAngle","clipCircle","conicProjection","parallels","cylindricalEqualAreaRaw","forward","conicEqualAreaRaw","r0","sy0","r0y","multiplex","streams","sphere","azimuthalRaw","azimuthalInvert","sc","cc","mercatorRaw","tan","mercatorProjection","reclip","tany","conicConformalRaw","cy0","fy","equirectangularRaw","conicEquidistantRaw","gy","nx","gnomonicRaw","scaleTranslate","kx","ky","tx","ty","orthographicRaw","stereographicRaw","transverseMercatorRaw","defaultSeparation","meanX","children","reduce","meanXReduce","maxY","maxYReduce","leafLeft","leafRight","sum","leastCommonAncestor","aNodes","ancestors","bNodes","hierarchy","child","childs","Node","valued","defaultChildren","eachBefore","computeHeight","node_copy","copyData","Node$2","encloses","dr","encloseN","L","B","circle","l2","p1","l0","l1","head","enclose1","enclose2","enclose3","tail","r1","r2","x21","y21","r21","x3","y3","r3","a2","c2","a3","c3","A","place","ax","ay","da","db","dc","intersects","distance2","Node$1","previous","packEnclose","circles","sj","sk","aa","ba","oa","ox","oy","pack","enclose","optional","required","constantZero","defaultRadius$1","radiusLeaf","packChildren","padding","translateChild","defaultId","defaultParentId","parentId","defaultSeparation$1","nextLeft","nextRight","moveSubtree","wm","wp","shift","change","executeShifts","nextAncestor","vim","ancestor","TreeNode","treeRoot","squarifyRatio","ratio","nodeValue","sumValue","minValue","maxValue","newRatio","minRatio","alpha","beta","i0","i1","dice","treemapDice","treemapSlice","lexicographicOrder","computeUpperHullIndexes","indexes","cross$1","Queue","_size","_error","_tasks","_data","_waiting","_active","_ended","_start","poke$1","start$1","abort","noabort","maybeNotify","concurrency","fixCallback","xhr","hasResponse","responseType","responseText","responseOf","request$$1","ordinal","unknown","implicit","slice$4","has","band","rescale","range$$1","paddingInner","paddingOuter","ordinalRange","rangeRound","pointish","point$1","deinterpolateLinear","constant$9","deinterpolateClamp","deinterpolate","reinterpolateClamp","bimap","d0","d1","polymap","bisectRight","clamp","continuous","piecewise","unit","map$3","number$1","interpolateRound","linearish","nice","linear$2","identity$6","reinterpolate$1","pow10","powp","base","logp","log10","log2","reflect","log$1","logs","pows","raise$1","exponent","pow$1","sqrt$1","quantile$$1","thresholds","threshold","invertExtent","sort","quantiles","quantize$1","threshold$1","newInterval","floori","offseti","field","date","test","setTime","t0$1","t1$1","weekday","setDate","getDate","getDay","setHours","getTimezoneOffset","durationMinute$1","durationWeek$1","utcWeekday","setUTCDate","getUTCDate","getUTCDay","setUTCHours","localDate","H","M","setFullYear","utcDate","UTC","setUTCFullYear","newYear","formatLocale$1","locale","newFormat","formats","pad","charCodeAt","pads","charAt","newParse","newDate","parseSpecifier","day$$1","U","Z","parses","parsePeriod","periodRe","periodLookup","parseShortWeekday","shortWeekdayRe","shortWeekdayLookup","parseWeekday","weekdayRe","weekdayLookup","parseShortMonth","shortMonthRe","shortMonthLookup","parseMonth","monthRe","monthLookup","parseLocaleDateTime","locale_dateTime","parseLocaleDate","locale_date","parseLocaleTime","locale_time","formatShortWeekday","locale_shortWeekdays","formatWeekday","locale_weekdays","formatShortMonth","locale_shortMonths","getMonth","formatMonth","locale_months","formatPeriod","locale_periods","getHours","formatUTCShortWeekday","formatUTCWeekday","formatUTCShortMonth","getUTCMonth","formatUTCMonth","formatUTCPeriod","getUTCHours","dateTime","periods","days","shortDays","months","shortMonths","formatRe","formatLookup","formatDayOfMonth","formatHour24","I","formatHour12","formatDayOfYear","formatMilliseconds","formatMonthNumber","formatMinutes","formatSeconds","formatWeekNumberSunday","formatWeekdayNumber","formatWeekNumberMonday","formatYear","formatFullYear","formatZone","%","formatLiteralPercent","utcFormats","formatUTCDayOfMonth","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekNumberSunday","formatUTCWeekdayNumber","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","parseDayOfMonth","parseHour24","parseDayOfYear","parseMilliseconds","parseMonthNumber","parseMinutes","parseSeconds","parseWeekNumberSunday","parseWeekdayNumber","parseWeekNumberMonday","parseYear","parseFullYear","parseZone","parseLiteralPercent","utcFormat","utcParse","requote","replace","requoteRe","RegExp","numberRe","percentRe","day","year","getMilliseconds","getMinutes","getSeconds","sunday","monday","getFullYear","utcDay","utcYear","getUTCMilliseconds","getUTCMinutes","getUTCSeconds","utcSunday","utcMonday","getUTCFullYear","defaultLocale$1","locale$2","timeParse","formatIsoNative","toISOString","parseIsoNative","date$1","number$2","calendar","year$$1","month$$1","week","hour$$1","minute$$1","second$$1","millisecond$$1","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","tickInterval","bisector","tickIntervals","durationYear","durationSecond","durationMinute","durationHour","durationDay","durationWeek","durationMonth","ramp","sequential","interpolator","acos$1","pi$4","asin$1","halfPi$3","arcInnerRadius","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","arcEndAngle","arcPadAngle","padAngle","intersect","x10","y10","x32","y32","cornerTangents","rc","cw","x01","y01","lo","sqrt$2","x11","y11","max$2","cx0","cx1","cy1","dx0","dy0","dx1","dy1","Linear","x$3","y$3","Radial","curve","_curve","curveRadial","radial","radialLine","point$2","bezierCurveTo","Basis","BasisClosed","BasisOpen","Bundle","_basis","_beta","point$3","_k","_x2","_y2","Cardinal","tension","CardinalClosed","CardinalOpen","point$4","_l01_a","epsilon$3","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","CatmullRom","_alpha","CatmullRomClosed","CatmullRomOpen","LinearClosed","sign$1","slope3","h0","h1","slope2","point$5","MonotoneX","MonotoneY","ReflectContext","monotoneX","monotoneY","Natural","controlPoints","Step","_t","stepBefore","stepAfter","stackValue","sum$2","series","x$4","y$4","RedBlackTree","RedBlackNode","R","P","RedBlackRotateLeft","RedBlackRotateRight","RedBlackFirst","createEdge","edge","edges","setEdgeEnd","cells","halfedges","createBorderEdge","vertex","clipEdge","bx","by","connectEdge","fm","fb","lx","ly","rx","ry","fx","clipEdges","epsilon$4","createCell","site","cellHalfedgeAngle","cell","va","vb","cellHalfedgeStart","cellHalfedgeEnd","sortCellHalfedges","clipCells","iCell","iHalfedge","nHalfedges","startX","startY","endX","endY","nCells","v00","v01","v11","v10","Circle","arc","attachCircle","lArc","rArc","lSite","cSite","rSite","epsilon2$2","ha","hc","circlePool","before","firstCircle","detachCircle","Beach","createBeach","beach","beachPool","detachBeach","beaches","removeBeach","disappearing","unshift","iArc","nArcs","addBeach","dxl","dxr","directrix","leftBreakPoint","rightBreakPoint","newArc","hb","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","triangleArea","lexicographic","Diagram","sites","ZoomEvent","Transform","transform$1","__zoom","identity$8","nopropagation$2","defaultFilter$2","defaultExtent$1","SVGElement","clientWidth","clientHeight","defaultTransform","version","hi","mid","ascendingBisect","bisectLeft","pairs","cross","values0","values1","descending","number","variance","valueof","mean","deviation","constant","identity","sturges","LN2","histogram","tz","bin","bins","freedmanDiaconis","scott","median","numbers","arrays","merged","permute","permutes","xi","xj","shuffle","random","transpose","zip","T","namespaces","xlink","xml","xmlns","namespace","prefix","creator","matcher","selector","matches","element","vendorMatches","webkitMatchesSelector","msMatchesSelector","mozMatchesSelector","oMatchesSelector","matcher$1","element$1","mouseenter","mouseleave","selection_on","current","createSVGPoint","clientX","clientY","matrixTransform","getScreenCTM","inverse","rect","getBoundingClientRect","clientLeft","clientTop","querySelector","selection_select","subgroups","subnode","subgroup","selectorAll","querySelectorAll","selection_selectAll","selection_filter","sparse","selection_enter","_enter","constant$1","selection_data","enterGroup","updateGroup","exitGroup","_exit","selection_exit","selection_merge","groups0","groups1","m0","merges","group0","group1","selection_order","selection_sort","compareNode","sortgroups","sortgroup","selection_call","selection_nodes","selection_node","selection_size","selection_empty","selection_each","selection_attr","selection_style","selection_property","contains","selection_classed","selection_text","selection_html","selection_raise","selection_lower","selection_append","selection_insert","selection_remove","selection_datum","selection_dispatch","classed","touch","preventDefault","constant$2","drag","mousedowned","touchstarted","touchmoved","touchended","gesture","container","mousemoved","mouseupped","mousemoving","gestures","touches$$1","sublisteners","define","darker","brighter","reI","reN","reP","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","displayable","PI","Kn","basis$1","basisClosed","interpolateRgb","rgbGamma","rgb$$1","rgbBasis","rgbBasisClosed","array$1","nb","na","reA","reB","interpolateString","am","bm","bs","bi","lastIndex","degrees","interpolateTransformCss","interpolateTransformSvg","rho","SQRT2","rho2","rho4","epsilon2","interpolateZoom","ux0","uy0","ux1","uy1","coshr0","hsl$2","hslLong","hcl$2","hclLong","cubehelix$2","cubehelixLong","quantize","samples","performance","requestAnimationFrame","interval$1","total","emptyOn","emptyTween","selection_interrupt","transition_tween","transition_attr","transition_attrTween","transition_delay","transition_duration","transition_ease","transition_filter","transition_merge","transition_on","transition_remove","transition_select","select$$1","transition_selectAll","Selection$1","transition_selection","transition_style","transition_styleTween","transition_text","transition_transition","id0","id1","selection_prototype","polyIn","custom","polyOut","polyInOut","overshoot","backIn","backOut","backInOut","tau","amplitude","period","elasticIn","elasticOut","elasticInOut","selection_transition","root$1","xy","XY","nw","ne","se","sw","pi$1","halfPi$1","tau$1","max$1","chord","groupSums","groupIndex","subgroupIndex","chords","sortGroups","sortSubgroups","di","dj","subindex","sortChords","slice$2","constant$5","pi$2","tau$2","epsilon$1","tauEpsilon","moveTo","closePath","lineTo","quadraticCurveTo","arcTo","l01_2","x20","y20","l21_2","l20_2","l21","l01","t01","t21","ccw","ribbon","buffer","argv","sr","sa0","sa1","sx0","tr","ta0","ta1","clear","keys","entries","nest","createResult","setResult","rollup","sortValues","valuesByKey","sortKey","sortKeys","proto","dsv","delimiter","convert","parseRows","token","EOF","eol","EOL","delimiterCode","formatRows","formatRow","reFormat","csv","csvParse","csvParseRows","csvFormat","csvFormatRows","tsv","tsvParse","tsvParseRows","tsvFormat","tsvFormatRows","center$1","force","sx","sy","constant$6","jiggle","tree_add","tree_cover","tree_data","visit","tree_extent","Quad","tree_find","quads","tree_remove","retainer","tree_root","tree_size","tree_visit","tree_visitAfter","tree_x","tree_y","treeProto","visitAfter","prefixExponent","collide","quad","rj","ri","yi","strength","ri2","iterations","prepare","radii","link","links","defaultStrength","distances","strengths","bias","initializeStrength","initializeDistance","initialRadius","initialAngle","simulation","alphaMin","stepper","alphaTarget","alphaDecay","forces","velocityDecay","initializeNodes","initializeForce","closest","manyBody","accumulate","x$$1","y$$1","theta2","distanceMax2","distanceMin2","distanceMin","distanceMax","x$2","y$2","formatDecimal","toExponential","coefficient","exponent$1","formatGroup","grouping","thousands","substring","formatNumerals","numerals","formatDefault","toPrecision","out","formatPrefixAuto","formatRounded","","toFixed","toUpperCase","identity$3","prefixes","valuePrefix","valueSuffix","suffix","formatType","valueNegative","maybeSuffix","decimal","currency","percent","precisionFixed","precisionPrefix","precisionRound","temp","valueOf","epsilon2$1","streamObjectType","Feature","FeatureCollection","features","Sphere","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","geometries","areaSum","areaRing","area","bounds","feature","deltaMax","centroid","constant$7","pointEqual","isSubject","extent$1","sum$1","sinPhi1","absDelta","intersection","phiArc","length$1","object$1","containsObjectType","interpolate$1","sy1","kx0","ky0","kx1","ky1","areaSum$1","_radius","pointRadius","_line","_point","lengthRing","_circle","index$1","contextStream","projectionStream","measure","pointVisible","sink","pointLine","pointRing","ringSink","ringSegments","ringBuffer","polygonStarted","rotatedStart","cr","point2","smallRadius","code","notHemisphere","two","pa","pb","n2","n2n2","n1n2","determinant","n1xn2","uu","polar","meridian","q1","conicEqualArea","albers","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","azimuthalEqualAreaRaw","cxcy","azimuthalEqualArea","azimuthalEquidistantRaw","azimuthalEquidistant","mercator","conicConformal","equirectangular","conicEquidistant","gnomonic","identity$5","reflectX","reflectY","orthographic","stereographic","transverseMercator","cluster","previousNode","eachAfter","separation","nodeSize","node_count","node_each","node_eachBefore","node_eachAfter","node_sum","node_sort","node_path","node_ancestors","node_descendants","node_leaves","leaves","node_links","descendants","shuffle$1","siblings","constant$8","index$2","roundNode","partition","positionNode","keyPrefix$1","preroot","ambiguous","stratify","nodeKey","nodeByKey","firstWalk","secondWalk","sizeNode","midpoint","apportion","vip","vop","vom","sip","sop","sim","som","squarify","index$3","treemap","paddingStack","paddingLeft","paddingTop","paddingRight","paddingBottom","tile","binary","valueOffset","sums","valueTarget","valueLeft","valueRight","xk","yk","sliceDice","resquarify","_squarify","area$1","centroid$1","hull","sortedPoints","flippedPoints","upperIndexes","lowerIndexes","skipLeft","skipRight","contains$1","inside","length$2","perimeter","slice$3","defer","await","results","awaitAll","uniform","mu","sigma","logNormal","randomNormal","irwinHall","bates","randomIrwinHall","exponential$1","request","respond","status","mimeType","headers","XMLHttpRequest","user","password","XDomainRequest","onload","onerror","ontimeout","onreadystatechange","readyState","onprogress","header","send","post","method","open","setRequestHeader","overrideMimeType","type$1","defaultMimeType","createRange","createContextualFragment","responseXML","dsv$1","csv$1","tsv$1","array$2","millisecond","milliseconds","durationSecond$1","durationHour$1","durationDay$1","second","seconds","minute","minutes","hour","hours","tuesday","wednesday","thursday","friday","saturday","sundays","mondays","tuesdays","wednesdays","thursdays","fridays","saturdays","month","setMonth","years","utcMinute","setUTCSeconds","utcMinutes","utcHour","setUTCMinutes","utcHours","utcDays","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcSundays","utcMondays","utcTuesdays","utcWednesdays","utcThursdays","utcFridays","utcSaturdays","utcMonth","setUTCMonth","utcMonths","utcYears","-","0","isoSpecifier","formatIso","parseIso","utcTime","category10","category20b","category20c","category20","cubehelix$3","warm","cool","rainbow","rainbow$1","ts","viridis","magma","inferno","plasma","constant$10","abs$1","atan2$1","cos$2","min$1","sin$2","tau$4","a01","a11","a10","da0","da1","ap","rp","padRadius","cornerRadius","rc0","rc1","oc","kc","lc","areaStart","areaEnd","curveLinear","defined0","defined","area$2","x0z","y0z","arealine","lineX0","lineY0","lineY1","lineX1","descending$1","identity$7","pie","arcs","curveRadialLinear","radialLine$1","radialArea","lineStartAngle","lineEndAngle","lineInnerRadius","lineOuterRadius","circle$2","draw","cross$2","tan30","tan30_2","diamond","ka","kr","star","square","sqrt3","triangle","wye","symbols","noop$2","basis$2","_x3","_x4","_y3","_y4","basisClosed$1","basisOpen","bundle","cardinal","_x5","_y5","cardinalClosed","cardinalOpen","x23","y23","catmullRom","catmullRomClosed","catmullRomOpen","linearClosed","_t0","px","py","natural","slice$5","none$1","none$2","stack","oz","kz","sz","sij","ki","si","expand","silhouette","wiggle","s2","sij0","sij1","s3","skj0","skj1","ascending$2","descending$2","insideOut","tops","bottoms","constant$11","after","grandpa","uncle","sibling","polygons","triangles","_found","voronoi","constant$12","applyX","applyY","location","invertX","invertY","rescaleX","rescaleY","noevent$2","zoom","wheeled","dblclicked","k0","k1","constrain","transition$$1","Gesture","wheelidled","wheel","deltaY","deltaMode","wheelDelay","touch0","touch1","touchstarting","touchDelay","dp","dl","collection","scaleBy","scaleTo","translateBy","scaleExtent","translateExtent","bisect","thresholdFreedmanDiaconis","thresholdScott","thresholdSturges","quantile","dragEnable","dsvFormat","easeLinear","easeQuad","easeQuadIn","easeQuadOut","easeQuadInOut","easeCubic","easeCubicIn","easeCubicOut","easeCubicInOut","easePoly","easePolyIn","easePolyOut","easePolyInOut","easeSin","easeSinIn","easeSinOut","easeSinInOut","easeExp","easeExpIn","easeExpOut","easeExpInOut","easeCircle","easeCircleIn","easeCircleOut","easeCircleInOut","easeBounce","easeBounceIn","easeBounceOut","easeBounceInOut","easeBack","easeBackIn","easeBackOut","easeBackInOut","easeElastic","easeElasticIn","easeElasticOut","easeElasticInOut","forceCenter","forceCollide","forceLink","forceManyBody","forceSimulation","forceX","forceY","formatDefaultLocale","geoArea","geoBounds","geoCentroid","geoCircle","geoClipExtent","geoContains","geoDistance","geoGraticule","geoGraticule10","geoInterpolate","geoLength","geoPath","geoAlbers","geoAlbersUsa","geoAzimuthalEqualArea","geoAzimuthalEqualAreaRaw","geoAzimuthalEquidistant","geoAzimuthalEquidistantRaw","geoConicConformal","geoConicConformalRaw","geoConicEqualArea","geoConicEqualAreaRaw","geoConicEquidistant","geoConicEquidistantRaw","geoEquirectangular","geoEquirectangularRaw","geoGnomonic","geoGnomonicRaw","geoIdentity","geoProjection","geoProjectionMutator","geoMercator","geoMercatorRaw","geoOrthographic","geoOrthographicRaw","geoStereographic","geoStereographicRaw","geoTransverseMercator","geoTransverseMercatorRaw","geoRotation","geoTransform","packSiblings","treemapBinary","treemapSliceDice","treemapSquarify","treemapResquarify","interpolateArray","interpolateBasis","interpolateBasisClosed","interpolateDate","interpolateNumber","interpolateObject","interpolateRgbBasis","interpolateRgbBasisClosed","interpolateHsl","interpolateHslLong","interpolateLab","interpolateHcl","interpolateHclLong","interpolateCubehelix","interpolateCubehelixLong","polygonArea","polygonCentroid","polygonHull","polygonLength","randomUniform","randomLogNormal","randomBates","randomExponential","scaleBand","scalePoint","scaleIdentity","scaleLog","scaleOrdinal","scaleImplicit","scalePow","scaleSqrt","scaleQuantile","scaleQuantize","scaleThreshold","scaleUtc","schemeCategory10","schemeCategory20b","schemeCategory20c","schemeCategory20","interpolateCubehelixDefault","interpolateRainbow","interpolateWarm","interpolateCool","interpolateViridis","interpolateMagma","interpolateInferno","interpolatePlasma","scaleSequential","symbolCircle","symbolCross","symbolDiamond","symbolSquare","symbolStar","symbolTriangle","symbolWye","curveBasisClosed","curveBasisOpen","curveBasis","curveBundle","curveCardinalClosed","curveCardinalOpen","curveCardinal","curveCatmullRomClosed","curveCatmullRomOpen","curveCatmullRom","curveLinearClosed","curveMonotoneX","curveMonotoneY","curveNatural","curveStep","curveStepAfter","curveStepBefore","stackOffsetExpand","stackOffsetNone","stackOffsetSilhouette","stackOffsetWiggle","stackOrderAscending","stackOrderDescending","stackOrderInsideOut","stackOrderNone","stackOrderReverse","timeInterval","timeMillisecond","timeMilliseconds","utcMillisecond","utcMilliseconds","timeSecond","timeSeconds","utcSecond","utcSeconds","timeMinute","timeMinutes","timeHour","timeHours","timeDay","timeDays","timeWeek","timeWeeks","timeSunday","timeSundays","timeMonday","timeMondays","timeTuesday","timeTuesdays","timeWednesday","timeWednesdays","timeThursday","timeThursdays","timeFriday","timeFridays","timeSaturday","timeSaturdays","timeMonth","timeMonths","timeYears","utcWeek","utcWeeks","timeFormatDefaultLocale","timeFormatLocale","isoFormat","isoParse","zoomTransform","zoomIdentity","defineProperty","toObject","val","shouldUseNative","assign","test1","String","getOwnPropertyNames","test2","fromCharCode","order2","test3","letter","err","getOwnPropertySymbols","propIsEnumerable","propertyIsEnumerable","valuePromise","TRUE","FALSE","NULL","UNDEFINED","ZERO","EMPTYSTRING","all","arr","remaining","race","disable","enabled","enable","options","onUnhandled","allRejections","matchWhitelist","rejections","whitelist","DEFAULT_WHITELIST","displayId","logged","logError","onHandled","console","warn","_72","errStr","some","cls","ReferenceError","RangeError","normalizeName","normalizeValue","iteratorFor","items","iterator","support","iterable","Symbol","Headers","consumed","body","bodyUsed","fileReaderReady","reader","readBlobAsArrayBuffer","blob","FileReader","readAsArrayBuffer","readBlobAsText","readAsText","readArrayBufferAsText","buf","Uint8Array","chars","bufferClone","byteLength","Body","_initBody","_bodyInit","_bodyText","Blob","isPrototypeOf","_bodyBlob","formData","FormData","_bodyFormData","searchParams","URLSearchParams","arrayBuffer","isDataView","_bodyArrayBuffer","ArrayBuffer","isArrayBufferView","rejected","decode","normalizeMethod","upcased","Request","credentials","referrer","form","bytes","decodeURIComponent","parseHeaders","rawHeaders","parts","Response","bodyInit","ok","statusText","viewClasses","DataView","isView","oldValue","thisArg","clone","redirectStatuses","redirect","getAllResponseHeaders","responseURL","withCredentials","polyfill"],"mappings":"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","file":"static/js/main.1aa46ae1.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/bar-chart-dataviz/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(9);\n\tmodule.exports = __webpack_require__(3);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar asap = __webpack_require__(2);\n\t\n\tfunction noop() {}\n\t\n\t// States:\n\t//\n\t// 0 - pending\n\t// 1 - fulfilled with _value\n\t// 2 - rejected with _value\n\t// 3 - adopted the state of another promise, _value\n\t//\n\t// once the state is no longer pending (0) it is immutable\n\t\n\t// All `_` prefixed properties will be reduced to `_{random number}`\n\t// at build time to obfuscate them and discourage their use.\n\t// We don't use symbols or Object.defineProperty to fully hide them\n\t// because the performance isn't good enough.\n\t\n\t\n\t// to avoid using try/catch inside critical functions, we\n\t// extract them to here.\n\tvar LAST_ERROR = null;\n\tvar IS_ERROR = {};\n\tfunction getThen(obj) {\n\t  try {\n\t    return obj.then;\n\t  } catch (ex) {\n\t    LAST_ERROR = ex;\n\t    return IS_ERROR;\n\t  }\n\t}\n\t\n\tfunction tryCallOne(fn, a) {\n\t  try {\n\t    return fn(a);\n\t  } catch (ex) {\n\t    LAST_ERROR = ex;\n\t    return IS_ERROR;\n\t  }\n\t}\n\tfunction tryCallTwo(fn, a, b) {\n\t  try {\n\t    fn(a, b);\n\t  } catch (ex) {\n\t    LAST_ERROR = ex;\n\t    return IS_ERROR;\n\t  }\n\t}\n\t\n\tmodule.exports = Promise;\n\t\n\tfunction Promise(fn) {\n\t  if (typeof this !== 'object') {\n\t    throw new TypeError('Promises must be constructed via new');\n\t  }\n\t  if (typeof fn !== 'function') {\n\t    throw new TypeError('not a function');\n\t  }\n\t  this._45 = 0;\n\t  this._81 = 0;\n\t  this._65 = null;\n\t  this._54 = null;\n\t  if (fn === noop) return;\n\t  doResolve(fn, this);\n\t}\n\tPromise._10 = null;\n\tPromise._97 = null;\n\tPromise._61 = noop;\n\t\n\tPromise.prototype.then = function(onFulfilled, onRejected) {\n\t  if (this.constructor !== Promise) {\n\t    return safeThen(this, onFulfilled, onRejected);\n\t  }\n\t  var res = new Promise(noop);\n\t  handle(this, new Handler(onFulfilled, onRejected, res));\n\t  return res;\n\t};\n\t\n\tfunction safeThen(self, onFulfilled, onRejected) {\n\t  return new self.constructor(function (resolve, reject) {\n\t    var res = new Promise(noop);\n\t    res.then(resolve, reject);\n\t    handle(self, new Handler(onFulfilled, onRejected, res));\n\t  });\n\t};\n\tfunction handle(self, deferred) {\n\t  while (self._81 === 3) {\n\t    self = self._65;\n\t  }\n\t  if (Promise._10) {\n\t    Promise._10(self);\n\t  }\n\t  if (self._81 === 0) {\n\t    if (self._45 === 0) {\n\t      self._45 = 1;\n\t      self._54 = deferred;\n\t      return;\n\t    }\n\t    if (self._45 === 1) {\n\t      self._45 = 2;\n\t      self._54 = [self._54, deferred];\n\t      return;\n\t    }\n\t    self._54.push(deferred);\n\t    return;\n\t  }\n\t  handleResolved(self, deferred);\n\t}\n\t\n\tfunction handleResolved(self, deferred) {\n\t  asap(function() {\n\t    var cb = self._81 === 1 ? deferred.onFulfilled : deferred.onRejected;\n\t    if (cb === null) {\n\t      if (self._81 === 1) {\n\t        resolve(deferred.promise, self._65);\n\t      } else {\n\t        reject(deferred.promise, self._65);\n\t      }\n\t      return;\n\t    }\n\t    var ret = tryCallOne(cb, self._65);\n\t    if (ret === IS_ERROR) {\n\t      reject(deferred.promise, LAST_ERROR);\n\t    } else {\n\t      resolve(deferred.promise, ret);\n\t    }\n\t  });\n\t}\n\tfunction resolve(self, newValue) {\n\t  // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n\t  if (newValue === self) {\n\t    return reject(\n\t      self,\n\t      new TypeError('A promise cannot be resolved with itself.')\n\t    );\n\t  }\n\t  if (\n\t    newValue &&\n\t    (typeof newValue === 'object' || typeof newValue === 'function')\n\t  ) {\n\t    var then = getThen(newValue);\n\t    if (then === IS_ERROR) {\n\t      return reject(self, LAST_ERROR);\n\t    }\n\t    if (\n\t      then === self.then &&\n\t      newValue instanceof Promise\n\t    ) {\n\t      self._81 = 3;\n\t      self._65 = newValue;\n\t      finale(self);\n\t      return;\n\t    } else if (typeof then === 'function') {\n\t      doResolve(then.bind(newValue), self);\n\t      return;\n\t    }\n\t  }\n\t  self._81 = 1;\n\t  self._65 = newValue;\n\t  finale(self);\n\t}\n\t\n\tfunction reject(self, newValue) {\n\t  self._81 = 2;\n\t  self._65 = newValue;\n\t  if (Promise._97) {\n\t    Promise._97(self, newValue);\n\t  }\n\t  finale(self);\n\t}\n\tfunction finale(self) {\n\t  if (self._45 === 1) {\n\t    handle(self, self._54);\n\t    self._54 = null;\n\t  }\n\t  if (self._45 === 2) {\n\t    for (var i = 0; i < self._54.length; i++) {\n\t      handle(self, self._54[i]);\n\t    }\n\t    self._54 = null;\n\t  }\n\t}\n\t\n\tfunction Handler(onFulfilled, onRejected, promise){\n\t  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n\t  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n\t  this.promise = promise;\n\t}\n\t\n\t/**\n\t * Take a potentially misbehaving resolver function and make sure\n\t * onFulfilled and onRejected are only called once.\n\t *\n\t * Makes no guarantees about asynchrony.\n\t */\n\tfunction doResolve(fn, promise) {\n\t  var done = false;\n\t  var res = tryCallTwo(fn, function (value) {\n\t    if (done) return;\n\t    done = true;\n\t    resolve(promise, value);\n\t  }, function (reason) {\n\t    if (done) return;\n\t    done = true;\n\t    reject(promise, reason);\n\t  })\n\t  if (!done && res === IS_ERROR) {\n\t    done = true;\n\t    reject(promise, LAST_ERROR);\n\t  }\n\t}\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {\"use strict\";\n\t\n\t// Use the fastest means possible to execute a task in its own turn, with\n\t// priority over other events including IO, animation, reflow, and redraw\n\t// events in browsers.\n\t//\n\t// An exception thrown by a task will permanently interrupt the processing of\n\t// subsequent tasks. The higher level `asap` function ensures that if an\n\t// exception is thrown by a task, that the task queue will continue flushing as\n\t// soon as possible, but if you use `rawAsap` directly, you are responsible to\n\t// either ensure that no exceptions are thrown from your task, or to manually\n\t// call `rawAsap.requestFlush` if an exception is thrown.\n\tmodule.exports = rawAsap;\n\tfunction rawAsap(task) {\n\t    if (!queue.length) {\n\t        requestFlush();\n\t        flushing = true;\n\t    }\n\t    // Equivalent to push, but avoids a function call.\n\t    queue[queue.length] = task;\n\t}\n\t\n\tvar queue = [];\n\t// Once a flush has been requested, no further calls to `requestFlush` are\n\t// necessary until the next `flush` completes.\n\tvar flushing = false;\n\t// `requestFlush` is an implementation-specific method that attempts to kick\n\t// off a `flush` event as quickly as possible. `flush` will attempt to exhaust\n\t// the event queue before yielding to the browser's own event loop.\n\tvar requestFlush;\n\t// The position of the next task to execute in the task queue. This is\n\t// preserved between calls to `flush` so that it can be resumed if\n\t// a task throws an exception.\n\tvar index = 0;\n\t// If a task schedules additional tasks recursively, the task queue can grow\n\t// unbounded. To prevent memory exhaustion, the task queue will periodically\n\t// truncate already-completed tasks.\n\tvar capacity = 1024;\n\t\n\t// The flush function processes all tasks that have been scheduled with\n\t// `rawAsap` unless and until one of those tasks throws an exception.\n\t// If a task throws an exception, `flush` ensures that its state will remain\n\t// consistent and will resume where it left off when called again.\n\t// However, `flush` does not make any arrangements to be called again if an\n\t// exception is thrown.\n\tfunction flush() {\n\t    while (index < queue.length) {\n\t        var currentIndex = index;\n\t        // Advance the index before calling the task. This ensures that we will\n\t        // begin flushing on the next task the task throws an error.\n\t        index = index + 1;\n\t        queue[currentIndex].call();\n\t        // Prevent leaking memory for long chains of recursive calls to `asap`.\n\t        // If we call `asap` within tasks scheduled by `asap`, the queue will\n\t        // grow, but to avoid an O(n) walk for every task we execute, we don't\n\t        // shift tasks off the queue after they have been executed.\n\t        // Instead, we periodically shift 1024 tasks off the queue.\n\t        if (index > capacity) {\n\t            // Manually shift all values starting at the index back to the\n\t            // beginning of the queue.\n\t            for (var scan = 0, newLength = queue.length - index; scan < newLength; scan++) {\n\t                queue[scan] = queue[scan + index];\n\t            }\n\t            queue.length -= index;\n\t            index = 0;\n\t        }\n\t    }\n\t    queue.length = 0;\n\t    index = 0;\n\t    flushing = false;\n\t}\n\t\n\t// `requestFlush` is implemented using a strategy based on data collected from\n\t// every available SauceLabs Selenium web driver worker at time of writing.\n\t// https://docs.google.com/spreadsheets/d/1mG-5UYGup5qxGdEMWkhP6BWCz053NUb2E1QoUTU16uA/edit#gid=783724593\n\t\n\t// Safari 6 and 6.1 for desktop, iPad, and iPhone are the only browsers that\n\t// have WebKitMutationObserver but not un-prefixed MutationObserver.\n\t// Must use `global` or `self` instead of `window` to work in both frames and web\n\t// workers. `global` is a provision of Browserify, Mr, Mrs, or Mop.\n\t\n\t/* globals self */\n\tvar scope = typeof global !== \"undefined\" ? global : self;\n\tvar BrowserMutationObserver = scope.MutationObserver || scope.WebKitMutationObserver;\n\t\n\t// MutationObservers are desirable because they have high priority and work\n\t// reliably everywhere they are implemented.\n\t// They are implemented in all modern browsers.\n\t//\n\t// - Android 4-4.3\n\t// - Chrome 26-34\n\t// - Firefox 14-29\n\t// - Internet Explorer 11\n\t// - iPad Safari 6-7.1\n\t// - iPhone Safari 7-7.1\n\t// - Safari 6-7\n\tif (typeof BrowserMutationObserver === \"function\") {\n\t    requestFlush = makeRequestCallFromMutationObserver(flush);\n\t\n\t// MessageChannels are desirable because they give direct access to the HTML\n\t// task queue, are implemented in Internet Explorer 10, Safari 5.0-1, and Opera\n\t// 11-12, and in web workers in many engines.\n\t// Although message channels yield to any queued rendering and IO tasks, they\n\t// would be better than imposing the 4ms delay of timers.\n\t// However, they do not work reliably in Internet Explorer or Safari.\n\t\n\t// Internet Explorer 10 is the only browser that has setImmediate but does\n\t// not have MutationObservers.\n\t// Although setImmediate yields to the browser's renderer, it would be\n\t// preferrable to falling back to setTimeout since it does not have\n\t// the minimum 4ms penalty.\n\t// Unfortunately there appears to be a bug in Internet Explorer 10 Mobile (and\n\t// Desktop to a lesser extent) that renders both setImmediate and\n\t// MessageChannel useless for the purposes of ASAP.\n\t// https://github.com/kriskowal/q/issues/396\n\t\n\t// Timers are implemented universally.\n\t// We fall back to timers in workers in most engines, and in foreground\n\t// contexts in the following browsers.\n\t// However, note that even this simple case requires nuances to operate in a\n\t// broad spectrum of browsers.\n\t//\n\t// - Firefox 3-13\n\t// - Internet Explorer 6-9\n\t// - iPad Safari 4.3\n\t// - Lynx 2.8.7\n\t} else {\n\t    requestFlush = makeRequestCallFromTimer(flush);\n\t}\n\t\n\t// `requestFlush` requests that the high priority event queue be flushed as\n\t// soon as possible.\n\t// This is useful to prevent an error thrown in a task from stalling the event\n\t// queue if the exception handled by Node.js’s\n\t// `process.on(\"uncaughtException\")` or by a domain.\n\trawAsap.requestFlush = requestFlush;\n\t\n\t// To request a high priority event, we induce a mutation observer by toggling\n\t// the text of a text node between \"1\" and \"-1\".\n\tfunction makeRequestCallFromMutationObserver(callback) {\n\t    var toggle = 1;\n\t    var observer = new BrowserMutationObserver(callback);\n\t    var node = document.createTextNode(\"\");\n\t    observer.observe(node, {characterData: true});\n\t    return function requestCall() {\n\t        toggle = -toggle;\n\t        node.data = toggle;\n\t    };\n\t}\n\t\n\t// The message channel technique was discovered by Malte Ubl and was the\n\t// original foundation for this library.\n\t// http://www.nonblocking.io/2011/06/windownexttick.html\n\t\n\t// Safari 6.0.5 (at least) intermittently fails to create message ports on a\n\t// page's first load. Thankfully, this version of Safari supports\n\t// MutationObservers, so we don't need to fall back in that case.\n\t\n\t// function makeRequestCallFromMessageChannel(callback) {\n\t//     var channel = new MessageChannel();\n\t//     channel.port1.onmessage = callback;\n\t//     return function requestCall() {\n\t//         channel.port2.postMessage(0);\n\t//     };\n\t// }\n\t\n\t// For reasons explained above, we are also unable to use `setImmediate`\n\t// under any circumstances.\n\t// Even if we were, there is another bug in Internet Explorer 10.\n\t// It is not sufficient to assign `setImmediate` to `requestFlush` because\n\t// `setImmediate` must be called *by name* and therefore must be wrapped in a\n\t// closure.\n\t// Never forget.\n\t\n\t// function makeRequestCallFromSetImmediate(callback) {\n\t//     return function requestCall() {\n\t//         setImmediate(callback);\n\t//     };\n\t// }\n\t\n\t// Safari 6.0 has a problem where timers will get lost while the user is\n\t// scrolling. This problem does not impact ASAP because Safari 6.0 supports\n\t// mutation observers, so that implementation is used instead.\n\t// However, if we ever elect to use timers in Safari, the prevalent work-around\n\t// is to add a scroll event listener that calls for a flush.\n\t\n\t// `setTimeout` does not call the passed callback if the delay is less than\n\t// approximately 7 in web workers in Firefox 8 through 18, and sometimes not\n\t// even then.\n\t\n\tfunction makeRequestCallFromTimer(callback) {\n\t    return function requestCall() {\n\t        // We dispatch a timeout with a specified delay of 0 for engines that\n\t        // can reliably accommodate that request. This will usually be snapped\n\t        // to a 4 milisecond delay, but once we're flushing, there's no delay\n\t        // between events.\n\t        var timeoutHandle = setTimeout(handleTimer, 0);\n\t        // However, since this timer gets frequently dropped in Firefox\n\t        // workers, we enlist an interval handle that will try to fire\n\t        // an event 20 times per second until it succeeds.\n\t        var intervalHandle = setInterval(handleTimer, 50);\n\t\n\t        function handleTimer() {\n\t            // Whichever timer succeeds will cancel both timers and\n\t            // execute the callback.\n\t            clearTimeout(timeoutHandle);\n\t            clearInterval(intervalHandle);\n\t            callback();\n\t        }\n\t    };\n\t}\n\t\n\t// This is for `asap.js` only.\n\t// Its name will be periodically randomized to break any code that depends on\n\t// its existence.\n\trawAsap.makeRequestCallFromTimer = makeRequestCallFromTimer;\n\t\n\t// ASAP was originally a nextTick shim included in Q. This was factored out\n\t// into this ASAP package. It was later adapted to RSVP which made further\n\t// amendments. These decisions, particularly to marginalize MessageChannel and\n\t// to capture the MutationObserver implementation in a closure, were integrated\n\t// back into ASAP proper.\n\t// https://github.com/tildeio/rsvp.js/blob/cddf7232546a9cf858524b75cde6f9edf72620a7/lib/rsvp/asap.js\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t__webpack_require__(5);\n\t\n\tvar _d = __webpack_require__(4);\n\t\n\tvar d3 = _interopRequireWildcard(_d);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tvar url = 'https://raw.githubusercontent.com/FreeCodeCamp/ProjectReferenceData/master/GDP-data.json';\n\t\n\tvar data = void 0;\n\tvar formatTime = d3.timeFormat(\"%e %b %Y\");\n\tvar formatValue = d3.format(\"$,.2f\");\n\t\n\tvar margin = {\n\t  top: 40,\n\t  right: 20,\n\t  bottom: 40,\n\t  left: 60\n\t},\n\t    width = 1000 - margin.left - margin.right,\n\t    height = 600 - margin.top - margin.bottom;\n\t\n\tvar svg = d3.select(\".chart\").append(\"svg\").attr(\"width\", width + margin.left + margin.right).attr(\"height\", height + margin.top + margin.bottom).append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\t\n\tfetch(url).then(function (response) {\n\t  return response.json();\n\t}).then(function (json) {\n\t  data = json;\n\t  buildSVG();\n\t});\n\t\n\tfunction buildSVG() {\n\t  var minDate = new Date(data.data[0][0]);\n\t  var maxDate = new Date(data.data[data.data.length - 1][0]);\n\t  var x = d3.scaleTime().range([0, width]);\n\t  var y = d3.scaleLinear().range([height, 0]);\n\t  var barWidth = Math.ceil(width / data.data.length);\n\t\n\t  x.domain([minDate, maxDate]);\n\t  x.ticks(d3.timeYear.every(1));\n\t  y.domain([0, d3.max(data.data, function (d) {\n\t    return d[1];\n\t  })]);\n\t\n\t  var div = d3.select(\"body\").append(\"div\").attr(\"class\", \"tooltip\").style(\"opacity\", 0);\n\t  var title = d3.select(\".title\").html(data.name);\n\t  svg.selectAll(\".bar\").data(data.data).enter().append(\"rect\").attr(\"class\", \"bar\").attr(\"x\", function (d) {\n\t    return x(new Date(d[0]));\n\t  }).attr(\"width\", barWidth).attr(\"y\", function (d) {\n\t    return y(d[1]);\n\t  }).attr(\"height\", function (d) {\n\t    return height - y(d[1]);\n\t  }).on(\"mouseover\", function (d) {\n\t    div.transition().duration(200).style(\"opacity\", .9);\n\t    div.html(formatTime(new Date(d[0])) + \"<br/>\" + formatValue(d[1])).style(\"left\", d3.event.pageX + \"px\").style(\"top\", d3.event.pageY - 28 + \"px\");\n\t  }).on(\"mouseout\", function (d) {\n\t    div.transition().duration(500).style(\"opacity\", 0);\n\t  });\n\t\n\t  svg.append(\"g\").attr(\"transform\", \"translate(0,\" + height + \")\").call(d3.axisBottom(x));\n\t\n\t  svg.append(\"g\").call(d3.axisLeft(y));\n\t}\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// https://d3js.org Version 4.8.0. Copyright 2017 Mike Bostock.\n\t(function (global, factory) {\n\t\t true ? factory(exports) :\n\t\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t\t(factory((global.d3 = global.d3 || {})));\n\t}(this, (function (exports) { 'use strict';\n\t\n\tvar version = \"4.8.0\";\n\t\n\tvar ascending = function(a, b) {\n\t  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n\t};\n\t\n\tvar bisector = function(compare) {\n\t  if (compare.length === 1) compare = ascendingComparator(compare);\n\t  return {\n\t    left: function(a, x, lo, hi) {\n\t      if (lo == null) lo = 0;\n\t      if (hi == null) hi = a.length;\n\t      while (lo < hi) {\n\t        var mid = lo + hi >>> 1;\n\t        if (compare(a[mid], x) < 0) lo = mid + 1;\n\t        else hi = mid;\n\t      }\n\t      return lo;\n\t    },\n\t    right: function(a, x, lo, hi) {\n\t      if (lo == null) lo = 0;\n\t      if (hi == null) hi = a.length;\n\t      while (lo < hi) {\n\t        var mid = lo + hi >>> 1;\n\t        if (compare(a[mid], x) > 0) hi = mid;\n\t        else lo = mid + 1;\n\t      }\n\t      return lo;\n\t    }\n\t  };\n\t};\n\t\n\tfunction ascendingComparator(f) {\n\t  return function(d, x) {\n\t    return ascending(f(d), x);\n\t  };\n\t}\n\t\n\tvar ascendingBisect = bisector(ascending);\n\tvar bisectRight = ascendingBisect.right;\n\tvar bisectLeft = ascendingBisect.left;\n\t\n\tvar pairs = function(array, f) {\n\t  if (f == null) f = pair;\n\t  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n\t  while (i < n) pairs[i] = f(p, p = array[++i]);\n\t  return pairs;\n\t};\n\t\n\tfunction pair(a, b) {\n\t  return [a, b];\n\t}\n\t\n\tvar cross = function(values0, values1, reduce) {\n\t  var n0 = values0.length,\n\t      n1 = values1.length,\n\t      values = new Array(n0 * n1),\n\t      i0,\n\t      i1,\n\t      i,\n\t      value0;\n\t\n\t  if (reduce == null) reduce = pair;\n\t\n\t  for (i0 = i = 0; i0 < n0; ++i0) {\n\t    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n\t      values[i] = reduce(value0, values1[i1]);\n\t    }\n\t  }\n\t\n\t  return values;\n\t};\n\t\n\tvar descending = function(a, b) {\n\t  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n\t};\n\t\n\tvar number = function(x) {\n\t  return x === null ? NaN : +x;\n\t};\n\t\n\tvar variance = function(values, valueof) {\n\t  var n = values.length,\n\t      m = 0,\n\t      i = -1,\n\t      mean = 0,\n\t      value,\n\t      delta,\n\t      sum = 0;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(values[i]))) {\n\t        delta = value - mean;\n\t        mean += delta / ++m;\n\t        sum += delta * (value - mean);\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n\t        delta = value - mean;\n\t        mean += delta / ++m;\n\t        sum += delta * (value - mean);\n\t      }\n\t    }\n\t  }\n\t\n\t  if (m > 1) return sum / (m - 1);\n\t};\n\t\n\tvar deviation = function(array, f) {\n\t  var v = variance(array, f);\n\t  return v ? Math.sqrt(v) : v;\n\t};\n\t\n\tvar extent = function(values, valueof) {\n\t  var n = values.length,\n\t      i = -1,\n\t      value,\n\t      min,\n\t      max;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = values[i]) != null && value >= value) {\n\t        min = max = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = values[i]) != null) {\n\t            if (min > value) min = value;\n\t            if (max < value) max = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n\t        min = max = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = valueof(values[i], i, values)) != null) {\n\t            if (min > value) min = value;\n\t            if (max < value) max = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  return [min, max];\n\t};\n\t\n\tvar array = Array.prototype;\n\t\n\tvar slice = array.slice;\n\tvar map = array.map;\n\t\n\tvar constant = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar identity = function(x) {\n\t  return x;\n\t};\n\t\n\tvar sequence = function(start, stop, step) {\n\t  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\t\n\t  var i = -1,\n\t      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n\t      range = new Array(n);\n\t\n\t  while (++i < n) {\n\t    range[i] = start + i * step;\n\t  }\n\t\n\t  return range;\n\t};\n\t\n\tvar e10 = Math.sqrt(50);\n\tvar e5 = Math.sqrt(10);\n\tvar e2 = Math.sqrt(2);\n\t\n\tvar ticks = function(start, stop, count) {\n\t  var reverse = stop < start,\n\t      i = -1,\n\t      n,\n\t      ticks,\n\t      step;\n\t\n\t  if (reverse) n = start, start = stop, stop = n;\n\t\n\t  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\t\n\t  if (step > 0) {\n\t    start = Math.ceil(start / step);\n\t    stop = Math.floor(stop / step);\n\t    ticks = new Array(n = Math.ceil(stop - start + 1));\n\t    while (++i < n) ticks[i] = (start + i) * step;\n\t  } else {\n\t    start = Math.floor(start * step);\n\t    stop = Math.ceil(stop * step);\n\t    ticks = new Array(n = Math.ceil(start - stop + 1));\n\t    while (++i < n) ticks[i] = (start - i) / step;\n\t  }\n\t\n\t  if (reverse) ticks.reverse();\n\t\n\t  return ticks;\n\t};\n\t\n\tfunction tickIncrement(start, stop, count) {\n\t  var step = (stop - start) / Math.max(0, count),\n\t      power = Math.floor(Math.log(step) / Math.LN10),\n\t      error = step / Math.pow(10, power);\n\t  return power >= 0\n\t      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n\t      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n\t}\n\t\n\tfunction tickStep(start, stop, count) {\n\t  var step0 = Math.abs(stop - start) / Math.max(0, count),\n\t      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n\t      error = step0 / step1;\n\t  if (error >= e10) step1 *= 10;\n\t  else if (error >= e5) step1 *= 5;\n\t  else if (error >= e2) step1 *= 2;\n\t  return stop < start ? -step1 : step1;\n\t}\n\t\n\tvar sturges = function(values) {\n\t  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n\t};\n\t\n\tvar histogram = function() {\n\t  var value = identity,\n\t      domain = extent,\n\t      threshold = sturges;\n\t\n\t  function histogram(data) {\n\t    var i,\n\t        n = data.length,\n\t        x,\n\t        values = new Array(n);\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      values[i] = value(data[i], i, data);\n\t    }\n\t\n\t    var xz = domain(values),\n\t        x0 = xz[0],\n\t        x1 = xz[1],\n\t        tz = threshold(values, x0, x1);\n\t\n\t    // Convert number of thresholds into uniform thresholds.\n\t    if (!Array.isArray(tz)) {\n\t      tz = tickStep(x0, x1, tz);\n\t      tz = sequence(Math.ceil(x0 / tz) * tz, Math.floor(x1 / tz) * tz, tz); // exclusive\n\t    }\n\t\n\t    // Remove any thresholds outside the domain.\n\t    var m = tz.length;\n\t    while (tz[0] <= x0) tz.shift(), --m;\n\t    while (tz[m - 1] > x1) tz.pop(), --m;\n\t\n\t    var bins = new Array(m + 1),\n\t        bin;\n\t\n\t    // Initialize bins.\n\t    for (i = 0; i <= m; ++i) {\n\t      bin = bins[i] = [];\n\t      bin.x0 = i > 0 ? tz[i - 1] : x0;\n\t      bin.x1 = i < m ? tz[i] : x1;\n\t    }\n\t\n\t    // Assign data to bins by value, ignoring any outside the domain.\n\t    for (i = 0; i < n; ++i) {\n\t      x = values[i];\n\t      if (x0 <= x && x <= x1) {\n\t        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n\t      }\n\t    }\n\t\n\t    return bins;\n\t  }\n\t\n\t  histogram.value = function(_) {\n\t    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n\t  };\n\t\n\t  histogram.domain = function(_) {\n\t    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n\t  };\n\t\n\t  histogram.thresholds = function(_) {\n\t    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n\t  };\n\t\n\t  return histogram;\n\t};\n\t\n\tvar threshold = function(values, p, valueof) {\n\t  if (valueof == null) valueof = number;\n\t  if (!(n = values.length)) return;\n\t  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n\t  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n\t  var n,\n\t      i = (n - 1) * p,\n\t      i0 = Math.floor(i),\n\t      value0 = +valueof(values[i0], i0, values),\n\t      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n\t  return value0 + (value1 - value0) * (i - i0);\n\t};\n\t\n\tvar freedmanDiaconis = function(values, min, max) {\n\t  values = map.call(values, number).sort(ascending);\n\t  return Math.ceil((max - min) / (2 * (threshold(values, 0.75) - threshold(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n\t};\n\t\n\tvar scott = function(values, min, max) {\n\t  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n\t};\n\t\n\tvar max = function(values, valueof) {\n\t  var n = values.length,\n\t      i = -1,\n\t      value,\n\t      max;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = values[i]) != null && value >= value) {\n\t        max = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = values[i]) != null && value > max) {\n\t            max = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n\t        max = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = valueof(values[i], i, values)) != null && value > max) {\n\t            max = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  return max;\n\t};\n\t\n\tvar mean = function(values, valueof) {\n\t  var n = values.length,\n\t      m = n,\n\t      i = -1,\n\t      value,\n\t      sum = 0;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(values[i]))) sum += value;\n\t      else --m;\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(valueof(values[i], i, values)))) sum += value;\n\t      else --m;\n\t    }\n\t  }\n\t\n\t  if (m) return sum / m;\n\t};\n\t\n\tvar median = function(values, valueof) {\n\t  var n = values.length,\n\t      i = -1,\n\t      value,\n\t      numbers = [];\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(values[i]))) {\n\t        numbers.push(value);\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n\t        numbers.push(value);\n\t      }\n\t    }\n\t  }\n\t\n\t  return threshold(numbers.sort(ascending), 0.5);\n\t};\n\t\n\tvar merge = function(arrays) {\n\t  var n = arrays.length,\n\t      m,\n\t      i = -1,\n\t      j = 0,\n\t      merged,\n\t      array;\n\t\n\t  while (++i < n) j += arrays[i].length;\n\t  merged = new Array(j);\n\t\n\t  while (--n >= 0) {\n\t    array = arrays[n];\n\t    m = array.length;\n\t    while (--m >= 0) {\n\t      merged[--j] = array[m];\n\t    }\n\t  }\n\t\n\t  return merged;\n\t};\n\t\n\tvar min = function(values, valueof) {\n\t  var n = values.length,\n\t      i = -1,\n\t      value,\n\t      min;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = values[i]) != null && value >= value) {\n\t        min = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = values[i]) != null && min > value) {\n\t            min = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n\t        min = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = valueof(values[i], i, values)) != null && min > value) {\n\t            min = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  return min;\n\t};\n\t\n\tvar permute = function(array, indexes) {\n\t  var i = indexes.length, permutes = new Array(i);\n\t  while (i--) permutes[i] = array[indexes[i]];\n\t  return permutes;\n\t};\n\t\n\tvar scan = function(values, compare) {\n\t  if (!(n = values.length)) return;\n\t  var n,\n\t      i = 0,\n\t      j = 0,\n\t      xi,\n\t      xj = values[j];\n\t\n\t  if (compare == null) compare = ascending;\n\t\n\t  while (++i < n) {\n\t    if (compare(xi = values[i], xj) < 0 || compare(xj, xj) !== 0) {\n\t      xj = xi, j = i;\n\t    }\n\t  }\n\t\n\t  if (compare(xj, xj) === 0) return j;\n\t};\n\t\n\tvar shuffle = function(array, i0, i1) {\n\t  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n\t      t,\n\t      i;\n\t\n\t  while (m) {\n\t    i = Math.random() * m-- | 0;\n\t    t = array[m + i0];\n\t    array[m + i0] = array[i + i0];\n\t    array[i + i0] = t;\n\t  }\n\t\n\t  return array;\n\t};\n\t\n\tvar sum = function(values, valueof) {\n\t  var n = values.length,\n\t      i = -1,\n\t      value,\n\t      sum = 0;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) {\n\t      if (value = +values[i]) sum += value; // Note: zero and null are equivalent.\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) {\n\t      if (value = +valueof(values[i], i, values)) sum += value;\n\t    }\n\t  }\n\t\n\t  return sum;\n\t};\n\t\n\tvar transpose = function(matrix) {\n\t  if (!(n = matrix.length)) return [];\n\t  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n\t    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n\t      row[j] = matrix[j][i];\n\t    }\n\t  }\n\t  return transpose;\n\t};\n\t\n\tfunction length(d) {\n\t  return d.length;\n\t}\n\t\n\tvar zip = function() {\n\t  return transpose(arguments);\n\t};\n\t\n\tvar slice$1 = Array.prototype.slice;\n\t\n\tvar identity$1 = function(x) {\n\t  return x;\n\t};\n\t\n\tvar top = 1;\n\tvar right = 2;\n\tvar bottom = 3;\n\tvar left = 4;\n\tvar epsilon = 1e-6;\n\t\n\tfunction translateX(x) {\n\t  return \"translate(\" + x + \",0)\";\n\t}\n\t\n\tfunction translateY(y) {\n\t  return \"translate(0,\" + y + \")\";\n\t}\n\t\n\tfunction center(scale) {\n\t  var offset = scale.bandwidth() / 2;\n\t  if (scale.round()) offset = Math.round(offset);\n\t  return function(d) {\n\t    return scale(d) + offset;\n\t  };\n\t}\n\t\n\tfunction entering() {\n\t  return !this.__axis;\n\t}\n\t\n\tfunction axis(orient, scale) {\n\t  var tickArguments = [],\n\t      tickValues = null,\n\t      tickFormat = null,\n\t      tickSizeInner = 6,\n\t      tickSizeOuter = 6,\n\t      tickPadding = 3,\n\t      k = orient === top || orient === left ? -1 : 1,\n\t      x, y = orient === left || orient === right ? (x = \"x\", \"y\") : (x = \"y\", \"x\"),\n\t      transform = orient === top || orient === bottom ? translateX : translateY;\n\t\n\t  function axis(context) {\n\t    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n\t        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity$1) : tickFormat,\n\t        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n\t        range = scale.range(),\n\t        range0 = range[0] + 0.5,\n\t        range1 = range[range.length - 1] + 0.5,\n\t        position = (scale.bandwidth ? center : identity$1)(scale.copy()),\n\t        selection = context.selection ? context.selection() : context,\n\t        path = selection.selectAll(\".domain\").data([null]),\n\t        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n\t        tickExit = tick.exit(),\n\t        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n\t        line = tick.select(\"line\"),\n\t        text = tick.select(\"text\");\n\t\n\t    path = path.merge(path.enter().insert(\"path\", \".tick\")\n\t        .attr(\"class\", \"domain\")\n\t        .attr(\"stroke\", \"#000\"));\n\t\n\t    tick = tick.merge(tickEnter);\n\t\n\t    line = line.merge(tickEnter.append(\"line\")\n\t        .attr(\"stroke\", \"#000\")\n\t        .attr(x + \"2\", k * tickSizeInner)\n\t        .attr(y + \"1\", 0.5)\n\t        .attr(y + \"2\", 0.5));\n\t\n\t    text = text.merge(tickEnter.append(\"text\")\n\t        .attr(\"fill\", \"#000\")\n\t        .attr(x, k * spacing)\n\t        .attr(y, 0.5)\n\t        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\t\n\t    if (context !== selection) {\n\t      path = path.transition(context);\n\t      tick = tick.transition(context);\n\t      line = line.transition(context);\n\t      text = text.transition(context);\n\t\n\t      tickExit = tickExit.transition(context)\n\t          .attr(\"opacity\", epsilon)\n\t          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\n\t\n\t      tickEnter\n\t          .attr(\"opacity\", epsilon)\n\t          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n\t    }\n\t\n\t    tickExit.remove();\n\t\n\t    path\n\t        .attr(\"d\", orient === left || orient == right\n\t            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n\t            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\t\n\t    tick\n\t        .attr(\"opacity\", 1)\n\t        .attr(\"transform\", function(d) { return transform(position(d)); });\n\t\n\t    line\n\t        .attr(x + \"2\", k * tickSizeInner);\n\t\n\t    text\n\t        .attr(x, k * spacing)\n\t        .text(format);\n\t\n\t    selection.filter(entering)\n\t        .attr(\"fill\", \"none\")\n\t        .attr(\"font-size\", 10)\n\t        .attr(\"font-family\", \"sans-serif\")\n\t        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\t\n\t    selection\n\t        .each(function() { this.__axis = position; });\n\t  }\n\t\n\t  axis.scale = function(_) {\n\t    return arguments.length ? (scale = _, axis) : scale;\n\t  };\n\t\n\t  axis.ticks = function() {\n\t    return tickArguments = slice$1.call(arguments), axis;\n\t  };\n\t\n\t  axis.tickArguments = function(_) {\n\t    return arguments.length ? (tickArguments = _ == null ? [] : slice$1.call(_), axis) : tickArguments.slice();\n\t  };\n\t\n\t  axis.tickValues = function(_) {\n\t    return arguments.length ? (tickValues = _ == null ? null : slice$1.call(_), axis) : tickValues && tickValues.slice();\n\t  };\n\t\n\t  axis.tickFormat = function(_) {\n\t    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n\t  };\n\t\n\t  axis.tickSize = function(_) {\n\t    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n\t  };\n\t\n\t  axis.tickSizeInner = function(_) {\n\t    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n\t  };\n\t\n\t  axis.tickSizeOuter = function(_) {\n\t    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n\t  };\n\t\n\t  axis.tickPadding = function(_) {\n\t    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n\t  };\n\t\n\t  return axis;\n\t}\n\t\n\tfunction axisTop(scale) {\n\t  return axis(top, scale);\n\t}\n\t\n\tfunction axisRight(scale) {\n\t  return axis(right, scale);\n\t}\n\t\n\tfunction axisBottom(scale) {\n\t  return axis(bottom, scale);\n\t}\n\t\n\tfunction axisLeft(scale) {\n\t  return axis(left, scale);\n\t}\n\t\n\tvar noop = {value: function() {}};\n\t\n\tfunction dispatch() {\n\t  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n\t    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n\t    _[t] = [];\n\t  }\n\t  return new Dispatch(_);\n\t}\n\t\n\tfunction Dispatch(_) {\n\t  this._ = _;\n\t}\n\t\n\tfunction parseTypenames(typenames, types) {\n\t  return typenames.trim().split(/^|\\s+/).map(function(t) {\n\t    var name = \"\", i = t.indexOf(\".\");\n\t    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n\t    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n\t    return {type: t, name: name};\n\t  });\n\t}\n\t\n\tDispatch.prototype = dispatch.prototype = {\n\t  constructor: Dispatch,\n\t  on: function(typename, callback) {\n\t    var _ = this._,\n\t        T = parseTypenames(typename + \"\", _),\n\t        t,\n\t        i = -1,\n\t        n = T.length;\n\t\n\t    // If no callback was specified, return the callback of the given type and name.\n\t    if (arguments.length < 2) {\n\t      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n\t      return;\n\t    }\n\t\n\t    // If a type was specified, set the callback for the given type and name.\n\t    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n\t    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n\t    while (++i < n) {\n\t      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n\t      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n\t    }\n\t\n\t    return this;\n\t  },\n\t  copy: function() {\n\t    var copy = {}, _ = this._;\n\t    for (var t in _) copy[t] = _[t].slice();\n\t    return new Dispatch(copy);\n\t  },\n\t  call: function(type, that) {\n\t    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n\t    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n\t    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n\t  },\n\t  apply: function(type, that, args) {\n\t    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n\t    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n\t  }\n\t};\n\t\n\tfunction get(type, name) {\n\t  for (var i = 0, n = type.length, c; i < n; ++i) {\n\t    if ((c = type[i]).name === name) {\n\t      return c.value;\n\t    }\n\t  }\n\t}\n\t\n\tfunction set(type, name, callback) {\n\t  for (var i = 0, n = type.length; i < n; ++i) {\n\t    if (type[i].name === name) {\n\t      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n\t      break;\n\t    }\n\t  }\n\t  if (callback != null) type.push({name: name, value: callback});\n\t  return type;\n\t}\n\t\n\tvar xhtml = \"http://www.w3.org/1999/xhtml\";\n\t\n\tvar namespaces = {\n\t  svg: \"http://www.w3.org/2000/svg\",\n\t  xhtml: xhtml,\n\t  xlink: \"http://www.w3.org/1999/xlink\",\n\t  xml: \"http://www.w3.org/XML/1998/namespace\",\n\t  xmlns: \"http://www.w3.org/2000/xmlns/\"\n\t};\n\t\n\tvar namespace = function(name) {\n\t  var prefix = name += \"\", i = prefix.indexOf(\":\");\n\t  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n\t  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n\t};\n\t\n\tfunction creatorInherit(name) {\n\t  return function() {\n\t    var document = this.ownerDocument,\n\t        uri = this.namespaceURI;\n\t    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n\t        ? document.createElement(name)\n\t        : document.createElementNS(uri, name);\n\t  };\n\t}\n\t\n\tfunction creatorFixed(fullname) {\n\t  return function() {\n\t    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n\t  };\n\t}\n\t\n\tvar creator = function(name) {\n\t  var fullname = namespace(name);\n\t  return (fullname.local\n\t      ? creatorFixed\n\t      : creatorInherit)(fullname);\n\t};\n\t\n\tvar nextId = 0;\n\t\n\tfunction local$1() {\n\t  return new Local;\n\t}\n\t\n\tfunction Local() {\n\t  this._ = \"@\" + (++nextId).toString(36);\n\t}\n\t\n\tLocal.prototype = local$1.prototype = {\n\t  constructor: Local,\n\t  get: function(node) {\n\t    var id = this._;\n\t    while (!(id in node)) if (!(node = node.parentNode)) return;\n\t    return node[id];\n\t  },\n\t  set: function(node, value) {\n\t    return node[this._] = value;\n\t  },\n\t  remove: function(node) {\n\t    return this._ in node && delete node[this._];\n\t  },\n\t  toString: function() {\n\t    return this._;\n\t  }\n\t};\n\t\n\tvar matcher = function(selector) {\n\t  return function() {\n\t    return this.matches(selector);\n\t  };\n\t};\n\t\n\tif (typeof document !== \"undefined\") {\n\t  var element = document.documentElement;\n\t  if (!element.matches) {\n\t    var vendorMatches = element.webkitMatchesSelector\n\t        || element.msMatchesSelector\n\t        || element.mozMatchesSelector\n\t        || element.oMatchesSelector;\n\t    matcher = function(selector) {\n\t      return function() {\n\t        return vendorMatches.call(this, selector);\n\t      };\n\t    };\n\t  }\n\t}\n\t\n\tvar matcher$1 = matcher;\n\t\n\tvar filterEvents = {};\n\t\n\texports.event = null;\n\t\n\tif (typeof document !== \"undefined\") {\n\t  var element$1 = document.documentElement;\n\t  if (!(\"onmouseenter\" in element$1)) {\n\t    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n\t  }\n\t}\n\t\n\tfunction filterContextListener(listener, index, group) {\n\t  listener = contextListener(listener, index, group);\n\t  return function(event) {\n\t    var related = event.relatedTarget;\n\t    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n\t      listener.call(this, event);\n\t    }\n\t  };\n\t}\n\t\n\tfunction contextListener(listener, index, group) {\n\t  return function(event1) {\n\t    var event0 = exports.event; // Events can be reentrant (e.g., focus).\n\t    exports.event = event1;\n\t    try {\n\t      listener.call(this, this.__data__, index, group);\n\t    } finally {\n\t      exports.event = event0;\n\t    }\n\t  };\n\t}\n\t\n\tfunction parseTypenames$1(typenames) {\n\t  return typenames.trim().split(/^|\\s+/).map(function(t) {\n\t    var name = \"\", i = t.indexOf(\".\");\n\t    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n\t    return {type: t, name: name};\n\t  });\n\t}\n\t\n\tfunction onRemove(typename) {\n\t  return function() {\n\t    var on = this.__on;\n\t    if (!on) return;\n\t    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n\t      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n\t        this.removeEventListener(o.type, o.listener, o.capture);\n\t      } else {\n\t        on[++i] = o;\n\t      }\n\t    }\n\t    if (++i) on.length = i;\n\t    else delete this.__on;\n\t  };\n\t}\n\t\n\tfunction onAdd(typename, value, capture) {\n\t  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n\t  return function(d, i, group) {\n\t    var on = this.__on, o, listener = wrap(value, i, group);\n\t    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n\t      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n\t        this.removeEventListener(o.type, o.listener, o.capture);\n\t        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n\t        o.value = value;\n\t        return;\n\t      }\n\t    }\n\t    this.addEventListener(typename.type, listener, capture);\n\t    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n\t    if (!on) this.__on = [o];\n\t    else on.push(o);\n\t  };\n\t}\n\t\n\tvar selection_on = function(typename, value, capture) {\n\t  var typenames = parseTypenames$1(typename + \"\"), i, n = typenames.length, t;\n\t\n\t  if (arguments.length < 2) {\n\t    var on = this.node().__on;\n\t    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n\t      for (i = 0, o = on[j]; i < n; ++i) {\n\t        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n\t          return o.value;\n\t        }\n\t      }\n\t    }\n\t    return;\n\t  }\n\t\n\t  on = value ? onAdd : onRemove;\n\t  if (capture == null) capture = false;\n\t  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n\t  return this;\n\t};\n\t\n\tfunction customEvent(event1, listener, that, args) {\n\t  var event0 = exports.event;\n\t  event1.sourceEvent = exports.event;\n\t  exports.event = event1;\n\t  try {\n\t    return listener.apply(that, args);\n\t  } finally {\n\t    exports.event = event0;\n\t  }\n\t}\n\t\n\tvar sourceEvent = function() {\n\t  var current = exports.event, source;\n\t  while (source = current.sourceEvent) current = source;\n\t  return current;\n\t};\n\t\n\tvar point = function(node, event) {\n\t  var svg = node.ownerSVGElement || node;\n\t\n\t  if (svg.createSVGPoint) {\n\t    var point = svg.createSVGPoint();\n\t    point.x = event.clientX, point.y = event.clientY;\n\t    point = point.matrixTransform(node.getScreenCTM().inverse());\n\t    return [point.x, point.y];\n\t  }\n\t\n\t  var rect = node.getBoundingClientRect();\n\t  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n\t};\n\t\n\tvar mouse = function(node) {\n\t  var event = sourceEvent();\n\t  if (event.changedTouches) event = event.changedTouches[0];\n\t  return point(node, event);\n\t};\n\t\n\tfunction none() {}\n\t\n\tvar selector = function(selector) {\n\t  return selector == null ? none : function() {\n\t    return this.querySelector(selector);\n\t  };\n\t};\n\t\n\tvar selection_select = function(select) {\n\t  if (typeof select !== \"function\") select = selector(select);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n\t      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n\t        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n\t        subgroup[i] = subnode;\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Selection(subgroups, this._parents);\n\t};\n\t\n\tfunction empty$1() {\n\t  return [];\n\t}\n\t\n\tvar selectorAll = function(selector) {\n\t  return selector == null ? empty$1 : function() {\n\t    return this.querySelectorAll(selector);\n\t  };\n\t};\n\t\n\tvar selection_selectAll = function(select) {\n\t  if (typeof select !== \"function\") select = selectorAll(select);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        subgroups.push(select.call(node, node.__data__, i, group));\n\t        parents.push(node);\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Selection(subgroups, parents);\n\t};\n\t\n\tvar selection_filter = function(match) {\n\t  if (typeof match !== \"function\") match = matcher$1(match);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n\t      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Selection(subgroups, this._parents);\n\t};\n\t\n\tvar sparse = function(update) {\n\t  return new Array(update.length);\n\t};\n\t\n\tvar selection_enter = function() {\n\t  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n\t};\n\t\n\tfunction EnterNode(parent, datum) {\n\t  this.ownerDocument = parent.ownerDocument;\n\t  this.namespaceURI = parent.namespaceURI;\n\t  this._next = null;\n\t  this._parent = parent;\n\t  this.__data__ = datum;\n\t}\n\t\n\tEnterNode.prototype = {\n\t  constructor: EnterNode,\n\t  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n\t  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n\t  querySelector: function(selector) { return this._parent.querySelector(selector); },\n\t  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n\t};\n\t\n\tvar constant$1 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\t\n\tfunction bindIndex(parent, group, enter, update, exit, data) {\n\t  var i = 0,\n\t      node,\n\t      groupLength = group.length,\n\t      dataLength = data.length;\n\t\n\t  // Put any non-null nodes that fit into update.\n\t  // Put any null nodes into enter.\n\t  // Put any remaining data into enter.\n\t  for (; i < dataLength; ++i) {\n\t    if (node = group[i]) {\n\t      node.__data__ = data[i];\n\t      update[i] = node;\n\t    } else {\n\t      enter[i] = new EnterNode(parent, data[i]);\n\t    }\n\t  }\n\t\n\t  // Put any non-null nodes that don’t fit into exit.\n\t  for (; i < groupLength; ++i) {\n\t    if (node = group[i]) {\n\t      exit[i] = node;\n\t    }\n\t  }\n\t}\n\t\n\tfunction bindKey(parent, group, enter, update, exit, data, key) {\n\t  var i,\n\t      node,\n\t      nodeByKeyValue = {},\n\t      groupLength = group.length,\n\t      dataLength = data.length,\n\t      keyValues = new Array(groupLength),\n\t      keyValue;\n\t\n\t  // Compute the key for each node.\n\t  // If multiple nodes have the same key, the duplicates are added to exit.\n\t  for (i = 0; i < groupLength; ++i) {\n\t    if (node = group[i]) {\n\t      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n\t      if (keyValue in nodeByKeyValue) {\n\t        exit[i] = node;\n\t      } else {\n\t        nodeByKeyValue[keyValue] = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  // Compute the key for each datum.\n\t  // If there a node associated with this key, join and add it to update.\n\t  // If there is not (or the key is a duplicate), add it to enter.\n\t  for (i = 0; i < dataLength; ++i) {\n\t    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n\t    if (node = nodeByKeyValue[keyValue]) {\n\t      update[i] = node;\n\t      node.__data__ = data[i];\n\t      nodeByKeyValue[keyValue] = null;\n\t    } else {\n\t      enter[i] = new EnterNode(parent, data[i]);\n\t    }\n\t  }\n\t\n\t  // Add any remaining nodes that were not bound to data to exit.\n\t  for (i = 0; i < groupLength; ++i) {\n\t    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n\t      exit[i] = node;\n\t    }\n\t  }\n\t}\n\t\n\tvar selection_data = function(value, key) {\n\t  if (!value) {\n\t    data = new Array(this.size()), j = -1;\n\t    this.each(function(d) { data[++j] = d; });\n\t    return data;\n\t  }\n\t\n\t  var bind = key ? bindKey : bindIndex,\n\t      parents = this._parents,\n\t      groups = this._groups;\n\t\n\t  if (typeof value !== \"function\") value = constant$1(value);\n\t\n\t  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n\t    var parent = parents[j],\n\t        group = groups[j],\n\t        groupLength = group.length,\n\t        data = value.call(parent, parent && parent.__data__, j, parents),\n\t        dataLength = data.length,\n\t        enterGroup = enter[j] = new Array(dataLength),\n\t        updateGroup = update[j] = new Array(dataLength),\n\t        exitGroup = exit[j] = new Array(groupLength);\n\t\n\t    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\t\n\t    // Now connect the enter nodes to their following update node, such that\n\t    // appendChild can insert the materialized enter node before this node,\n\t    // rather than at the end of the parent node.\n\t    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n\t      if (previous = enterGroup[i0]) {\n\t        if (i0 >= i1) i1 = i0 + 1;\n\t        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n\t        previous._next = next || null;\n\t      }\n\t    }\n\t  }\n\t\n\t  update = new Selection(update, parents);\n\t  update._enter = enter;\n\t  update._exit = exit;\n\t  return update;\n\t};\n\t\n\tvar selection_exit = function() {\n\t  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n\t};\n\t\n\tvar selection_merge = function(selection) {\n\t\n\t  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n\t    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n\t      if (node = group0[i] || group1[i]) {\n\t        merge[i] = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  for (; j < m0; ++j) {\n\t    merges[j] = groups0[j];\n\t  }\n\t\n\t  return new Selection(merges, this._parents);\n\t};\n\t\n\tvar selection_order = function() {\n\t\n\t  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n\t    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n\t      if (node = group[i]) {\n\t        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n\t        next = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\tvar selection_sort = function(compare) {\n\t  if (!compare) compare = ascending$1;\n\t\n\t  function compareNode(a, b) {\n\t    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n\t  }\n\t\n\t  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        sortgroup[i] = node;\n\t      }\n\t    }\n\t    sortgroup.sort(compareNode);\n\t  }\n\t\n\t  return new Selection(sortgroups, this._parents).order();\n\t};\n\t\n\tfunction ascending$1(a, b) {\n\t  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n\t}\n\t\n\tvar selection_call = function() {\n\t  var callback = arguments[0];\n\t  arguments[0] = this;\n\t  callback.apply(null, arguments);\n\t  return this;\n\t};\n\t\n\tvar selection_nodes = function() {\n\t  var nodes = new Array(this.size()), i = -1;\n\t  this.each(function() { nodes[++i] = this; });\n\t  return nodes;\n\t};\n\t\n\tvar selection_node = function() {\n\t\n\t  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n\t    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n\t      var node = group[i];\n\t      if (node) return node;\n\t    }\n\t  }\n\t\n\t  return null;\n\t};\n\t\n\tvar selection_size = function() {\n\t  var size = 0;\n\t  this.each(function() { ++size; });\n\t  return size;\n\t};\n\t\n\tvar selection_empty = function() {\n\t  return !this.node();\n\t};\n\t\n\tvar selection_each = function(callback) {\n\t\n\t  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n\t    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n\t      if (node = group[i]) callback.call(node, node.__data__, i, group);\n\t    }\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\tfunction attrRemove(name) {\n\t  return function() {\n\t    this.removeAttribute(name);\n\t  };\n\t}\n\t\n\tfunction attrRemoveNS(fullname) {\n\t  return function() {\n\t    this.removeAttributeNS(fullname.space, fullname.local);\n\t  };\n\t}\n\t\n\tfunction attrConstant(name, value) {\n\t  return function() {\n\t    this.setAttribute(name, value);\n\t  };\n\t}\n\t\n\tfunction attrConstantNS(fullname, value) {\n\t  return function() {\n\t    this.setAttributeNS(fullname.space, fullname.local, value);\n\t  };\n\t}\n\t\n\tfunction attrFunction(name, value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) this.removeAttribute(name);\n\t    else this.setAttribute(name, v);\n\t  };\n\t}\n\t\n\tfunction attrFunctionNS(fullname, value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n\t    else this.setAttributeNS(fullname.space, fullname.local, v);\n\t  };\n\t}\n\t\n\tvar selection_attr = function(name, value) {\n\t  var fullname = namespace(name);\n\t\n\t  if (arguments.length < 2) {\n\t    var node = this.node();\n\t    return fullname.local\n\t        ? node.getAttributeNS(fullname.space, fullname.local)\n\t        : node.getAttribute(fullname);\n\t  }\n\t\n\t  return this.each((value == null\n\t      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n\t      ? (fullname.local ? attrFunctionNS : attrFunction)\n\t      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n\t};\n\t\n\tvar window = function(node) {\n\t  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n\t      || (node.document && node) // node is a Window\n\t      || node.defaultView; // node is a Document\n\t};\n\t\n\tfunction styleRemove(name) {\n\t  return function() {\n\t    this.style.removeProperty(name);\n\t  };\n\t}\n\t\n\tfunction styleConstant(name, value, priority) {\n\t  return function() {\n\t    this.style.setProperty(name, value, priority);\n\t  };\n\t}\n\t\n\tfunction styleFunction(name, value, priority) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) this.style.removeProperty(name);\n\t    else this.style.setProperty(name, v, priority);\n\t  };\n\t}\n\t\n\tvar selection_style = function(name, value, priority) {\n\t  var node;\n\t  return arguments.length > 1\n\t      ? this.each((value == null\n\t            ? styleRemove : typeof value === \"function\"\n\t            ? styleFunction\n\t            : styleConstant)(name, value, priority == null ? \"\" : priority))\n\t      : window(node = this.node())\n\t          .getComputedStyle(node, null)\n\t          .getPropertyValue(name);\n\t};\n\t\n\tfunction propertyRemove(name) {\n\t  return function() {\n\t    delete this[name];\n\t  };\n\t}\n\t\n\tfunction propertyConstant(name, value) {\n\t  return function() {\n\t    this[name] = value;\n\t  };\n\t}\n\t\n\tfunction propertyFunction(name, value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) delete this[name];\n\t    else this[name] = v;\n\t  };\n\t}\n\t\n\tvar selection_property = function(name, value) {\n\t  return arguments.length > 1\n\t      ? this.each((value == null\n\t          ? propertyRemove : typeof value === \"function\"\n\t          ? propertyFunction\n\t          : propertyConstant)(name, value))\n\t      : this.node()[name];\n\t};\n\t\n\tfunction classArray(string) {\n\t  return string.trim().split(/^|\\s+/);\n\t}\n\t\n\tfunction classList(node) {\n\t  return node.classList || new ClassList(node);\n\t}\n\t\n\tfunction ClassList(node) {\n\t  this._node = node;\n\t  this._names = classArray(node.getAttribute(\"class\") || \"\");\n\t}\n\t\n\tClassList.prototype = {\n\t  add: function(name) {\n\t    var i = this._names.indexOf(name);\n\t    if (i < 0) {\n\t      this._names.push(name);\n\t      this._node.setAttribute(\"class\", this._names.join(\" \"));\n\t    }\n\t  },\n\t  remove: function(name) {\n\t    var i = this._names.indexOf(name);\n\t    if (i >= 0) {\n\t      this._names.splice(i, 1);\n\t      this._node.setAttribute(\"class\", this._names.join(\" \"));\n\t    }\n\t  },\n\t  contains: function(name) {\n\t    return this._names.indexOf(name) >= 0;\n\t  }\n\t};\n\t\n\tfunction classedAdd(node, names) {\n\t  var list = classList(node), i = -1, n = names.length;\n\t  while (++i < n) list.add(names[i]);\n\t}\n\t\n\tfunction classedRemove(node, names) {\n\t  var list = classList(node), i = -1, n = names.length;\n\t  while (++i < n) list.remove(names[i]);\n\t}\n\t\n\tfunction classedTrue(names) {\n\t  return function() {\n\t    classedAdd(this, names);\n\t  };\n\t}\n\t\n\tfunction classedFalse(names) {\n\t  return function() {\n\t    classedRemove(this, names);\n\t  };\n\t}\n\t\n\tfunction classedFunction(names, value) {\n\t  return function() {\n\t    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n\t  };\n\t}\n\t\n\tvar selection_classed = function(name, value) {\n\t  var names = classArray(name + \"\");\n\t\n\t  if (arguments.length < 2) {\n\t    var list = classList(this.node()), i = -1, n = names.length;\n\t    while (++i < n) if (!list.contains(names[i])) return false;\n\t    return true;\n\t  }\n\t\n\t  return this.each((typeof value === \"function\"\n\t      ? classedFunction : value\n\t      ? classedTrue\n\t      : classedFalse)(names, value));\n\t};\n\t\n\tfunction textRemove() {\n\t  this.textContent = \"\";\n\t}\n\t\n\tfunction textConstant(value) {\n\t  return function() {\n\t    this.textContent = value;\n\t  };\n\t}\n\t\n\tfunction textFunction(value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    this.textContent = v == null ? \"\" : v;\n\t  };\n\t}\n\t\n\tvar selection_text = function(value) {\n\t  return arguments.length\n\t      ? this.each(value == null\n\t          ? textRemove : (typeof value === \"function\"\n\t          ? textFunction\n\t          : textConstant)(value))\n\t      : this.node().textContent;\n\t};\n\t\n\tfunction htmlRemove() {\n\t  this.innerHTML = \"\";\n\t}\n\t\n\tfunction htmlConstant(value) {\n\t  return function() {\n\t    this.innerHTML = value;\n\t  };\n\t}\n\t\n\tfunction htmlFunction(value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    this.innerHTML = v == null ? \"\" : v;\n\t  };\n\t}\n\t\n\tvar selection_html = function(value) {\n\t  return arguments.length\n\t      ? this.each(value == null\n\t          ? htmlRemove : (typeof value === \"function\"\n\t          ? htmlFunction\n\t          : htmlConstant)(value))\n\t      : this.node().innerHTML;\n\t};\n\t\n\tfunction raise() {\n\t  if (this.nextSibling) this.parentNode.appendChild(this);\n\t}\n\t\n\tvar selection_raise = function() {\n\t  return this.each(raise);\n\t};\n\t\n\tfunction lower() {\n\t  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n\t}\n\t\n\tvar selection_lower = function() {\n\t  return this.each(lower);\n\t};\n\t\n\tvar selection_append = function(name) {\n\t  var create = typeof name === \"function\" ? name : creator(name);\n\t  return this.select(function() {\n\t    return this.appendChild(create.apply(this, arguments));\n\t  });\n\t};\n\t\n\tfunction constantNull() {\n\t  return null;\n\t}\n\t\n\tvar selection_insert = function(name, before) {\n\t  var create = typeof name === \"function\" ? name : creator(name),\n\t      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n\t  return this.select(function() {\n\t    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n\t  });\n\t};\n\t\n\tfunction remove() {\n\t  var parent = this.parentNode;\n\t  if (parent) parent.removeChild(this);\n\t}\n\t\n\tvar selection_remove = function() {\n\t  return this.each(remove);\n\t};\n\t\n\tvar selection_datum = function(value) {\n\t  return arguments.length\n\t      ? this.property(\"__data__\", value)\n\t      : this.node().__data__;\n\t};\n\t\n\tfunction dispatchEvent(node, type, params) {\n\t  var window$$1 = window(node),\n\t      event = window$$1.CustomEvent;\n\t\n\t  if (event) {\n\t    event = new event(type, params);\n\t  } else {\n\t    event = window$$1.document.createEvent(\"Event\");\n\t    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n\t    else event.initEvent(type, false, false);\n\t  }\n\t\n\t  node.dispatchEvent(event);\n\t}\n\t\n\tfunction dispatchConstant(type, params) {\n\t  return function() {\n\t    return dispatchEvent(this, type, params);\n\t  };\n\t}\n\t\n\tfunction dispatchFunction(type, params) {\n\t  return function() {\n\t    return dispatchEvent(this, type, params.apply(this, arguments));\n\t  };\n\t}\n\t\n\tvar selection_dispatch = function(type, params) {\n\t  return this.each((typeof params === \"function\"\n\t      ? dispatchFunction\n\t      : dispatchConstant)(type, params));\n\t};\n\t\n\tvar root = [null];\n\t\n\tfunction Selection(groups, parents) {\n\t  this._groups = groups;\n\t  this._parents = parents;\n\t}\n\t\n\tfunction selection() {\n\t  return new Selection([[document.documentElement]], root);\n\t}\n\t\n\tSelection.prototype = selection.prototype = {\n\t  constructor: Selection,\n\t  select: selection_select,\n\t  selectAll: selection_selectAll,\n\t  filter: selection_filter,\n\t  data: selection_data,\n\t  enter: selection_enter,\n\t  exit: selection_exit,\n\t  merge: selection_merge,\n\t  order: selection_order,\n\t  sort: selection_sort,\n\t  call: selection_call,\n\t  nodes: selection_nodes,\n\t  node: selection_node,\n\t  size: selection_size,\n\t  empty: selection_empty,\n\t  each: selection_each,\n\t  attr: selection_attr,\n\t  style: selection_style,\n\t  property: selection_property,\n\t  classed: selection_classed,\n\t  text: selection_text,\n\t  html: selection_html,\n\t  raise: selection_raise,\n\t  lower: selection_lower,\n\t  append: selection_append,\n\t  insert: selection_insert,\n\t  remove: selection_remove,\n\t  datum: selection_datum,\n\t  on: selection_on,\n\t  dispatch: selection_dispatch\n\t};\n\t\n\tvar select = function(selector) {\n\t  return typeof selector === \"string\"\n\t      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n\t      : new Selection([[selector]], root);\n\t};\n\t\n\tvar selectAll = function(selector) {\n\t  return typeof selector === \"string\"\n\t      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n\t      : new Selection([selector == null ? [] : selector], root);\n\t};\n\t\n\tvar touch = function(node, touches, identifier) {\n\t  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\t\n\t  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n\t    if ((touch = touches[i]).identifier === identifier) {\n\t      return point(node, touch);\n\t    }\n\t  }\n\t\n\t  return null;\n\t};\n\t\n\tvar touches = function(node, touches) {\n\t  if (touches == null) touches = sourceEvent().touches;\n\t\n\t  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n\t    points[i] = point(node, touches[i]);\n\t  }\n\t\n\t  return points;\n\t};\n\t\n\tfunction nopropagation() {\n\t  exports.event.stopImmediatePropagation();\n\t}\n\t\n\tvar noevent = function() {\n\t  exports.event.preventDefault();\n\t  exports.event.stopImmediatePropagation();\n\t};\n\t\n\tvar dragDisable = function(view) {\n\t  var root = view.document.documentElement,\n\t      selection$$1 = select(view).on(\"dragstart.drag\", noevent, true);\n\t  if (\"onselectstart\" in root) {\n\t    selection$$1.on(\"selectstart.drag\", noevent, true);\n\t  } else {\n\t    root.__noselect = root.style.MozUserSelect;\n\t    root.style.MozUserSelect = \"none\";\n\t  }\n\t};\n\t\n\tfunction yesdrag(view, noclick) {\n\t  var root = view.document.documentElement,\n\t      selection$$1 = select(view).on(\"dragstart.drag\", null);\n\t  if (noclick) {\n\t    selection$$1.on(\"click.drag\", noevent, true);\n\t    setTimeout(function() { selection$$1.on(\"click.drag\", null); }, 0);\n\t  }\n\t  if (\"onselectstart\" in root) {\n\t    selection$$1.on(\"selectstart.drag\", null);\n\t  } else {\n\t    root.style.MozUserSelect = root.__noselect;\n\t    delete root.__noselect;\n\t  }\n\t}\n\t\n\tvar constant$2 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n\t  this.target = target;\n\t  this.type = type;\n\t  this.subject = subject;\n\t  this.identifier = id;\n\t  this.active = active;\n\t  this.x = x;\n\t  this.y = y;\n\t  this.dx = dx;\n\t  this.dy = dy;\n\t  this._ = dispatch;\n\t}\n\t\n\tDragEvent.prototype.on = function() {\n\t  var value = this._.on.apply(this._, arguments);\n\t  return value === this._ ? this : value;\n\t};\n\t\n\t// Ignore right-click, since that should open the context menu.\n\tfunction defaultFilter$1() {\n\t  return !exports.event.button;\n\t}\n\t\n\tfunction defaultContainer() {\n\t  return this.parentNode;\n\t}\n\t\n\tfunction defaultSubject(d) {\n\t  return d == null ? {x: exports.event.x, y: exports.event.y} : d;\n\t}\n\t\n\tvar drag = function() {\n\t  var filter = defaultFilter$1,\n\t      container = defaultContainer,\n\t      subject = defaultSubject,\n\t      gestures = {},\n\t      listeners = dispatch(\"start\", \"drag\", \"end\"),\n\t      active = 0,\n\t      mousemoving,\n\t      touchending;\n\t\n\t  function drag(selection$$1) {\n\t    selection$$1\n\t        .on(\"mousedown.drag\", mousedowned)\n\t        .on(\"touchstart.drag\", touchstarted)\n\t        .on(\"touchmove.drag\", touchmoved)\n\t        .on(\"touchend.drag touchcancel.drag\", touchended)\n\t        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n\t  }\n\t\n\t  function mousedowned() {\n\t    if (touchending || !filter.apply(this, arguments)) return;\n\t    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n\t    if (!gesture) return;\n\t    select(exports.event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n\t    dragDisable(exports.event.view);\n\t    nopropagation();\n\t    mousemoving = false;\n\t    gesture(\"start\");\n\t  }\n\t\n\t  function mousemoved() {\n\t    noevent();\n\t    mousemoving = true;\n\t    gestures.mouse(\"drag\");\n\t  }\n\t\n\t  function mouseupped() {\n\t    select(exports.event.view).on(\"mousemove.drag mouseup.drag\", null);\n\t    yesdrag(exports.event.view, mousemoving);\n\t    noevent();\n\t    gestures.mouse(\"end\");\n\t  }\n\t\n\t  function touchstarted() {\n\t    if (!filter.apply(this, arguments)) return;\n\t    var touches$$1 = exports.event.changedTouches,\n\t        c = container.apply(this, arguments),\n\t        n = touches$$1.length, i, gesture;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      if (gesture = beforestart(touches$$1[i].identifier, c, touch, this, arguments)) {\n\t        nopropagation();\n\t        gesture(\"start\");\n\t      }\n\t    }\n\t  }\n\t\n\t  function touchmoved() {\n\t    var touches$$1 = exports.event.changedTouches,\n\t        n = touches$$1.length, i, gesture;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      if (gesture = gestures[touches$$1[i].identifier]) {\n\t        noevent();\n\t        gesture(\"drag\");\n\t      }\n\t    }\n\t  }\n\t\n\t  function touchended() {\n\t    var touches$$1 = exports.event.changedTouches,\n\t        n = touches$$1.length, i, gesture;\n\t\n\t    if (touchending) clearTimeout(touchending);\n\t    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n\t    for (i = 0; i < n; ++i) {\n\t      if (gesture = gestures[touches$$1[i].identifier]) {\n\t        nopropagation();\n\t        gesture(\"end\");\n\t      }\n\t    }\n\t  }\n\t\n\t  function beforestart(id, container, point, that, args) {\n\t    var p = point(container, id), s, dx, dy,\n\t        sublisteners = listeners.copy();\n\t\n\t    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n\t      if ((exports.event.subject = s = subject.apply(that, args)) == null) return false;\n\t      dx = s.x - p[0] || 0;\n\t      dy = s.y - p[1] || 0;\n\t      return true;\n\t    })) return;\n\t\n\t    return function gesture(type) {\n\t      var p0 = p, n;\n\t      switch (type) {\n\t        case \"start\": gestures[id] = gesture, n = active++; break;\n\t        case \"end\": delete gestures[id], --active; // nobreak\n\t        case \"drag\": p = point(container, id), n = active; break;\n\t      }\n\t      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n\t    };\n\t  }\n\t\n\t  drag.filter = function(_) {\n\t    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$2(!!_), drag) : filter;\n\t  };\n\t\n\t  drag.container = function(_) {\n\t    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant$2(_), drag) : container;\n\t  };\n\t\n\t  drag.subject = function(_) {\n\t    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant$2(_), drag) : subject;\n\t  };\n\t\n\t  drag.on = function() {\n\t    var value = listeners.on.apply(listeners, arguments);\n\t    return value === listeners ? drag : value;\n\t  };\n\t\n\t  return drag;\n\t};\n\t\n\tvar define = function(constructor, factory, prototype) {\n\t  constructor.prototype = factory.prototype = prototype;\n\t  prototype.constructor = constructor;\n\t};\n\t\n\tfunction extend(parent, definition) {\n\t  var prototype = Object.create(parent.prototype);\n\t  for (var key in definition) prototype[key] = definition[key];\n\t  return prototype;\n\t}\n\t\n\tfunction Color() {}\n\t\n\tvar darker = 0.7;\n\tvar brighter = 1 / darker;\n\t\n\tvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\";\n\tvar reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\";\n\tvar reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\";\n\tvar reHex3 = /^#([0-9a-f]{3})$/;\n\tvar reHex6 = /^#([0-9a-f]{6})$/;\n\tvar reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\");\n\tvar reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\");\n\tvar reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\");\n\tvar reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\");\n\tvar reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\");\n\tvar reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\t\n\tvar named = {\n\t  aliceblue: 0xf0f8ff,\n\t  antiquewhite: 0xfaebd7,\n\t  aqua: 0x00ffff,\n\t  aquamarine: 0x7fffd4,\n\t  azure: 0xf0ffff,\n\t  beige: 0xf5f5dc,\n\t  bisque: 0xffe4c4,\n\t  black: 0x000000,\n\t  blanchedalmond: 0xffebcd,\n\t  blue: 0x0000ff,\n\t  blueviolet: 0x8a2be2,\n\t  brown: 0xa52a2a,\n\t  burlywood: 0xdeb887,\n\t  cadetblue: 0x5f9ea0,\n\t  chartreuse: 0x7fff00,\n\t  chocolate: 0xd2691e,\n\t  coral: 0xff7f50,\n\t  cornflowerblue: 0x6495ed,\n\t  cornsilk: 0xfff8dc,\n\t  crimson: 0xdc143c,\n\t  cyan: 0x00ffff,\n\t  darkblue: 0x00008b,\n\t  darkcyan: 0x008b8b,\n\t  darkgoldenrod: 0xb8860b,\n\t  darkgray: 0xa9a9a9,\n\t  darkgreen: 0x006400,\n\t  darkgrey: 0xa9a9a9,\n\t  darkkhaki: 0xbdb76b,\n\t  darkmagenta: 0x8b008b,\n\t  darkolivegreen: 0x556b2f,\n\t  darkorange: 0xff8c00,\n\t  darkorchid: 0x9932cc,\n\t  darkred: 0x8b0000,\n\t  darksalmon: 0xe9967a,\n\t  darkseagreen: 0x8fbc8f,\n\t  darkslateblue: 0x483d8b,\n\t  darkslategray: 0x2f4f4f,\n\t  darkslategrey: 0x2f4f4f,\n\t  darkturquoise: 0x00ced1,\n\t  darkviolet: 0x9400d3,\n\t  deeppink: 0xff1493,\n\t  deepskyblue: 0x00bfff,\n\t  dimgray: 0x696969,\n\t  dimgrey: 0x696969,\n\t  dodgerblue: 0x1e90ff,\n\t  firebrick: 0xb22222,\n\t  floralwhite: 0xfffaf0,\n\t  forestgreen: 0x228b22,\n\t  fuchsia: 0xff00ff,\n\t  gainsboro: 0xdcdcdc,\n\t  ghostwhite: 0xf8f8ff,\n\t  gold: 0xffd700,\n\t  goldenrod: 0xdaa520,\n\t  gray: 0x808080,\n\t  green: 0x008000,\n\t  greenyellow: 0xadff2f,\n\t  grey: 0x808080,\n\t  honeydew: 0xf0fff0,\n\t  hotpink: 0xff69b4,\n\t  indianred: 0xcd5c5c,\n\t  indigo: 0x4b0082,\n\t  ivory: 0xfffff0,\n\t  khaki: 0xf0e68c,\n\t  lavender: 0xe6e6fa,\n\t  lavenderblush: 0xfff0f5,\n\t  lawngreen: 0x7cfc00,\n\t  lemonchiffon: 0xfffacd,\n\t  lightblue: 0xadd8e6,\n\t  lightcoral: 0xf08080,\n\t  lightcyan: 0xe0ffff,\n\t  lightgoldenrodyellow: 0xfafad2,\n\t  lightgray: 0xd3d3d3,\n\t  lightgreen: 0x90ee90,\n\t  lightgrey: 0xd3d3d3,\n\t  lightpink: 0xffb6c1,\n\t  lightsalmon: 0xffa07a,\n\t  lightseagreen: 0x20b2aa,\n\t  lightskyblue: 0x87cefa,\n\t  lightslategray: 0x778899,\n\t  lightslategrey: 0x778899,\n\t  lightsteelblue: 0xb0c4de,\n\t  lightyellow: 0xffffe0,\n\t  lime: 0x00ff00,\n\t  limegreen: 0x32cd32,\n\t  linen: 0xfaf0e6,\n\t  magenta: 0xff00ff,\n\t  maroon: 0x800000,\n\t  mediumaquamarine: 0x66cdaa,\n\t  mediumblue: 0x0000cd,\n\t  mediumorchid: 0xba55d3,\n\t  mediumpurple: 0x9370db,\n\t  mediumseagreen: 0x3cb371,\n\t  mediumslateblue: 0x7b68ee,\n\t  mediumspringgreen: 0x00fa9a,\n\t  mediumturquoise: 0x48d1cc,\n\t  mediumvioletred: 0xc71585,\n\t  midnightblue: 0x191970,\n\t  mintcream: 0xf5fffa,\n\t  mistyrose: 0xffe4e1,\n\t  moccasin: 0xffe4b5,\n\t  navajowhite: 0xffdead,\n\t  navy: 0x000080,\n\t  oldlace: 0xfdf5e6,\n\t  olive: 0x808000,\n\t  olivedrab: 0x6b8e23,\n\t  orange: 0xffa500,\n\t  orangered: 0xff4500,\n\t  orchid: 0xda70d6,\n\t  palegoldenrod: 0xeee8aa,\n\t  palegreen: 0x98fb98,\n\t  paleturquoise: 0xafeeee,\n\t  palevioletred: 0xdb7093,\n\t  papayawhip: 0xffefd5,\n\t  peachpuff: 0xffdab9,\n\t  peru: 0xcd853f,\n\t  pink: 0xffc0cb,\n\t  plum: 0xdda0dd,\n\t  powderblue: 0xb0e0e6,\n\t  purple: 0x800080,\n\t  rebeccapurple: 0x663399,\n\t  red: 0xff0000,\n\t  rosybrown: 0xbc8f8f,\n\t  royalblue: 0x4169e1,\n\t  saddlebrown: 0x8b4513,\n\t  salmon: 0xfa8072,\n\t  sandybrown: 0xf4a460,\n\t  seagreen: 0x2e8b57,\n\t  seashell: 0xfff5ee,\n\t  sienna: 0xa0522d,\n\t  silver: 0xc0c0c0,\n\t  skyblue: 0x87ceeb,\n\t  slateblue: 0x6a5acd,\n\t  slategray: 0x708090,\n\t  slategrey: 0x708090,\n\t  snow: 0xfffafa,\n\t  springgreen: 0x00ff7f,\n\t  steelblue: 0x4682b4,\n\t  tan: 0xd2b48c,\n\t  teal: 0x008080,\n\t  thistle: 0xd8bfd8,\n\t  tomato: 0xff6347,\n\t  turquoise: 0x40e0d0,\n\t  violet: 0xee82ee,\n\t  wheat: 0xf5deb3,\n\t  white: 0xffffff,\n\t  whitesmoke: 0xf5f5f5,\n\t  yellow: 0xffff00,\n\t  yellowgreen: 0x9acd32\n\t};\n\t\n\tdefine(Color, color, {\n\t  displayable: function() {\n\t    return this.rgb().displayable();\n\t  },\n\t  toString: function() {\n\t    return this.rgb() + \"\";\n\t  }\n\t});\n\t\n\tfunction color(format) {\n\t  var m;\n\t  format = (format + \"\").trim().toLowerCase();\n\t  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n\t      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n\t      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n\t      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n\t      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n\t      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n\t      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n\t      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n\t      : named.hasOwnProperty(format) ? rgbn(named[format])\n\t      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n\t      : null;\n\t}\n\t\n\tfunction rgbn(n) {\n\t  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n\t}\n\t\n\tfunction rgba(r, g, b, a) {\n\t  if (a <= 0) r = g = b = NaN;\n\t  return new Rgb(r, g, b, a);\n\t}\n\t\n\tfunction rgbConvert(o) {\n\t  if (!(o instanceof Color)) o = color(o);\n\t  if (!o) return new Rgb;\n\t  o = o.rgb();\n\t  return new Rgb(o.r, o.g, o.b, o.opacity);\n\t}\n\t\n\tfunction rgb(r, g, b, opacity) {\n\t  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Rgb(r, g, b, opacity) {\n\t  this.r = +r;\n\t  this.g = +g;\n\t  this.b = +b;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Rgb, rgb, extend(Color, {\n\t  brighter: function(k) {\n\t    k = k == null ? brighter : Math.pow(brighter, k);\n\t    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    k = k == null ? darker : Math.pow(darker, k);\n\t    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    return this;\n\t  },\n\t  displayable: function() {\n\t    return (0 <= this.r && this.r <= 255)\n\t        && (0 <= this.g && this.g <= 255)\n\t        && (0 <= this.b && this.b <= 255)\n\t        && (0 <= this.opacity && this.opacity <= 1);\n\t  },\n\t  toString: function() {\n\t    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n\t    return (a === 1 ? \"rgb(\" : \"rgba(\")\n\t        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n\t        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n\t        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n\t        + (a === 1 ? \")\" : \", \" + a + \")\");\n\t  }\n\t}));\n\t\n\tfunction hsla(h, s, l, a) {\n\t  if (a <= 0) h = s = l = NaN;\n\t  else if (l <= 0 || l >= 1) h = s = NaN;\n\t  else if (s <= 0) h = NaN;\n\t  return new Hsl(h, s, l, a);\n\t}\n\t\n\tfunction hslConvert(o) {\n\t  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n\t  if (!(o instanceof Color)) o = color(o);\n\t  if (!o) return new Hsl;\n\t  if (o instanceof Hsl) return o;\n\t  o = o.rgb();\n\t  var r = o.r / 255,\n\t      g = o.g / 255,\n\t      b = o.b / 255,\n\t      min = Math.min(r, g, b),\n\t      max = Math.max(r, g, b),\n\t      h = NaN,\n\t      s = max - min,\n\t      l = (max + min) / 2;\n\t  if (s) {\n\t    if (r === max) h = (g - b) / s + (g < b) * 6;\n\t    else if (g === max) h = (b - r) / s + 2;\n\t    else h = (r - g) / s + 4;\n\t    s /= l < 0.5 ? max + min : 2 - max - min;\n\t    h *= 60;\n\t  } else {\n\t    s = l > 0 && l < 1 ? 0 : h;\n\t  }\n\t  return new Hsl(h, s, l, o.opacity);\n\t}\n\t\n\tfunction hsl(h, s, l, opacity) {\n\t  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Hsl(h, s, l, opacity) {\n\t  this.h = +h;\n\t  this.s = +s;\n\t  this.l = +l;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Hsl, hsl, extend(Color, {\n\t  brighter: function(k) {\n\t    k = k == null ? brighter : Math.pow(brighter, k);\n\t    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    k = k == null ? darker : Math.pow(darker, k);\n\t    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    var h = this.h % 360 + (this.h < 0) * 360,\n\t        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n\t        l = this.l,\n\t        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n\t        m1 = 2 * l - m2;\n\t    return new Rgb(\n\t      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n\t      hsl2rgb(h, m1, m2),\n\t      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n\t      this.opacity\n\t    );\n\t  },\n\t  displayable: function() {\n\t    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n\t        && (0 <= this.l && this.l <= 1)\n\t        && (0 <= this.opacity && this.opacity <= 1);\n\t  }\n\t}));\n\t\n\t/* From FvD 13.37, CSS Color Module Level 3 */\n\tfunction hsl2rgb(h, m1, m2) {\n\t  return (h < 60 ? m1 + (m2 - m1) * h / 60\n\t      : h < 180 ? m2\n\t      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n\t      : m1) * 255;\n\t}\n\t\n\tvar deg2rad = Math.PI / 180;\n\tvar rad2deg = 180 / Math.PI;\n\t\n\tvar Kn = 18;\n\tvar Xn = 0.950470;\n\tvar Yn = 1;\n\tvar Zn = 1.088830;\n\tvar t0 = 4 / 29;\n\tvar t1 = 6 / 29;\n\tvar t2 = 3 * t1 * t1;\n\tvar t3 = t1 * t1 * t1;\n\t\n\tfunction labConvert(o) {\n\t  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n\t  if (o instanceof Hcl) {\n\t    var h = o.h * deg2rad;\n\t    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n\t  }\n\t  if (!(o instanceof Rgb)) o = rgbConvert(o);\n\t  var b = rgb2xyz(o.r),\n\t      a = rgb2xyz(o.g),\n\t      l = rgb2xyz(o.b),\n\t      x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n\t      y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n\t      z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n\t  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n\t}\n\t\n\tfunction lab(l, a, b, opacity) {\n\t  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Lab(l, a, b, opacity) {\n\t  this.l = +l;\n\t  this.a = +a;\n\t  this.b = +b;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Lab, lab, extend(Color, {\n\t  brighter: function(k) {\n\t    return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    var y = (this.l + 16) / 116,\n\t        x = isNaN(this.a) ? y : y + this.a / 500,\n\t        z = isNaN(this.b) ? y : y - this.b / 200;\n\t    y = Yn * lab2xyz(y);\n\t    x = Xn * lab2xyz(x);\n\t    z = Zn * lab2xyz(z);\n\t    return new Rgb(\n\t      xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n\t      xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n\t      xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n\t      this.opacity\n\t    );\n\t  }\n\t}));\n\t\n\tfunction xyz2lab(t) {\n\t  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n\t}\n\t\n\tfunction lab2xyz(t) {\n\t  return t > t1 ? t * t * t : t2 * (t - t0);\n\t}\n\t\n\tfunction xyz2rgb(x) {\n\t  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n\t}\n\t\n\tfunction rgb2xyz(x) {\n\t  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n\t}\n\t\n\tfunction hclConvert(o) {\n\t  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n\t  if (!(o instanceof Lab)) o = labConvert(o);\n\t  var h = Math.atan2(o.b, o.a) * rad2deg;\n\t  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n\t}\n\t\n\tfunction hcl(h, c, l, opacity) {\n\t  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Hcl(h, c, l, opacity) {\n\t  this.h = +h;\n\t  this.c = +c;\n\t  this.l = +l;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Hcl, hcl, extend(Color, {\n\t  brighter: function(k) {\n\t    return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);\n\t  },\n\t  rgb: function() {\n\t    return labConvert(this).rgb();\n\t  }\n\t}));\n\t\n\tvar A = -0.14861;\n\tvar B = +1.78277;\n\tvar C = -0.29227;\n\tvar D = -0.90649;\n\tvar E = +1.97294;\n\tvar ED = E * D;\n\tvar EB = E * B;\n\tvar BC_DA = B * C - D * A;\n\t\n\tfunction cubehelixConvert(o) {\n\t  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n\t  if (!(o instanceof Rgb)) o = rgbConvert(o);\n\t  var r = o.r / 255,\n\t      g = o.g / 255,\n\t      b = o.b / 255,\n\t      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n\t      bl = b - l,\n\t      k = (E * (g - l) - C * bl) / D,\n\t      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n\t      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n\t  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n\t}\n\t\n\tfunction cubehelix(h, s, l, opacity) {\n\t  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Cubehelix(h, s, l, opacity) {\n\t  this.h = +h;\n\t  this.s = +s;\n\t  this.l = +l;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Cubehelix, cubehelix, extend(Color, {\n\t  brighter: function(k) {\n\t    k = k == null ? brighter : Math.pow(brighter, k);\n\t    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    k = k == null ? darker : Math.pow(darker, k);\n\t    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n\t        l = +this.l,\n\t        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n\t        cosh = Math.cos(h),\n\t        sinh = Math.sin(h);\n\t    return new Rgb(\n\t      255 * (l + a * (A * cosh + B * sinh)),\n\t      255 * (l + a * (C * cosh + D * sinh)),\n\t      255 * (l + a * (E * cosh)),\n\t      this.opacity\n\t    );\n\t  }\n\t}));\n\t\n\tfunction basis(t1, v0, v1, v2, v3) {\n\t  var t2 = t1 * t1, t3 = t2 * t1;\n\t  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n\t      + (4 - 6 * t2 + 3 * t3) * v1\n\t      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n\t      + t3 * v3) / 6;\n\t}\n\t\n\tvar basis$1 = function(values) {\n\t  var n = values.length - 1;\n\t  return function(t) {\n\t    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n\t        v1 = values[i],\n\t        v2 = values[i + 1],\n\t        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n\t        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n\t    return basis((t - i / n) * n, v0, v1, v2, v3);\n\t  };\n\t};\n\t\n\tvar basisClosed = function(values) {\n\t  var n = values.length;\n\t  return function(t) {\n\t    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n\t        v0 = values[(i + n - 1) % n],\n\t        v1 = values[i % n],\n\t        v2 = values[(i + 1) % n],\n\t        v3 = values[(i + 2) % n];\n\t    return basis((t - i / n) * n, v0, v1, v2, v3);\n\t  };\n\t};\n\t\n\tvar constant$3 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction linear(a, d) {\n\t  return function(t) {\n\t    return a + t * d;\n\t  };\n\t}\n\t\n\tfunction exponential(a, b, y) {\n\t  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n\t    return Math.pow(a + t * b, y);\n\t  };\n\t}\n\t\n\tfunction hue(a, b) {\n\t  var d = b - a;\n\t  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant$3(isNaN(a) ? b : a);\n\t}\n\t\n\tfunction gamma(y) {\n\t  return (y = +y) === 1 ? nogamma : function(a, b) {\n\t    return b - a ? exponential(a, b, y) : constant$3(isNaN(a) ? b : a);\n\t  };\n\t}\n\t\n\tfunction nogamma(a, b) {\n\t  var d = b - a;\n\t  return d ? linear(a, d) : constant$3(isNaN(a) ? b : a);\n\t}\n\t\n\tvar interpolateRgb = ((function rgbGamma(y) {\n\t  var color$$1 = gamma(y);\n\t\n\t  function rgb$$1(start, end) {\n\t    var r = color$$1((start = rgb(start)).r, (end = rgb(end)).r),\n\t        g = color$$1(start.g, end.g),\n\t        b = color$$1(start.b, end.b),\n\t        opacity = nogamma(start.opacity, end.opacity);\n\t    return function(t) {\n\t      start.r = r(t);\n\t      start.g = g(t);\n\t      start.b = b(t);\n\t      start.opacity = opacity(t);\n\t      return start + \"\";\n\t    };\n\t  }\n\t\n\t  rgb$$1.gamma = rgbGamma;\n\t\n\t  return rgb$$1;\n\t}))(1);\n\t\n\tfunction rgbSpline(spline) {\n\t  return function(colors) {\n\t    var n = colors.length,\n\t        r = new Array(n),\n\t        g = new Array(n),\n\t        b = new Array(n),\n\t        i, color$$1;\n\t    for (i = 0; i < n; ++i) {\n\t      color$$1 = rgb(colors[i]);\n\t      r[i] = color$$1.r || 0;\n\t      g[i] = color$$1.g || 0;\n\t      b[i] = color$$1.b || 0;\n\t    }\n\t    r = spline(r);\n\t    g = spline(g);\n\t    b = spline(b);\n\t    color$$1.opacity = 1;\n\t    return function(t) {\n\t      color$$1.r = r(t);\n\t      color$$1.g = g(t);\n\t      color$$1.b = b(t);\n\t      return color$$1 + \"\";\n\t    };\n\t  };\n\t}\n\t\n\tvar rgbBasis = rgbSpline(basis$1);\n\tvar rgbBasisClosed = rgbSpline(basisClosed);\n\t\n\tvar array$1 = function(a, b) {\n\t  var nb = b ? b.length : 0,\n\t      na = a ? Math.min(nb, a.length) : 0,\n\t      x = new Array(nb),\n\t      c = new Array(nb),\n\t      i;\n\t\n\t  for (i = 0; i < na; ++i) x[i] = interpolateValue(a[i], b[i]);\n\t  for (; i < nb; ++i) c[i] = b[i];\n\t\n\t  return function(t) {\n\t    for (i = 0; i < na; ++i) c[i] = x[i](t);\n\t    return c;\n\t  };\n\t};\n\t\n\tvar date = function(a, b) {\n\t  var d = new Date;\n\t  return a = +a, b -= a, function(t) {\n\t    return d.setTime(a + b * t), d;\n\t  };\n\t};\n\t\n\tvar reinterpolate = function(a, b) {\n\t  return a = +a, b -= a, function(t) {\n\t    return a + b * t;\n\t  };\n\t};\n\t\n\tvar object = function(a, b) {\n\t  var i = {},\n\t      c = {},\n\t      k;\n\t\n\t  if (a === null || typeof a !== \"object\") a = {};\n\t  if (b === null || typeof b !== \"object\") b = {};\n\t\n\t  for (k in b) {\n\t    if (k in a) {\n\t      i[k] = interpolateValue(a[k], b[k]);\n\t    } else {\n\t      c[k] = b[k];\n\t    }\n\t  }\n\t\n\t  return function(t) {\n\t    for (k in i) c[k] = i[k](t);\n\t    return c;\n\t  };\n\t};\n\t\n\tvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\n\tvar reB = new RegExp(reA.source, \"g\");\n\t\n\tfunction zero(b) {\n\t  return function() {\n\t    return b;\n\t  };\n\t}\n\t\n\tfunction one(b) {\n\t  return function(t) {\n\t    return b(t) + \"\";\n\t  };\n\t}\n\t\n\tvar interpolateString = function(a, b) {\n\t  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n\t      am, // current match in a\n\t      bm, // current match in b\n\t      bs, // string preceding current number in b, if any\n\t      i = -1, // index in s\n\t      s = [], // string constants and placeholders\n\t      q = []; // number interpolators\n\t\n\t  // Coerce inputs to strings.\n\t  a = a + \"\", b = b + \"\";\n\t\n\t  // Interpolate pairs of numbers in a & b.\n\t  while ((am = reA.exec(a))\n\t      && (bm = reB.exec(b))) {\n\t    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n\t      bs = b.slice(bi, bs);\n\t      if (s[i]) s[i] += bs; // coalesce with previous string\n\t      else s[++i] = bs;\n\t    }\n\t    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n\t      if (s[i]) s[i] += bm; // coalesce with previous string\n\t      else s[++i] = bm;\n\t    } else { // interpolate non-matching numbers\n\t      s[++i] = null;\n\t      q.push({i: i, x: reinterpolate(am, bm)});\n\t    }\n\t    bi = reB.lastIndex;\n\t  }\n\t\n\t  // Add remains of b.\n\t  if (bi < b.length) {\n\t    bs = b.slice(bi);\n\t    if (s[i]) s[i] += bs; // coalesce with previous string\n\t    else s[++i] = bs;\n\t  }\n\t\n\t  // Special optimization for only a single match.\n\t  // Otherwise, interpolate each of the numbers and rejoin the string.\n\t  return s.length < 2 ? (q[0]\n\t      ? one(q[0].x)\n\t      : zero(b))\n\t      : (b = q.length, function(t) {\n\t          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n\t          return s.join(\"\");\n\t        });\n\t};\n\t\n\tvar interpolateValue = function(a, b) {\n\t  var t = typeof b, c;\n\t  return b == null || t === \"boolean\" ? constant$3(b)\n\t      : (t === \"number\" ? reinterpolate\n\t      : t === \"string\" ? ((c = color(b)) ? (b = c, interpolateRgb) : interpolateString)\n\t      : b instanceof color ? interpolateRgb\n\t      : b instanceof Date ? date\n\t      : Array.isArray(b) ? array$1\n\t      : isNaN(b) ? object\n\t      : reinterpolate)(a, b);\n\t};\n\t\n\tvar interpolateRound = function(a, b) {\n\t  return a = +a, b -= a, function(t) {\n\t    return Math.round(a + b * t);\n\t  };\n\t};\n\t\n\tvar degrees = 180 / Math.PI;\n\t\n\tvar identity$2 = {\n\t  translateX: 0,\n\t  translateY: 0,\n\t  rotate: 0,\n\t  skewX: 0,\n\t  scaleX: 1,\n\t  scaleY: 1\n\t};\n\t\n\tvar decompose = function(a, b, c, d, e, f) {\n\t  var scaleX, scaleY, skewX;\n\t  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n\t  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n\t  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n\t  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n\t  return {\n\t    translateX: e,\n\t    translateY: f,\n\t    rotate: Math.atan2(b, a) * degrees,\n\t    skewX: Math.atan(skewX) * degrees,\n\t    scaleX: scaleX,\n\t    scaleY: scaleY\n\t  };\n\t};\n\t\n\tvar cssNode;\n\tvar cssRoot;\n\tvar cssView;\n\tvar svgNode;\n\t\n\tfunction parseCss(value) {\n\t  if (value === \"none\") return identity$2;\n\t  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n\t  cssNode.style.transform = value;\n\t  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n\t  cssRoot.removeChild(cssNode);\n\t  value = value.slice(7, -1).split(\",\");\n\t  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n\t}\n\t\n\tfunction parseSvg(value) {\n\t  if (value == null) return identity$2;\n\t  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n\t  svgNode.setAttribute(\"transform\", value);\n\t  if (!(value = svgNode.transform.baseVal.consolidate())) return identity$2;\n\t  value = value.matrix;\n\t  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n\t}\n\t\n\tfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\t\n\t  function pop(s) {\n\t    return s.length ? s.pop() + \" \" : \"\";\n\t  }\n\t\n\t  function translate(xa, ya, xb, yb, s, q) {\n\t    if (xa !== xb || ya !== yb) {\n\t      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n\t      q.push({i: i - 4, x: reinterpolate(xa, xb)}, {i: i - 2, x: reinterpolate(ya, yb)});\n\t    } else if (xb || yb) {\n\t      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n\t    }\n\t  }\n\t\n\t  function rotate(a, b, s, q) {\n\t    if (a !== b) {\n\t      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n\t      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: reinterpolate(a, b)});\n\t    } else if (b) {\n\t      s.push(pop(s) + \"rotate(\" + b + degParen);\n\t    }\n\t  }\n\t\n\t  function skewX(a, b, s, q) {\n\t    if (a !== b) {\n\t      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: reinterpolate(a, b)});\n\t    } else if (b) {\n\t      s.push(pop(s) + \"skewX(\" + b + degParen);\n\t    }\n\t  }\n\t\n\t  function scale(xa, ya, xb, yb, s, q) {\n\t    if (xa !== xb || ya !== yb) {\n\t      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n\t      q.push({i: i - 4, x: reinterpolate(xa, xb)}, {i: i - 2, x: reinterpolate(ya, yb)});\n\t    } else if (xb !== 1 || yb !== 1) {\n\t      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n\t    }\n\t  }\n\t\n\t  return function(a, b) {\n\t    var s = [], // string constants and placeholders\n\t        q = []; // number interpolators\n\t    a = parse(a), b = parse(b);\n\t    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n\t    rotate(a.rotate, b.rotate, s, q);\n\t    skewX(a.skewX, b.skewX, s, q);\n\t    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n\t    a = b = null; // gc\n\t    return function(t) {\n\t      var i = -1, n = q.length, o;\n\t      while (++i < n) s[(o = q[i]).i] = o.x(t);\n\t      return s.join(\"\");\n\t    };\n\t  };\n\t}\n\t\n\tvar interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\n\tvar interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n\t\n\tvar rho = Math.SQRT2;\n\tvar rho2 = 2;\n\tvar rho4 = 4;\n\tvar epsilon2 = 1e-12;\n\t\n\tfunction cosh(x) {\n\t  return ((x = Math.exp(x)) + 1 / x) / 2;\n\t}\n\t\n\tfunction sinh(x) {\n\t  return ((x = Math.exp(x)) - 1 / x) / 2;\n\t}\n\t\n\tfunction tanh(x) {\n\t  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n\t}\n\t\n\t// p0 = [ux0, uy0, w0]\n\t// p1 = [ux1, uy1, w1]\n\tvar interpolateZoom = function(p0, p1) {\n\t  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n\t      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n\t      dx = ux1 - ux0,\n\t      dy = uy1 - uy0,\n\t      d2 = dx * dx + dy * dy,\n\t      i,\n\t      S;\n\t\n\t  // Special case for u0 ≅ u1.\n\t  if (d2 < epsilon2) {\n\t    S = Math.log(w1 / w0) / rho;\n\t    i = function(t) {\n\t      return [\n\t        ux0 + t * dx,\n\t        uy0 + t * dy,\n\t        w0 * Math.exp(rho * t * S)\n\t      ];\n\t    };\n\t  }\n\t\n\t  // General case.\n\t  else {\n\t    var d1 = Math.sqrt(d2),\n\t        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n\t        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n\t        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n\t        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n\t    S = (r1 - r0) / rho;\n\t    i = function(t) {\n\t      var s = t * S,\n\t          coshr0 = cosh(r0),\n\t          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n\t      return [\n\t        ux0 + u * dx,\n\t        uy0 + u * dy,\n\t        w0 * coshr0 / cosh(rho * s + r0)\n\t      ];\n\t    };\n\t  }\n\t\n\t  i.duration = S * 1000;\n\t\n\t  return i;\n\t};\n\t\n\tfunction hsl$1(hue$$1) {\n\t  return function(start, end) {\n\t    var h = hue$$1((start = hsl(start)).h, (end = hsl(end)).h),\n\t        s = nogamma(start.s, end.s),\n\t        l = nogamma(start.l, end.l),\n\t        opacity = nogamma(start.opacity, end.opacity);\n\t    return function(t) {\n\t      start.h = h(t);\n\t      start.s = s(t);\n\t      start.l = l(t);\n\t      start.opacity = opacity(t);\n\t      return start + \"\";\n\t    };\n\t  }\n\t}\n\t\n\tvar hsl$2 = hsl$1(hue);\n\tvar hslLong = hsl$1(nogamma);\n\t\n\tfunction lab$1(start, end) {\n\t  var l = nogamma((start = lab(start)).l, (end = lab(end)).l),\n\t      a = nogamma(start.a, end.a),\n\t      b = nogamma(start.b, end.b),\n\t      opacity = nogamma(start.opacity, end.opacity);\n\t  return function(t) {\n\t    start.l = l(t);\n\t    start.a = a(t);\n\t    start.b = b(t);\n\t    start.opacity = opacity(t);\n\t    return start + \"\";\n\t  };\n\t}\n\t\n\tfunction hcl$1(hue$$1) {\n\t  return function(start, end) {\n\t    var h = hue$$1((start = hcl(start)).h, (end = hcl(end)).h),\n\t        c = nogamma(start.c, end.c),\n\t        l = nogamma(start.l, end.l),\n\t        opacity = nogamma(start.opacity, end.opacity);\n\t    return function(t) {\n\t      start.h = h(t);\n\t      start.c = c(t);\n\t      start.l = l(t);\n\t      start.opacity = opacity(t);\n\t      return start + \"\";\n\t    };\n\t  }\n\t}\n\t\n\tvar hcl$2 = hcl$1(hue);\n\tvar hclLong = hcl$1(nogamma);\n\t\n\tfunction cubehelix$1(hue$$1) {\n\t  return (function cubehelixGamma(y) {\n\t    y = +y;\n\t\n\t    function cubehelix$$1(start, end) {\n\t      var h = hue$$1((start = cubehelix(start)).h, (end = cubehelix(end)).h),\n\t          s = nogamma(start.s, end.s),\n\t          l = nogamma(start.l, end.l),\n\t          opacity = nogamma(start.opacity, end.opacity);\n\t      return function(t) {\n\t        start.h = h(t);\n\t        start.s = s(t);\n\t        start.l = l(Math.pow(t, y));\n\t        start.opacity = opacity(t);\n\t        return start + \"\";\n\t      };\n\t    }\n\t\n\t    cubehelix$$1.gamma = cubehelixGamma;\n\t\n\t    return cubehelix$$1;\n\t  })(1);\n\t}\n\t\n\tvar cubehelix$2 = cubehelix$1(hue);\n\tvar cubehelixLong = cubehelix$1(nogamma);\n\t\n\tvar quantize = function(interpolator, n) {\n\t  var samples = new Array(n);\n\t  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n\t  return samples;\n\t};\n\t\n\tvar frame = 0;\n\tvar timeout = 0;\n\tvar interval = 0;\n\tvar pokeDelay = 1000;\n\tvar taskHead;\n\tvar taskTail;\n\tvar clockLast = 0;\n\tvar clockNow = 0;\n\tvar clockSkew = 0;\n\tvar clock = typeof performance === \"object\" && performance.now ? performance : Date;\n\tvar setFrame = typeof requestAnimationFrame === \"function\" ? requestAnimationFrame : function(f) { setTimeout(f, 17); };\n\t\n\tfunction now() {\n\t  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n\t}\n\t\n\tfunction clearNow() {\n\t  clockNow = 0;\n\t}\n\t\n\tfunction Timer() {\n\t  this._call =\n\t  this._time =\n\t  this._next = null;\n\t}\n\t\n\tTimer.prototype = timer.prototype = {\n\t  constructor: Timer,\n\t  restart: function(callback, delay, time) {\n\t    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n\t    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n\t    if (!this._next && taskTail !== this) {\n\t      if (taskTail) taskTail._next = this;\n\t      else taskHead = this;\n\t      taskTail = this;\n\t    }\n\t    this._call = callback;\n\t    this._time = time;\n\t    sleep();\n\t  },\n\t  stop: function() {\n\t    if (this._call) {\n\t      this._call = null;\n\t      this._time = Infinity;\n\t      sleep();\n\t    }\n\t  }\n\t};\n\t\n\tfunction timer(callback, delay, time) {\n\t  var t = new Timer;\n\t  t.restart(callback, delay, time);\n\t  return t;\n\t}\n\t\n\tfunction timerFlush() {\n\t  now(); // Get the current time, if not already set.\n\t  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n\t  var t = taskHead, e;\n\t  while (t) {\n\t    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n\t    t = t._next;\n\t  }\n\t  --frame;\n\t}\n\t\n\tfunction wake() {\n\t  clockNow = (clockLast = clock.now()) + clockSkew;\n\t  frame = timeout = 0;\n\t  try {\n\t    timerFlush();\n\t  } finally {\n\t    frame = 0;\n\t    nap();\n\t    clockNow = 0;\n\t  }\n\t}\n\t\n\tfunction poke() {\n\t  var now = clock.now(), delay = now - clockLast;\n\t  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n\t}\n\t\n\tfunction nap() {\n\t  var t0, t1 = taskHead, t2, time = Infinity;\n\t  while (t1) {\n\t    if (t1._call) {\n\t      if (time > t1._time) time = t1._time;\n\t      t0 = t1, t1 = t1._next;\n\t    } else {\n\t      t2 = t1._next, t1._next = null;\n\t      t1 = t0 ? t0._next = t2 : taskHead = t2;\n\t    }\n\t  }\n\t  taskTail = t0;\n\t  sleep(time);\n\t}\n\t\n\tfunction sleep(time) {\n\t  if (frame) return; // Soonest alarm already set, or will be.\n\t  if (timeout) timeout = clearTimeout(timeout);\n\t  var delay = time - clockNow;\n\t  if (delay > 24) {\n\t    if (time < Infinity) timeout = setTimeout(wake, delay);\n\t    if (interval) interval = clearInterval(interval);\n\t  } else {\n\t    if (!interval) clockLast = clockNow, interval = setInterval(poke, pokeDelay);\n\t    frame = 1, setFrame(wake);\n\t  }\n\t}\n\t\n\tvar timeout$1 = function(callback, delay, time) {\n\t  var t = new Timer;\n\t  delay = delay == null ? 0 : +delay;\n\t  t.restart(function(elapsed) {\n\t    t.stop();\n\t    callback(elapsed + delay);\n\t  }, delay, time);\n\t  return t;\n\t};\n\t\n\tvar interval$1 = function(callback, delay, time) {\n\t  var t = new Timer, total = delay;\n\t  if (delay == null) return t.restart(callback, delay, time), t;\n\t  delay = +delay, time = time == null ? now() : +time;\n\t  t.restart(function tick(elapsed) {\n\t    elapsed += total;\n\t    t.restart(tick, total += delay, time);\n\t    callback(elapsed);\n\t  }, delay, time);\n\t  return t;\n\t};\n\t\n\tvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\n\tvar emptyTween = [];\n\t\n\tvar CREATED = 0;\n\tvar SCHEDULED = 1;\n\tvar STARTING = 2;\n\tvar STARTED = 3;\n\tvar RUNNING = 4;\n\tvar ENDING = 5;\n\tvar ENDED = 6;\n\t\n\tvar schedule = function(node, name, id, index, group, timing) {\n\t  var schedules = node.__transition;\n\t  if (!schedules) node.__transition = {};\n\t  else if (id in schedules) return;\n\t  create(node, id, {\n\t    name: name,\n\t    index: index, // For context during callback.\n\t    group: group, // For context during callback.\n\t    on: emptyOn,\n\t    tween: emptyTween,\n\t    time: timing.time,\n\t    delay: timing.delay,\n\t    duration: timing.duration,\n\t    ease: timing.ease,\n\t    timer: null,\n\t    state: CREATED\n\t  });\n\t};\n\t\n\tfunction init(node, id) {\n\t  var schedule = node.__transition;\n\t  if (!schedule || !(schedule = schedule[id]) || schedule.state > CREATED) throw new Error(\"too late\");\n\t  return schedule;\n\t}\n\t\n\tfunction set$1(node, id) {\n\t  var schedule = node.__transition;\n\t  if (!schedule || !(schedule = schedule[id]) || schedule.state > STARTING) throw new Error(\"too late\");\n\t  return schedule;\n\t}\n\t\n\tfunction get$1(node, id) {\n\t  var schedule = node.__transition;\n\t  if (!schedule || !(schedule = schedule[id])) throw new Error(\"too late\");\n\t  return schedule;\n\t}\n\t\n\tfunction create(node, id, self) {\n\t  var schedules = node.__transition,\n\t      tween;\n\t\n\t  // Initialize the self timer when the transition is created.\n\t  // Note the actual delay is not known until the first callback!\n\t  schedules[id] = self;\n\t  self.timer = timer(schedule, 0, self.time);\n\t\n\t  function schedule(elapsed) {\n\t    self.state = SCHEDULED;\n\t    self.timer.restart(start, self.delay, self.time);\n\t\n\t    // If the elapsed delay is less than our first sleep, start immediately.\n\t    if (self.delay <= elapsed) start(elapsed - self.delay);\n\t  }\n\t\n\t  function start(elapsed) {\n\t    var i, j, n, o;\n\t\n\t    // If the state is not SCHEDULED, then we previously errored on start.\n\t    if (self.state !== SCHEDULED) return stop();\n\t\n\t    for (i in schedules) {\n\t      o = schedules[i];\n\t      if (o.name !== self.name) continue;\n\t\n\t      // While this element already has a starting transition during this frame,\n\t      // defer starting an interrupting transition until that transition has a\n\t      // chance to tick (and possibly end); see d3/d3-transition#54!\n\t      if (o.state === STARTED) return timeout$1(start);\n\t\n\t      // Interrupt the active transition, if any.\n\t      // Dispatch the interrupt event.\n\t      if (o.state === RUNNING) {\n\t        o.state = ENDED;\n\t        o.timer.stop();\n\t        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n\t        delete schedules[i];\n\t      }\n\t\n\t      // Cancel any pre-empted transitions. No interrupt event is dispatched\n\t      // because the cancelled transitions never started. Note that this also\n\t      // removes this transition from the pending list!\n\t      else if (+i < id) {\n\t        o.state = ENDED;\n\t        o.timer.stop();\n\t        delete schedules[i];\n\t      }\n\t    }\n\t\n\t    // Defer the first tick to end of the current frame; see d3/d3#1576.\n\t    // Note the transition may be canceled after start and before the first tick!\n\t    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n\t    // Assuming this is successful, subsequent callbacks go straight to tick.\n\t    timeout$1(function() {\n\t      if (self.state === STARTED) {\n\t        self.state = RUNNING;\n\t        self.timer.restart(tick, self.delay, self.time);\n\t        tick(elapsed);\n\t      }\n\t    });\n\t\n\t    // Dispatch the start event.\n\t    // Note this must be done before the tween are initialized.\n\t    self.state = STARTING;\n\t    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n\t    if (self.state !== STARTING) return; // interrupted\n\t    self.state = STARTED;\n\t\n\t    // Initialize the tween, deleting null tween.\n\t    tween = new Array(n = self.tween.length);\n\t    for (i = 0, j = -1; i < n; ++i) {\n\t      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n\t        tween[++j] = o;\n\t      }\n\t    }\n\t    tween.length = j + 1;\n\t  }\n\t\n\t  function tick(elapsed) {\n\t    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n\t        i = -1,\n\t        n = tween.length;\n\t\n\t    while (++i < n) {\n\t      tween[i].call(null, t);\n\t    }\n\t\n\t    // Dispatch the end event.\n\t    if (self.state === ENDING) {\n\t      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n\t      stop();\n\t    }\n\t  }\n\t\n\t  function stop() {\n\t    self.state = ENDED;\n\t    self.timer.stop();\n\t    delete schedules[id];\n\t    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n\t    delete node.__transition;\n\t  }\n\t}\n\t\n\tvar interrupt = function(node, name) {\n\t  var schedules = node.__transition,\n\t      schedule,\n\t      active,\n\t      empty = true,\n\t      i;\n\t\n\t  if (!schedules) return;\n\t\n\t  name = name == null ? null : name + \"\";\n\t\n\t  for (i in schedules) {\n\t    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n\t    active = schedule.state > STARTING && schedule.state < ENDING;\n\t    schedule.state = ENDED;\n\t    schedule.timer.stop();\n\t    if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n\t    delete schedules[i];\n\t  }\n\t\n\t  if (empty) delete node.__transition;\n\t};\n\t\n\tvar selection_interrupt = function(name) {\n\t  return this.each(function() {\n\t    interrupt(this, name);\n\t  });\n\t};\n\t\n\tfunction tweenRemove(id, name) {\n\t  var tween0, tween1;\n\t  return function() {\n\t    var schedule = set$1(this, id),\n\t        tween = schedule.tween;\n\t\n\t    // If this node shared tween with the previous node,\n\t    // just assign the updated shared tween and we’re done!\n\t    // Otherwise, copy-on-write.\n\t    if (tween !== tween0) {\n\t      tween1 = tween0 = tween;\n\t      for (var i = 0, n = tween1.length; i < n; ++i) {\n\t        if (tween1[i].name === name) {\n\t          tween1 = tween1.slice();\n\t          tween1.splice(i, 1);\n\t          break;\n\t        }\n\t      }\n\t    }\n\t\n\t    schedule.tween = tween1;\n\t  };\n\t}\n\t\n\tfunction tweenFunction(id, name, value) {\n\t  var tween0, tween1;\n\t  if (typeof value !== \"function\") throw new Error;\n\t  return function() {\n\t    var schedule = set$1(this, id),\n\t        tween = schedule.tween;\n\t\n\t    // If this node shared tween with the previous node,\n\t    // just assign the updated shared tween and we’re done!\n\t    // Otherwise, copy-on-write.\n\t    if (tween !== tween0) {\n\t      tween1 = (tween0 = tween).slice();\n\t      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n\t        if (tween1[i].name === name) {\n\t          tween1[i] = t;\n\t          break;\n\t        }\n\t      }\n\t      if (i === n) tween1.push(t);\n\t    }\n\t\n\t    schedule.tween = tween1;\n\t  };\n\t}\n\t\n\tvar transition_tween = function(name, value) {\n\t  var id = this._id;\n\t\n\t  name += \"\";\n\t\n\t  if (arguments.length < 2) {\n\t    var tween = get$1(this.node(), id).tween;\n\t    for (var i = 0, n = tween.length, t; i < n; ++i) {\n\t      if ((t = tween[i]).name === name) {\n\t        return t.value;\n\t      }\n\t    }\n\t    return null;\n\t  }\n\t\n\t  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n\t};\n\t\n\tfunction tweenValue(transition, name, value) {\n\t  var id = transition._id;\n\t\n\t  transition.each(function() {\n\t    var schedule = set$1(this, id);\n\t    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n\t  });\n\t\n\t  return function(node) {\n\t    return get$1(node, id).value[name];\n\t  };\n\t}\n\t\n\tvar interpolate$$1 = function(a, b) {\n\t  var c;\n\t  return (typeof b === \"number\" ? reinterpolate\n\t      : b instanceof color ? interpolateRgb\n\t      : (c = color(b)) ? (b = c, interpolateRgb)\n\t      : interpolateString)(a, b);\n\t};\n\t\n\tfunction attrRemove$1(name) {\n\t  return function() {\n\t    this.removeAttribute(name);\n\t  };\n\t}\n\t\n\tfunction attrRemoveNS$1(fullname) {\n\t  return function() {\n\t    this.removeAttributeNS(fullname.space, fullname.local);\n\t  };\n\t}\n\t\n\tfunction attrConstant$1(name, interpolate$$1, value1) {\n\t  var value00,\n\t      interpolate0;\n\t  return function() {\n\t    var value0 = this.getAttribute(name);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value1);\n\t  };\n\t}\n\t\n\tfunction attrConstantNS$1(fullname, interpolate$$1, value1) {\n\t  var value00,\n\t      interpolate0;\n\t  return function() {\n\t    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value1);\n\t  };\n\t}\n\t\n\tfunction attrFunction$1(name, interpolate$$1, value) {\n\t  var value00,\n\t      value10,\n\t      interpolate0;\n\t  return function() {\n\t    var value0, value1 = value(this);\n\t    if (value1 == null) return void this.removeAttribute(name);\n\t    value0 = this.getAttribute(name);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 && value1 === value10 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n\t  };\n\t}\n\t\n\tfunction attrFunctionNS$1(fullname, interpolate$$1, value) {\n\t  var value00,\n\t      value10,\n\t      interpolate0;\n\t  return function() {\n\t    var value0, value1 = value(this);\n\t    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n\t    value0 = this.getAttributeNS(fullname.space, fullname.local);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 && value1 === value10 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n\t  };\n\t}\n\t\n\tvar transition_attr = function(name, value) {\n\t  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransformSvg : interpolate$$1;\n\t  return this.attrTween(name, typeof value === \"function\"\n\t      ? (fullname.local ? attrFunctionNS$1 : attrFunction$1)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n\t      : value == null ? (fullname.local ? attrRemoveNS$1 : attrRemove$1)(fullname)\n\t      : (fullname.local ? attrConstantNS$1 : attrConstant$1)(fullname, i, value + \"\"));\n\t};\n\t\n\tfunction attrTweenNS(fullname, value) {\n\t  function tween() {\n\t    var node = this, i = value.apply(node, arguments);\n\t    return i && function(t) {\n\t      node.setAttributeNS(fullname.space, fullname.local, i(t));\n\t    };\n\t  }\n\t  tween._value = value;\n\t  return tween;\n\t}\n\t\n\tfunction attrTween(name, value) {\n\t  function tween() {\n\t    var node = this, i = value.apply(node, arguments);\n\t    return i && function(t) {\n\t      node.setAttribute(name, i(t));\n\t    };\n\t  }\n\t  tween._value = value;\n\t  return tween;\n\t}\n\t\n\tvar transition_attrTween = function(name, value) {\n\t  var key = \"attr.\" + name;\n\t  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n\t  if (value == null) return this.tween(key, null);\n\t  if (typeof value !== \"function\") throw new Error;\n\t  var fullname = namespace(name);\n\t  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n\t};\n\t\n\tfunction delayFunction(id, value) {\n\t  return function() {\n\t    init(this, id).delay = +value.apply(this, arguments);\n\t  };\n\t}\n\t\n\tfunction delayConstant(id, value) {\n\t  return value = +value, function() {\n\t    init(this, id).delay = value;\n\t  };\n\t}\n\t\n\tvar transition_delay = function(value) {\n\t  var id = this._id;\n\t\n\t  return arguments.length\n\t      ? this.each((typeof value === \"function\"\n\t          ? delayFunction\n\t          : delayConstant)(id, value))\n\t      : get$1(this.node(), id).delay;\n\t};\n\t\n\tfunction durationFunction(id, value) {\n\t  return function() {\n\t    set$1(this, id).duration = +value.apply(this, arguments);\n\t  };\n\t}\n\t\n\tfunction durationConstant(id, value) {\n\t  return value = +value, function() {\n\t    set$1(this, id).duration = value;\n\t  };\n\t}\n\t\n\tvar transition_duration = function(value) {\n\t  var id = this._id;\n\t\n\t  return arguments.length\n\t      ? this.each((typeof value === \"function\"\n\t          ? durationFunction\n\t          : durationConstant)(id, value))\n\t      : get$1(this.node(), id).duration;\n\t};\n\t\n\tfunction easeConstant(id, value) {\n\t  if (typeof value !== \"function\") throw new Error;\n\t  return function() {\n\t    set$1(this, id).ease = value;\n\t  };\n\t}\n\t\n\tvar transition_ease = function(value) {\n\t  var id = this._id;\n\t\n\t  return arguments.length\n\t      ? this.each(easeConstant(id, value))\n\t      : get$1(this.node(), id).ease;\n\t};\n\t\n\tvar transition_filter = function(match) {\n\t  if (typeof match !== \"function\") match = matcher$1(match);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n\t      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(subgroups, this._parents, this._name, this._id);\n\t};\n\t\n\tvar transition_merge = function(transition) {\n\t  if (transition._id !== this._id) throw new Error;\n\t\n\t  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n\t    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n\t      if (node = group0[i] || group1[i]) {\n\t        merge[i] = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  for (; j < m0; ++j) {\n\t    merges[j] = groups0[j];\n\t  }\n\t\n\t  return new Transition(merges, this._parents, this._name, this._id);\n\t};\n\t\n\tfunction start(name) {\n\t  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n\t    var i = t.indexOf(\".\");\n\t    if (i >= 0) t = t.slice(0, i);\n\t    return !t || t === \"start\";\n\t  });\n\t}\n\t\n\tfunction onFunction(id, name, listener) {\n\t  var on0, on1, sit = start(name) ? init : set$1;\n\t  return function() {\n\t    var schedule = sit(this, id),\n\t        on = schedule.on;\n\t\n\t    // If this node shared a dispatch with the previous node,\n\t    // just assign the updated shared dispatch and we’re done!\n\t    // Otherwise, copy-on-write.\n\t    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\t\n\t    schedule.on = on1;\n\t  };\n\t}\n\t\n\tvar transition_on = function(name, listener) {\n\t  var id = this._id;\n\t\n\t  return arguments.length < 2\n\t      ? get$1(this.node(), id).on.on(name)\n\t      : this.each(onFunction(id, name, listener));\n\t};\n\t\n\tfunction removeFunction(id) {\n\t  return function() {\n\t    var parent = this.parentNode;\n\t    for (var i in this.__transition) if (+i !== id) return;\n\t    if (parent) parent.removeChild(this);\n\t  };\n\t}\n\t\n\tvar transition_remove = function() {\n\t  return this.on(\"end.remove\", removeFunction(this._id));\n\t};\n\t\n\tvar transition_select = function(select$$1) {\n\t  var name = this._name,\n\t      id = this._id;\n\t\n\t  if (typeof select$$1 !== \"function\") select$$1 = selector(select$$1);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n\t      if ((node = group[i]) && (subnode = select$$1.call(node, node.__data__, i, group))) {\n\t        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n\t        subgroup[i] = subnode;\n\t        schedule(subgroup[i], name, id, i, subgroup, get$1(node, id));\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(subgroups, this._parents, name, id);\n\t};\n\t\n\tvar transition_selectAll = function(select$$1) {\n\t  var name = this._name,\n\t      id = this._id;\n\t\n\t  if (typeof select$$1 !== \"function\") select$$1 = selectorAll(select$$1);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        for (var children = select$$1.call(node, node.__data__, i, group), child, inherit = get$1(node, id), k = 0, l = children.length; k < l; ++k) {\n\t          if (child = children[k]) {\n\t            schedule(child, name, id, k, children, inherit);\n\t          }\n\t        }\n\t        subgroups.push(children);\n\t        parents.push(node);\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(subgroups, parents, name, id);\n\t};\n\t\n\tvar Selection$1 = selection.prototype.constructor;\n\t\n\tvar transition_selection = function() {\n\t  return new Selection$1(this._groups, this._parents);\n\t};\n\t\n\tfunction styleRemove$1(name, interpolate$$2) {\n\t  var value00,\n\t      value10,\n\t      interpolate0;\n\t  return function() {\n\t    var style = window(this).getComputedStyle(this, null),\n\t        value0 = style.getPropertyValue(name),\n\t        value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n\t    return value0 === value1 ? null\n\t        : value0 === value00 && value1 === value10 ? interpolate0\n\t        : interpolate0 = interpolate$$2(value00 = value0, value10 = value1);\n\t  };\n\t}\n\t\n\tfunction styleRemoveEnd(name) {\n\t  return function() {\n\t    this.style.removeProperty(name);\n\t  };\n\t}\n\t\n\tfunction styleConstant$1(name, interpolate$$2, value1) {\n\t  var value00,\n\t      interpolate0;\n\t  return function() {\n\t    var value0 = window(this).getComputedStyle(this, null).getPropertyValue(name);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 ? interpolate0\n\t        : interpolate0 = interpolate$$2(value00 = value0, value1);\n\t  };\n\t}\n\t\n\tfunction styleFunction$1(name, interpolate$$2, value) {\n\t  var value00,\n\t      value10,\n\t      interpolate0;\n\t  return function() {\n\t    var style = window(this).getComputedStyle(this, null),\n\t        value0 = style.getPropertyValue(name),\n\t        value1 = value(this);\n\t    if (value1 == null) value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n\t    return value0 === value1 ? null\n\t        : value0 === value00 && value1 === value10 ? interpolate0\n\t        : interpolate0 = interpolate$$2(value00 = value0, value10 = value1);\n\t  };\n\t}\n\t\n\tvar transition_style = function(name, value, priority) {\n\t  var i = (name += \"\") === \"transform\" ? interpolateTransformCss : interpolate$$1;\n\t  return value == null ? this\n\t          .styleTween(name, styleRemove$1(name, i))\n\t          .on(\"end.style.\" + name, styleRemoveEnd(name))\n\t      : this.styleTween(name, typeof value === \"function\"\n\t          ? styleFunction$1(name, i, tweenValue(this, \"style.\" + name, value))\n\t          : styleConstant$1(name, i, value + \"\"), priority);\n\t};\n\t\n\tfunction styleTween(name, value, priority) {\n\t  function tween() {\n\t    var node = this, i = value.apply(node, arguments);\n\t    return i && function(t) {\n\t      node.style.setProperty(name, i(t), priority);\n\t    };\n\t  }\n\t  tween._value = value;\n\t  return tween;\n\t}\n\t\n\tvar transition_styleTween = function(name, value, priority) {\n\t  var key = \"style.\" + (name += \"\");\n\t  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n\t  if (value == null) return this.tween(key, null);\n\t  if (typeof value !== \"function\") throw new Error;\n\t  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n\t};\n\t\n\tfunction textConstant$1(value) {\n\t  return function() {\n\t    this.textContent = value;\n\t  };\n\t}\n\t\n\tfunction textFunction$1(value) {\n\t  return function() {\n\t    var value1 = value(this);\n\t    this.textContent = value1 == null ? \"\" : value1;\n\t  };\n\t}\n\t\n\tvar transition_text = function(value) {\n\t  return this.tween(\"text\", typeof value === \"function\"\n\t      ? textFunction$1(tweenValue(this, \"text\", value))\n\t      : textConstant$1(value == null ? \"\" : value + \"\"));\n\t};\n\t\n\tvar transition_transition = function() {\n\t  var name = this._name,\n\t      id0 = this._id,\n\t      id1 = newId();\n\t\n\t  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        var inherit = get$1(node, id0);\n\t        schedule(node, name, id1, i, group, {\n\t          time: inherit.time + inherit.delay + inherit.duration,\n\t          delay: 0,\n\t          duration: inherit.duration,\n\t          ease: inherit.ease\n\t        });\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(groups, this._parents, name, id1);\n\t};\n\t\n\tvar id = 0;\n\t\n\tfunction Transition(groups, parents, name, id) {\n\t  this._groups = groups;\n\t  this._parents = parents;\n\t  this._name = name;\n\t  this._id = id;\n\t}\n\t\n\tfunction transition(name) {\n\t  return selection().transition(name);\n\t}\n\t\n\tfunction newId() {\n\t  return ++id;\n\t}\n\t\n\tvar selection_prototype = selection.prototype;\n\t\n\tTransition.prototype = transition.prototype = {\n\t  constructor: Transition,\n\t  select: transition_select,\n\t  selectAll: transition_selectAll,\n\t  filter: transition_filter,\n\t  merge: transition_merge,\n\t  selection: transition_selection,\n\t  transition: transition_transition,\n\t  call: selection_prototype.call,\n\t  nodes: selection_prototype.nodes,\n\t  node: selection_prototype.node,\n\t  size: selection_prototype.size,\n\t  empty: selection_prototype.empty,\n\t  each: selection_prototype.each,\n\t  on: transition_on,\n\t  attr: transition_attr,\n\t  attrTween: transition_attrTween,\n\t  style: transition_style,\n\t  styleTween: transition_styleTween,\n\t  text: transition_text,\n\t  remove: transition_remove,\n\t  tween: transition_tween,\n\t  delay: transition_delay,\n\t  duration: transition_duration,\n\t  ease: transition_ease\n\t};\n\t\n\tfunction linear$1(t) {\n\t  return +t;\n\t}\n\t\n\tfunction quadIn(t) {\n\t  return t * t;\n\t}\n\t\n\tfunction quadOut(t) {\n\t  return t * (2 - t);\n\t}\n\t\n\tfunction quadInOut(t) {\n\t  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n\t}\n\t\n\tfunction cubicIn(t) {\n\t  return t * t * t;\n\t}\n\t\n\tfunction cubicOut(t) {\n\t  return --t * t * t + 1;\n\t}\n\t\n\tfunction cubicInOut(t) {\n\t  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n\t}\n\t\n\tvar exponent = 3;\n\t\n\tvar polyIn = (function custom(e) {\n\t  e = +e;\n\t\n\t  function polyIn(t) {\n\t    return Math.pow(t, e);\n\t  }\n\t\n\t  polyIn.exponent = custom;\n\t\n\t  return polyIn;\n\t})(exponent);\n\t\n\tvar polyOut = (function custom(e) {\n\t  e = +e;\n\t\n\t  function polyOut(t) {\n\t    return 1 - Math.pow(1 - t, e);\n\t  }\n\t\n\t  polyOut.exponent = custom;\n\t\n\t  return polyOut;\n\t})(exponent);\n\t\n\tvar polyInOut = (function custom(e) {\n\t  e = +e;\n\t\n\t  function polyInOut(t) {\n\t    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n\t  }\n\t\n\t  polyInOut.exponent = custom;\n\t\n\t  return polyInOut;\n\t})(exponent);\n\t\n\tvar pi = Math.PI;\n\tvar halfPi = pi / 2;\n\t\n\tfunction sinIn(t) {\n\t  return 1 - Math.cos(t * halfPi);\n\t}\n\t\n\tfunction sinOut(t) {\n\t  return Math.sin(t * halfPi);\n\t}\n\t\n\tfunction sinInOut(t) {\n\t  return (1 - Math.cos(pi * t)) / 2;\n\t}\n\t\n\tfunction expIn(t) {\n\t  return Math.pow(2, 10 * t - 10);\n\t}\n\t\n\tfunction expOut(t) {\n\t  return 1 - Math.pow(2, -10 * t);\n\t}\n\t\n\tfunction expInOut(t) {\n\t  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n\t}\n\t\n\tfunction circleIn(t) {\n\t  return 1 - Math.sqrt(1 - t * t);\n\t}\n\t\n\tfunction circleOut(t) {\n\t  return Math.sqrt(1 - --t * t);\n\t}\n\t\n\tfunction circleInOut(t) {\n\t  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n\t}\n\t\n\tvar b1 = 4 / 11;\n\tvar b2 = 6 / 11;\n\tvar b3 = 8 / 11;\n\tvar b4 = 3 / 4;\n\tvar b5 = 9 / 11;\n\tvar b6 = 10 / 11;\n\tvar b7 = 15 / 16;\n\tvar b8 = 21 / 22;\n\tvar b9 = 63 / 64;\n\tvar b0 = 1 / b1 / b1;\n\t\n\tfunction bounceIn(t) {\n\t  return 1 - bounceOut(1 - t);\n\t}\n\t\n\tfunction bounceOut(t) {\n\t  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n\t}\n\t\n\tfunction bounceInOut(t) {\n\t  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n\t}\n\t\n\tvar overshoot = 1.70158;\n\t\n\tvar backIn = (function custom(s) {\n\t  s = +s;\n\t\n\t  function backIn(t) {\n\t    return t * t * ((s + 1) * t - s);\n\t  }\n\t\n\t  backIn.overshoot = custom;\n\t\n\t  return backIn;\n\t})(overshoot);\n\t\n\tvar backOut = (function custom(s) {\n\t  s = +s;\n\t\n\t  function backOut(t) {\n\t    return --t * t * ((s + 1) * t + s) + 1;\n\t  }\n\t\n\t  backOut.overshoot = custom;\n\t\n\t  return backOut;\n\t})(overshoot);\n\t\n\tvar backInOut = (function custom(s) {\n\t  s = +s;\n\t\n\t  function backInOut(t) {\n\t    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n\t  }\n\t\n\t  backInOut.overshoot = custom;\n\t\n\t  return backInOut;\n\t})(overshoot);\n\t\n\tvar tau = 2 * Math.PI;\n\tvar amplitude = 1;\n\tvar period = 0.3;\n\t\n\tvar elasticIn = (function custom(a, p) {\n\t  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\t\n\t  function elasticIn(t) {\n\t    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n\t  }\n\t\n\t  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n\t  elasticIn.period = function(p) { return custom(a, p); };\n\t\n\t  return elasticIn;\n\t})(amplitude, period);\n\t\n\tvar elasticOut = (function custom(a, p) {\n\t  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\t\n\t  function elasticOut(t) {\n\t    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n\t  }\n\t\n\t  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n\t  elasticOut.period = function(p) { return custom(a, p); };\n\t\n\t  return elasticOut;\n\t})(amplitude, period);\n\t\n\tvar elasticInOut = (function custom(a, p) {\n\t  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\t\n\t  function elasticInOut(t) {\n\t    return ((t = t * 2 - 1) < 0\n\t        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n\t        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n\t  }\n\t\n\t  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n\t  elasticInOut.period = function(p) { return custom(a, p); };\n\t\n\t  return elasticInOut;\n\t})(amplitude, period);\n\t\n\tvar defaultTiming = {\n\t  time: null, // Set on use.\n\t  delay: 0,\n\t  duration: 250,\n\t  ease: cubicInOut\n\t};\n\t\n\tfunction inherit(node, id) {\n\t  var timing;\n\t  while (!(timing = node.__transition) || !(timing = timing[id])) {\n\t    if (!(node = node.parentNode)) {\n\t      return defaultTiming.time = now(), defaultTiming;\n\t    }\n\t  }\n\t  return timing;\n\t}\n\t\n\tvar selection_transition = function(name) {\n\t  var id,\n\t      timing;\n\t\n\t  if (name instanceof Transition) {\n\t    id = name._id, name = name._name;\n\t  } else {\n\t    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n\t  }\n\t\n\t  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        schedule(node, name, id, i, group, timing || inherit(node, id));\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(groups, this._parents, name, id);\n\t};\n\t\n\tselection.prototype.interrupt = selection_interrupt;\n\tselection.prototype.transition = selection_transition;\n\t\n\tvar root$1 = [null];\n\t\n\tvar active = function(node, name) {\n\t  var schedules = node.__transition,\n\t      schedule,\n\t      i;\n\t\n\t  if (schedules) {\n\t    name = name == null ? null : name + \"\";\n\t    for (i in schedules) {\n\t      if ((schedule = schedules[i]).state > SCHEDULED && schedule.name === name) {\n\t        return new Transition([[node]], root$1, name, +i);\n\t      }\n\t    }\n\t  }\n\t\n\t  return null;\n\t};\n\t\n\tvar constant$4 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar BrushEvent = function(target, type, selection) {\n\t  this.target = target;\n\t  this.type = type;\n\t  this.selection = selection;\n\t};\n\t\n\tfunction nopropagation$1() {\n\t  exports.event.stopImmediatePropagation();\n\t}\n\t\n\tvar noevent$1 = function() {\n\t  exports.event.preventDefault();\n\t  exports.event.stopImmediatePropagation();\n\t};\n\t\n\tvar MODE_DRAG = {name: \"drag\"};\n\tvar MODE_SPACE = {name: \"space\"};\n\tvar MODE_HANDLE = {name: \"handle\"};\n\tvar MODE_CENTER = {name: \"center\"};\n\t\n\tvar X = {\n\t  name: \"x\",\n\t  handles: [\"e\", \"w\"].map(type),\n\t  input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n\t  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n\t};\n\t\n\tvar Y = {\n\t  name: \"y\",\n\t  handles: [\"n\", \"s\"].map(type),\n\t  input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n\t  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n\t};\n\t\n\tvar XY = {\n\t  name: \"xy\",\n\t  handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type),\n\t  input: function(xy) { return xy; },\n\t  output: function(xy) { return xy; }\n\t};\n\t\n\tvar cursors = {\n\t  overlay: \"crosshair\",\n\t  selection: \"move\",\n\t  n: \"ns-resize\",\n\t  e: \"ew-resize\",\n\t  s: \"ns-resize\",\n\t  w: \"ew-resize\",\n\t  nw: \"nwse-resize\",\n\t  ne: \"nesw-resize\",\n\t  se: \"nwse-resize\",\n\t  sw: \"nesw-resize\"\n\t};\n\t\n\tvar flipX = {\n\t  e: \"w\",\n\t  w: \"e\",\n\t  nw: \"ne\",\n\t  ne: \"nw\",\n\t  se: \"sw\",\n\t  sw: \"se\"\n\t};\n\t\n\tvar flipY = {\n\t  n: \"s\",\n\t  s: \"n\",\n\t  nw: \"sw\",\n\t  ne: \"se\",\n\t  se: \"ne\",\n\t  sw: \"nw\"\n\t};\n\t\n\tvar signsX = {\n\t  overlay: +1,\n\t  selection: +1,\n\t  n: null,\n\t  e: +1,\n\t  s: null,\n\t  w: -1,\n\t  nw: -1,\n\t  ne: +1,\n\t  se: +1,\n\t  sw: -1\n\t};\n\t\n\tvar signsY = {\n\t  overlay: +1,\n\t  selection: +1,\n\t  n: -1,\n\t  e: null,\n\t  s: +1,\n\t  w: null,\n\t  nw: -1,\n\t  ne: -1,\n\t  se: +1,\n\t  sw: +1\n\t};\n\t\n\tfunction type(t) {\n\t  return {type: t};\n\t}\n\t\n\t// Ignore right-click, since that should open the context menu.\n\tfunction defaultFilter() {\n\t  return !exports.event.button;\n\t}\n\t\n\tfunction defaultExtent() {\n\t  var svg = this.ownerSVGElement || this;\n\t  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n\t}\n\t\n\t// Like d3.local, but with the name “__brush” rather than auto-generated.\n\tfunction local$$1(node) {\n\t  while (!node.__brush) if (!(node = node.parentNode)) return;\n\t  return node.__brush;\n\t}\n\t\n\tfunction empty(extent) {\n\t  return extent[0][0] === extent[1][0]\n\t      || extent[0][1] === extent[1][1];\n\t}\n\t\n\tfunction brushSelection(node) {\n\t  var state = node.__brush;\n\t  return state ? state.dim.output(state.selection) : null;\n\t}\n\t\n\tfunction brushX() {\n\t  return brush$1(X);\n\t}\n\t\n\tfunction brushY() {\n\t  return brush$1(Y);\n\t}\n\t\n\tvar brush = function() {\n\t  return brush$1(XY);\n\t};\n\t\n\tfunction brush$1(dim) {\n\t  var extent = defaultExtent,\n\t      filter = defaultFilter,\n\t      listeners = dispatch(brush, \"start\", \"brush\", \"end\"),\n\t      handleSize = 6,\n\t      touchending;\n\t\n\t  function brush(group) {\n\t    var overlay = group\n\t        .property(\"__brush\", initialize)\n\t      .selectAll(\".overlay\")\n\t      .data([type(\"overlay\")]);\n\t\n\t    overlay.enter().append(\"rect\")\n\t        .attr(\"class\", \"overlay\")\n\t        .attr(\"pointer-events\", \"all\")\n\t        .attr(\"cursor\", cursors.overlay)\n\t      .merge(overlay)\n\t        .each(function() {\n\t          var extent = local$$1(this).extent;\n\t          select(this)\n\t              .attr(\"x\", extent[0][0])\n\t              .attr(\"y\", extent[0][1])\n\t              .attr(\"width\", extent[1][0] - extent[0][0])\n\t              .attr(\"height\", extent[1][1] - extent[0][1]);\n\t        });\n\t\n\t    group.selectAll(\".selection\")\n\t      .data([type(\"selection\")])\n\t      .enter().append(\"rect\")\n\t        .attr(\"class\", \"selection\")\n\t        .attr(\"cursor\", cursors.selection)\n\t        .attr(\"fill\", \"#777\")\n\t        .attr(\"fill-opacity\", 0.3)\n\t        .attr(\"stroke\", \"#fff\")\n\t        .attr(\"shape-rendering\", \"crispEdges\");\n\t\n\t    var handle = group.selectAll(\".handle\")\n\t      .data(dim.handles, function(d) { return d.type; });\n\t\n\t    handle.exit().remove();\n\t\n\t    handle.enter().append(\"rect\")\n\t        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n\t        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\t\n\t    group\n\t        .each(redraw)\n\t        .attr(\"fill\", \"none\")\n\t        .attr(\"pointer-events\", \"all\")\n\t        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n\t        .on(\"mousedown.brush touchstart.brush\", started);\n\t  }\n\t\n\t  brush.move = function(group, selection$$1) {\n\t    if (group.selection) {\n\t      group\n\t          .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n\t          .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n\t          .tween(\"brush\", function() {\n\t            var that = this,\n\t                state = that.__brush,\n\t                emit = emitter(that, arguments),\n\t                selection0 = state.selection,\n\t                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(this, arguments) : selection$$1, state.extent),\n\t                i = interpolateValue(selection0, selection1);\n\t\n\t            function tween(t) {\n\t              state.selection = t === 1 && empty(selection1) ? null : i(t);\n\t              redraw.call(that);\n\t              emit.brush();\n\t            }\n\t\n\t            return selection0 && selection1 ? tween : tween(1);\n\t          });\n\t    } else {\n\t      group\n\t          .each(function() {\n\t            var that = this,\n\t                args = arguments,\n\t                state = that.__brush,\n\t                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(that, args) : selection$$1, state.extent),\n\t                emit = emitter(that, args).beforestart();\n\t\n\t            interrupt(that);\n\t            state.selection = selection1 == null || empty(selection1) ? null : selection1;\n\t            redraw.call(that);\n\t            emit.start().brush().end();\n\t          });\n\t    }\n\t  };\n\t\n\t  function redraw() {\n\t    var group = select(this),\n\t        selection$$1 = local$$1(this).selection;\n\t\n\t    if (selection$$1) {\n\t      group.selectAll(\".selection\")\n\t          .style(\"display\", null)\n\t          .attr(\"x\", selection$$1[0][0])\n\t          .attr(\"y\", selection$$1[0][1])\n\t          .attr(\"width\", selection$$1[1][0] - selection$$1[0][0])\n\t          .attr(\"height\", selection$$1[1][1] - selection$$1[0][1]);\n\t\n\t      group.selectAll(\".handle\")\n\t          .style(\"display\", null)\n\t          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection$$1[1][0] - handleSize / 2 : selection$$1[0][0] - handleSize / 2; })\n\t          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection$$1[1][1] - handleSize / 2 : selection$$1[0][1] - handleSize / 2; })\n\t          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection$$1[1][0] - selection$$1[0][0] + handleSize : handleSize; })\n\t          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection$$1[1][1] - selection$$1[0][1] + handleSize : handleSize; });\n\t    }\n\t\n\t    else {\n\t      group.selectAll(\".selection,.handle\")\n\t          .style(\"display\", \"none\")\n\t          .attr(\"x\", null)\n\t          .attr(\"y\", null)\n\t          .attr(\"width\", null)\n\t          .attr(\"height\", null);\n\t    }\n\t  }\n\t\n\t  function emitter(that, args) {\n\t    return that.__brush.emitter || new Emitter(that, args);\n\t  }\n\t\n\t  function Emitter(that, args) {\n\t    this.that = that;\n\t    this.args = args;\n\t    this.state = that.__brush;\n\t    this.active = 0;\n\t  }\n\t\n\t  Emitter.prototype = {\n\t    beforestart: function() {\n\t      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n\t      return this;\n\t    },\n\t    start: function() {\n\t      if (this.starting) this.starting = false, this.emit(\"start\");\n\t      return this;\n\t    },\n\t    brush: function() {\n\t      this.emit(\"brush\");\n\t      return this;\n\t    },\n\t    end: function() {\n\t      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n\t      return this;\n\t    },\n\t    emit: function(type) {\n\t      customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n\t    }\n\t  };\n\t\n\t  function started() {\n\t    if (exports.event.touches) { if (exports.event.changedTouches.length < exports.event.touches.length) return noevent$1(); }\n\t    else if (touchending) return;\n\t    if (!filter.apply(this, arguments)) return;\n\t\n\t    var that = this,\n\t        type = exports.event.target.__data__.type,\n\t        mode = (exports.event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (exports.event.altKey ? MODE_CENTER : MODE_HANDLE),\n\t        signX = dim === Y ? null : signsX[type],\n\t        signY = dim === X ? null : signsY[type],\n\t        state = local$$1(that),\n\t        extent = state.extent,\n\t        selection$$1 = state.selection,\n\t        W = extent[0][0], w0, w1,\n\t        N = extent[0][1], n0, n1,\n\t        E = extent[1][0], e0, e1,\n\t        S = extent[1][1], s0, s1,\n\t        dx,\n\t        dy,\n\t        moving,\n\t        shifting = signX && signY && exports.event.shiftKey,\n\t        lockX,\n\t        lockY,\n\t        point0 = mouse(that),\n\t        point = point0,\n\t        emit = emitter(that, arguments).beforestart();\n\t\n\t    if (type === \"overlay\") {\n\t      state.selection = selection$$1 = [\n\t        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n\t        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n\t      ];\n\t    } else {\n\t      w0 = selection$$1[0][0];\n\t      n0 = selection$$1[0][1];\n\t      e0 = selection$$1[1][0];\n\t      s0 = selection$$1[1][1];\n\t    }\n\t\n\t    w1 = w0;\n\t    n1 = n0;\n\t    e1 = e0;\n\t    s1 = s0;\n\t\n\t    var group = select(that)\n\t        .attr(\"pointer-events\", \"none\");\n\t\n\t    var overlay = group.selectAll(\".overlay\")\n\t        .attr(\"cursor\", cursors[type]);\n\t\n\t    if (exports.event.touches) {\n\t      group\n\t          .on(\"touchmove.brush\", moved, true)\n\t          .on(\"touchend.brush touchcancel.brush\", ended, true);\n\t    } else {\n\t      var view = select(exports.event.view)\n\t          .on(\"keydown.brush\", keydowned, true)\n\t          .on(\"keyup.brush\", keyupped, true)\n\t          .on(\"mousemove.brush\", moved, true)\n\t          .on(\"mouseup.brush\", ended, true);\n\t\n\t      dragDisable(exports.event.view);\n\t    }\n\t\n\t    nopropagation$1();\n\t    interrupt(that);\n\t    redraw.call(that);\n\t    emit.start();\n\t\n\t    function moved() {\n\t      var point1 = mouse(that);\n\t      if (shifting && !lockX && !lockY) {\n\t        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n\t        else lockX = true;\n\t      }\n\t      point = point1;\n\t      moving = true;\n\t      noevent$1();\n\t      move();\n\t    }\n\t\n\t    function move() {\n\t      var t;\n\t\n\t      dx = point[0] - point0[0];\n\t      dy = point[1] - point0[1];\n\t\n\t      switch (mode) {\n\t        case MODE_SPACE:\n\t        case MODE_DRAG: {\n\t          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n\t          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n\t          break;\n\t        }\n\t        case MODE_HANDLE: {\n\t          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n\t          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n\t          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n\t          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n\t          break;\n\t        }\n\t        case MODE_CENTER: {\n\t          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n\t          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n\t          break;\n\t        }\n\t      }\n\t\n\t      if (e1 < w1) {\n\t        signX *= -1;\n\t        t = w0, w0 = e0, e0 = t;\n\t        t = w1, w1 = e1, e1 = t;\n\t        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n\t      }\n\t\n\t      if (s1 < n1) {\n\t        signY *= -1;\n\t        t = n0, n0 = s0, s0 = t;\n\t        t = n1, n1 = s1, s1 = t;\n\t        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n\t      }\n\t\n\t      if (state.selection) selection$$1 = state.selection; // May be set by brush.move!\n\t      if (lockX) w1 = selection$$1[0][0], e1 = selection$$1[1][0];\n\t      if (lockY) n1 = selection$$1[0][1], s1 = selection$$1[1][1];\n\t\n\t      if (selection$$1[0][0] !== w1\n\t          || selection$$1[0][1] !== n1\n\t          || selection$$1[1][0] !== e1\n\t          || selection$$1[1][1] !== s1) {\n\t        state.selection = [[w1, n1], [e1, s1]];\n\t        redraw.call(that);\n\t        emit.brush();\n\t      }\n\t    }\n\t\n\t    function ended() {\n\t      nopropagation$1();\n\t      if (exports.event.touches) {\n\t        if (exports.event.touches.length) return;\n\t        if (touchending) clearTimeout(touchending);\n\t        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n\t        group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n\t      } else {\n\t        yesdrag(exports.event.view, moving);\n\t        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n\t      }\n\t      group.attr(\"pointer-events\", \"all\");\n\t      overlay.attr(\"cursor\", cursors.overlay);\n\t      if (state.selection) selection$$1 = state.selection; // May be set by brush.move (on start)!\n\t      if (empty(selection$$1)) state.selection = null, redraw.call(that);\n\t      emit.end();\n\t    }\n\t\n\t    function keydowned() {\n\t      switch (exports.event.keyCode) {\n\t        case 16: { // SHIFT\n\t          shifting = signX && signY;\n\t          break;\n\t        }\n\t        case 18: { // ALT\n\t          if (mode === MODE_HANDLE) {\n\t            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n\t            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n\t            mode = MODE_CENTER;\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        case 32: { // SPACE; takes priority over ALT\n\t          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n\t            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n\t            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n\t            mode = MODE_SPACE;\n\t            overlay.attr(\"cursor\", cursors.selection);\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        default: return;\n\t      }\n\t      noevent$1();\n\t    }\n\t\n\t    function keyupped() {\n\t      switch (exports.event.keyCode) {\n\t        case 16: { // SHIFT\n\t          if (shifting) {\n\t            lockX = lockY = shifting = false;\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        case 18: { // ALT\n\t          if (mode === MODE_CENTER) {\n\t            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n\t            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n\t            mode = MODE_HANDLE;\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        case 32: { // SPACE\n\t          if (mode === MODE_SPACE) {\n\t            if (exports.event.altKey) {\n\t              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n\t              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n\t              mode = MODE_CENTER;\n\t            } else {\n\t              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n\t              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n\t              mode = MODE_HANDLE;\n\t            }\n\t            overlay.attr(\"cursor\", cursors[type]);\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        default: return;\n\t      }\n\t      noevent$1();\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    var state = this.__brush || {selection: null};\n\t    state.extent = extent.apply(this, arguments);\n\t    state.dim = dim;\n\t    return state;\n\t  }\n\t\n\t  brush.extent = function(_) {\n\t    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$4([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n\t  };\n\t\n\t  brush.filter = function(_) {\n\t    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$4(!!_), brush) : filter;\n\t  };\n\t\n\t  brush.handleSize = function(_) {\n\t    return arguments.length ? (handleSize = +_, brush) : handleSize;\n\t  };\n\t\n\t  brush.on = function() {\n\t    var value = listeners.on.apply(listeners, arguments);\n\t    return value === listeners ? brush : value;\n\t  };\n\t\n\t  return brush;\n\t}\n\t\n\tvar cos = Math.cos;\n\tvar sin = Math.sin;\n\tvar pi$1 = Math.PI;\n\tvar halfPi$1 = pi$1 / 2;\n\tvar tau$1 = pi$1 * 2;\n\tvar max$1 = Math.max;\n\t\n\tfunction compareValue(compare) {\n\t  return function(a, b) {\n\t    return compare(\n\t      a.source.value + a.target.value,\n\t      b.source.value + b.target.value\n\t    );\n\t  };\n\t}\n\t\n\tvar chord = function() {\n\t  var padAngle = 0,\n\t      sortGroups = null,\n\t      sortSubgroups = null,\n\t      sortChords = null;\n\t\n\t  function chord(matrix) {\n\t    var n = matrix.length,\n\t        groupSums = [],\n\t        groupIndex = sequence(n),\n\t        subgroupIndex = [],\n\t        chords = [],\n\t        groups = chords.groups = new Array(n),\n\t        subgroups = new Array(n * n),\n\t        k,\n\t        x,\n\t        x0,\n\t        dx,\n\t        i,\n\t        j;\n\t\n\t    // Compute the sum.\n\t    k = 0, i = -1; while (++i < n) {\n\t      x = 0, j = -1; while (++j < n) {\n\t        x += matrix[i][j];\n\t      }\n\t      groupSums.push(x);\n\t      subgroupIndex.push(sequence(n));\n\t      k += x;\n\t    }\n\t\n\t    // Sort groups…\n\t    if (sortGroups) groupIndex.sort(function(a, b) {\n\t      return sortGroups(groupSums[a], groupSums[b]);\n\t    });\n\t\n\t    // Sort subgroups…\n\t    if (sortSubgroups) subgroupIndex.forEach(function(d, i) {\n\t      d.sort(function(a, b) {\n\t        return sortSubgroups(matrix[i][a], matrix[i][b]);\n\t      });\n\t    });\n\t\n\t    // Convert the sum to scaling factor for [0, 2pi].\n\t    // TODO Allow start and end angle to be specified?\n\t    // TODO Allow padding to be specified as percentage?\n\t    k = max$1(0, tau$1 - padAngle * n) / k;\n\t    dx = k ? padAngle : tau$1 / n;\n\t\n\t    // Compute the start and end angle for each group and subgroup.\n\t    // Note: Opera has a bug reordering object literal properties!\n\t    x = 0, i = -1; while (++i < n) {\n\t      x0 = x, j = -1; while (++j < n) {\n\t        var di = groupIndex[i],\n\t            dj = subgroupIndex[di][j],\n\t            v = matrix[di][dj],\n\t            a0 = x,\n\t            a1 = x += v * k;\n\t        subgroups[dj * n + di] = {\n\t          index: di,\n\t          subindex: dj,\n\t          startAngle: a0,\n\t          endAngle: a1,\n\t          value: v\n\t        };\n\t      }\n\t      groups[di] = {\n\t        index: di,\n\t        startAngle: x0,\n\t        endAngle: x,\n\t        value: groupSums[di]\n\t      };\n\t      x += dx;\n\t    }\n\t\n\t    // Generate chords for each (non-empty) subgroup-subgroup link.\n\t    i = -1; while (++i < n) {\n\t      j = i - 1; while (++j < n) {\n\t        var source = subgroups[j * n + i],\n\t            target = subgroups[i * n + j];\n\t        if (source.value || target.value) {\n\t          chords.push(source.value < target.value\n\t              ? {source: target, target: source}\n\t              : {source: source, target: target});\n\t        }\n\t      }\n\t    }\n\t\n\t    return sortChords ? chords.sort(sortChords) : chords;\n\t  }\n\t\n\t  chord.padAngle = function(_) {\n\t    return arguments.length ? (padAngle = max$1(0, _), chord) : padAngle;\n\t  };\n\t\n\t  chord.sortGroups = function(_) {\n\t    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n\t  };\n\t\n\t  chord.sortSubgroups = function(_) {\n\t    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n\t  };\n\t\n\t  chord.sortChords = function(_) {\n\t    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n\t  };\n\t\n\t  return chord;\n\t};\n\t\n\tvar slice$2 = Array.prototype.slice;\n\t\n\tvar constant$5 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar pi$2 = Math.PI;\n\tvar tau$2 = 2 * pi$2;\n\tvar epsilon$1 = 1e-6;\n\tvar tauEpsilon = tau$2 - epsilon$1;\n\t\n\tfunction Path() {\n\t  this._x0 = this._y0 = // start of current subpath\n\t  this._x1 = this._y1 = null; // end of current subpath\n\t  this._ = \"\";\n\t}\n\t\n\tfunction path() {\n\t  return new Path;\n\t}\n\t\n\tPath.prototype = path.prototype = {\n\t  constructor: Path,\n\t  moveTo: function(x, y) {\n\t    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n\t  },\n\t  closePath: function() {\n\t    if (this._x1 !== null) {\n\t      this._x1 = this._x0, this._y1 = this._y0;\n\t      this._ += \"Z\";\n\t    }\n\t  },\n\t  lineTo: function(x, y) {\n\t    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n\t  },\n\t  quadraticCurveTo: function(x1, y1, x, y) {\n\t    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n\t  },\n\t  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n\t    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n\t  },\n\t  arcTo: function(x1, y1, x2, y2, r) {\n\t    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n\t    var x0 = this._x1,\n\t        y0 = this._y1,\n\t        x21 = x2 - x1,\n\t        y21 = y2 - y1,\n\t        x01 = x0 - x1,\n\t        y01 = y0 - y1,\n\t        l01_2 = x01 * x01 + y01 * y01;\n\t\n\t    // Is the radius negative? Error.\n\t    if (r < 0) throw new Error(\"negative radius: \" + r);\n\t\n\t    // Is this path empty? Move to (x1,y1).\n\t    if (this._x1 === null) {\n\t      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n\t    }\n\t\n\t    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n\t    else if (!(l01_2 > epsilon$1)) {}\n\t\n\t    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n\t    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n\t    // Or, is the radius zero? Line to (x1,y1).\n\t    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon$1) || !r) {\n\t      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n\t    }\n\t\n\t    // Otherwise, draw an arc!\n\t    else {\n\t      var x20 = x2 - x0,\n\t          y20 = y2 - y0,\n\t          l21_2 = x21 * x21 + y21 * y21,\n\t          l20_2 = x20 * x20 + y20 * y20,\n\t          l21 = Math.sqrt(l21_2),\n\t          l01 = Math.sqrt(l01_2),\n\t          l = r * Math.tan((pi$2 - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n\t          t01 = l / l01,\n\t          t21 = l / l21;\n\t\n\t      // If the start tangent is not coincident with (x0,y0), line to.\n\t      if (Math.abs(t01 - 1) > epsilon$1) {\n\t        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n\t      }\n\t\n\t      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n\t    }\n\t  },\n\t  arc: function(x, y, r, a0, a1, ccw) {\n\t    x = +x, y = +y, r = +r;\n\t    var dx = r * Math.cos(a0),\n\t        dy = r * Math.sin(a0),\n\t        x0 = x + dx,\n\t        y0 = y + dy,\n\t        cw = 1 ^ ccw,\n\t        da = ccw ? a0 - a1 : a1 - a0;\n\t\n\t    // Is the radius negative? Error.\n\t    if (r < 0) throw new Error(\"negative radius: \" + r);\n\t\n\t    // Is this path empty? Move to (x0,y0).\n\t    if (this._x1 === null) {\n\t      this._ += \"M\" + x0 + \",\" + y0;\n\t    }\n\t\n\t    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n\t    else if (Math.abs(this._x1 - x0) > epsilon$1 || Math.abs(this._y1 - y0) > epsilon$1) {\n\t      this._ += \"L\" + x0 + \",\" + y0;\n\t    }\n\t\n\t    // Is this arc empty? We’re done.\n\t    if (!r) return;\n\t\n\t    // Does the angle go the wrong way? Flip the direction.\n\t    if (da < 0) da = da % tau$2 + tau$2;\n\t\n\t    // Is this a complete circle? Draw two arcs to complete the circle.\n\t    if (da > tauEpsilon) {\n\t      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n\t    }\n\t\n\t    // Is this arc non-empty? Draw an arc!\n\t    else if (da > epsilon$1) {\n\t      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi$2)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n\t    }\n\t  },\n\t  rect: function(x, y, w, h) {\n\t    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n\t  },\n\t  toString: function() {\n\t    return this._;\n\t  }\n\t};\n\t\n\tfunction defaultSource(d) {\n\t  return d.source;\n\t}\n\t\n\tfunction defaultTarget(d) {\n\t  return d.target;\n\t}\n\t\n\tfunction defaultRadius(d) {\n\t  return d.radius;\n\t}\n\t\n\tfunction defaultStartAngle(d) {\n\t  return d.startAngle;\n\t}\n\t\n\tfunction defaultEndAngle(d) {\n\t  return d.endAngle;\n\t}\n\t\n\tvar ribbon = function() {\n\t  var source = defaultSource,\n\t      target = defaultTarget,\n\t      radius = defaultRadius,\n\t      startAngle = defaultStartAngle,\n\t      endAngle = defaultEndAngle,\n\t      context = null;\n\t\n\t  function ribbon() {\n\t    var buffer,\n\t        argv = slice$2.call(arguments),\n\t        s = source.apply(this, argv),\n\t        t = target.apply(this, argv),\n\t        sr = +radius.apply(this, (argv[0] = s, argv)),\n\t        sa0 = startAngle.apply(this, argv) - halfPi$1,\n\t        sa1 = endAngle.apply(this, argv) - halfPi$1,\n\t        sx0 = sr * cos(sa0),\n\t        sy0 = sr * sin(sa0),\n\t        tr = +radius.apply(this, (argv[0] = t, argv)),\n\t        ta0 = startAngle.apply(this, argv) - halfPi$1,\n\t        ta1 = endAngle.apply(this, argv) - halfPi$1;\n\t\n\t    if (!context) context = buffer = path();\n\t\n\t    context.moveTo(sx0, sy0);\n\t    context.arc(0, 0, sr, sa0, sa1);\n\t    if (sa0 !== ta0 || sa1 !== ta1) { // TODO sr !== tr?\n\t      context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n\t      context.arc(0, 0, tr, ta0, ta1);\n\t    }\n\t    context.quadraticCurveTo(0, 0, sx0, sy0);\n\t    context.closePath();\n\t\n\t    if (buffer) return context = null, buffer + \"\" || null;\n\t  }\n\t\n\t  ribbon.radius = function(_) {\n\t    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : radius;\n\t  };\n\t\n\t  ribbon.startAngle = function(_) {\n\t    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : startAngle;\n\t  };\n\t\n\t  ribbon.endAngle = function(_) {\n\t    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : endAngle;\n\t  };\n\t\n\t  ribbon.source = function(_) {\n\t    return arguments.length ? (source = _, ribbon) : source;\n\t  };\n\t\n\t  ribbon.target = function(_) {\n\t    return arguments.length ? (target = _, ribbon) : target;\n\t  };\n\t\n\t  ribbon.context = function(_) {\n\t    return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;\n\t  };\n\t\n\t  return ribbon;\n\t};\n\t\n\tvar prefix = \"$\";\n\t\n\tfunction Map() {}\n\t\n\tMap.prototype = map$1.prototype = {\n\t  constructor: Map,\n\t  has: function(key) {\n\t    return (prefix + key) in this;\n\t  },\n\t  get: function(key) {\n\t    return this[prefix + key];\n\t  },\n\t  set: function(key, value) {\n\t    this[prefix + key] = value;\n\t    return this;\n\t  },\n\t  remove: function(key) {\n\t    var property = prefix + key;\n\t    return property in this && delete this[property];\n\t  },\n\t  clear: function() {\n\t    for (var property in this) if (property[0] === prefix) delete this[property];\n\t  },\n\t  keys: function() {\n\t    var keys = [];\n\t    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n\t    return keys;\n\t  },\n\t  values: function() {\n\t    var values = [];\n\t    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n\t    return values;\n\t  },\n\t  entries: function() {\n\t    var entries = [];\n\t    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n\t    return entries;\n\t  },\n\t  size: function() {\n\t    var size = 0;\n\t    for (var property in this) if (property[0] === prefix) ++size;\n\t    return size;\n\t  },\n\t  empty: function() {\n\t    for (var property in this) if (property[0] === prefix) return false;\n\t    return true;\n\t  },\n\t  each: function(f) {\n\t    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n\t  }\n\t};\n\t\n\tfunction map$1(object, f) {\n\t  var map = new Map;\n\t\n\t  // Copy constructor.\n\t  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\t\n\t  // Index array by numeric index or specified key function.\n\t  else if (Array.isArray(object)) {\n\t    var i = -1,\n\t        n = object.length,\n\t        o;\n\t\n\t    if (f == null) while (++i < n) map.set(i, object[i]);\n\t    else while (++i < n) map.set(f(o = object[i], i, object), o);\n\t  }\n\t\n\t  // Convert object to map.\n\t  else if (object) for (var key in object) map.set(key, object[key]);\n\t\n\t  return map;\n\t}\n\t\n\tvar nest = function() {\n\t  var keys = [],\n\t      sortKeys = [],\n\t      sortValues,\n\t      rollup,\n\t      nest;\n\t\n\t  function apply(array, depth, createResult, setResult) {\n\t    if (depth >= keys.length) return rollup != null\n\t        ? rollup(array) : (sortValues != null\n\t        ? array.sort(sortValues)\n\t        : array);\n\t\n\t    var i = -1,\n\t        n = array.length,\n\t        key = keys[depth++],\n\t        keyValue,\n\t        value,\n\t        valuesByKey = map$1(),\n\t        values,\n\t        result = createResult();\n\t\n\t    while (++i < n) {\n\t      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n\t        values.push(value);\n\t      } else {\n\t        valuesByKey.set(keyValue, [value]);\n\t      }\n\t    }\n\t\n\t    valuesByKey.each(function(values, key) {\n\t      setResult(result, key, apply(values, depth, createResult, setResult));\n\t    });\n\t\n\t    return result;\n\t  }\n\t\n\t  function entries(map, depth) {\n\t    if (++depth > keys.length) return map;\n\t    var array, sortKey = sortKeys[depth - 1];\n\t    if (rollup != null && depth >= keys.length) array = map.entries();\n\t    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n\t    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n\t  }\n\t\n\t  return nest = {\n\t    object: function(array) { return apply(array, 0, createObject, setObject); },\n\t    map: function(array) { return apply(array, 0, createMap, setMap); },\n\t    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n\t    key: function(d) { keys.push(d); return nest; },\n\t    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n\t    sortValues: function(order) { sortValues = order; return nest; },\n\t    rollup: function(f) { rollup = f; return nest; }\n\t  };\n\t};\n\t\n\tfunction createObject() {\n\t  return {};\n\t}\n\t\n\tfunction setObject(object, key, value) {\n\t  object[key] = value;\n\t}\n\t\n\tfunction createMap() {\n\t  return map$1();\n\t}\n\t\n\tfunction setMap(map, key, value) {\n\t  map.set(key, value);\n\t}\n\t\n\tfunction Set() {}\n\t\n\tvar proto = map$1.prototype;\n\t\n\tSet.prototype = set$2.prototype = {\n\t  constructor: Set,\n\t  has: proto.has,\n\t  add: function(value) {\n\t    value += \"\";\n\t    this[prefix + value] = value;\n\t    return this;\n\t  },\n\t  remove: proto.remove,\n\t  clear: proto.clear,\n\t  values: proto.keys,\n\t  size: proto.size,\n\t  empty: proto.empty,\n\t  each: proto.each\n\t};\n\t\n\tfunction set$2(object, f) {\n\t  var set = new Set;\n\t\n\t  // Copy constructor.\n\t  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\t\n\t  // Otherwise, assume it’s an array.\n\t  else if (object) {\n\t    var i = -1, n = object.length;\n\t    if (f == null) while (++i < n) set.add(object[i]);\n\t    else while (++i < n) set.add(f(object[i], i, object));\n\t  }\n\t\n\t  return set;\n\t}\n\t\n\tvar keys = function(map) {\n\t  var keys = [];\n\t  for (var key in map) keys.push(key);\n\t  return keys;\n\t};\n\t\n\tvar values = function(map) {\n\t  var values = [];\n\t  for (var key in map) values.push(map[key]);\n\t  return values;\n\t};\n\t\n\tvar entries = function(map) {\n\t  var entries = [];\n\t  for (var key in map) entries.push({key: key, value: map[key]});\n\t  return entries;\n\t};\n\t\n\tfunction objectConverter(columns) {\n\t  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n\t    return JSON.stringify(name) + \": d[\" + i + \"]\";\n\t  }).join(\",\") + \"}\");\n\t}\n\t\n\tfunction customConverter(columns, f) {\n\t  var object = objectConverter(columns);\n\t  return function(row, i) {\n\t    return f(object(row), i, columns);\n\t  };\n\t}\n\t\n\t// Compute unique columns in order of discovery.\n\tfunction inferColumns(rows) {\n\t  var columnSet = Object.create(null),\n\t      columns = [];\n\t\n\t  rows.forEach(function(row) {\n\t    for (var column in row) {\n\t      if (!(column in columnSet)) {\n\t        columns.push(columnSet[column] = column);\n\t      }\n\t    }\n\t  });\n\t\n\t  return columns;\n\t}\n\t\n\tvar dsv = function(delimiter) {\n\t  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n\t      delimiterCode = delimiter.charCodeAt(0);\n\t\n\t  function parse(text, f) {\n\t    var convert, columns, rows = parseRows(text, function(row, i) {\n\t      if (convert) return convert(row, i - 1);\n\t      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n\t    });\n\t    rows.columns = columns;\n\t    return rows;\n\t  }\n\t\n\t  function parseRows(text, f) {\n\t    var EOL = {}, // sentinel value for end-of-line\n\t        EOF = {}, // sentinel value for end-of-file\n\t        rows = [], // output rows\n\t        N = text.length,\n\t        I = 0, // current character index\n\t        n = 0, // the current line number\n\t        t, // the current token\n\t        eol; // is the current token followed by EOL?\n\t\n\t    function token() {\n\t      if (I >= N) return EOF; // special case: end of file\n\t      if (eol) return eol = false, EOL; // special case: end of line\n\t\n\t      // special case: quotes\n\t      var j = I, c;\n\t      if (text.charCodeAt(j) === 34) {\n\t        var i = j;\n\t        while (i++ < N) {\n\t          if (text.charCodeAt(i) === 34) {\n\t            if (text.charCodeAt(i + 1) !== 34) break;\n\t            ++i;\n\t          }\n\t        }\n\t        I = i + 2;\n\t        c = text.charCodeAt(i + 1);\n\t        if (c === 13) {\n\t          eol = true;\n\t          if (text.charCodeAt(i + 2) === 10) ++I;\n\t        } else if (c === 10) {\n\t          eol = true;\n\t        }\n\t        return text.slice(j + 1, i).replace(/\"\"/g, \"\\\"\");\n\t      }\n\t\n\t      // common case: find next delimiter or newline\n\t      while (I < N) {\n\t        var k = 1;\n\t        c = text.charCodeAt(I++);\n\t        if (c === 10) eol = true; // \\n\n\t        else if (c === 13) { eol = true; if (text.charCodeAt(I) === 10) ++I, ++k; } // \\r|\\r\\n\n\t        else if (c !== delimiterCode) continue;\n\t        return text.slice(j, I - k);\n\t      }\n\t\n\t      // special case: last token before EOF\n\t      return text.slice(j);\n\t    }\n\t\n\t    while ((t = token()) !== EOF) {\n\t      var a = [];\n\t      while (t !== EOL && t !== EOF) {\n\t        a.push(t);\n\t        t = token();\n\t      }\n\t      if (f && (a = f(a, n++)) == null) continue;\n\t      rows.push(a);\n\t    }\n\t\n\t    return rows;\n\t  }\n\t\n\t  function format(rows, columns) {\n\t    if (columns == null) columns = inferColumns(rows);\n\t    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n\t      return columns.map(function(column) {\n\t        return formatValue(row[column]);\n\t      }).join(delimiter);\n\t    })).join(\"\\n\");\n\t  }\n\t\n\t  function formatRows(rows) {\n\t    return rows.map(formatRow).join(\"\\n\");\n\t  }\n\t\n\t  function formatRow(row) {\n\t    return row.map(formatValue).join(delimiter);\n\t  }\n\t\n\t  function formatValue(text) {\n\t    return text == null ? \"\"\n\t        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\\\"/g, \"\\\"\\\"\") + \"\\\"\"\n\t        : text;\n\t  }\n\t\n\t  return {\n\t    parse: parse,\n\t    parseRows: parseRows,\n\t    format: format,\n\t    formatRows: formatRows\n\t  };\n\t};\n\t\n\tvar csv = dsv(\",\");\n\t\n\tvar csvParse = csv.parse;\n\tvar csvParseRows = csv.parseRows;\n\tvar csvFormat = csv.format;\n\tvar csvFormatRows = csv.formatRows;\n\t\n\tvar tsv = dsv(\"\\t\");\n\t\n\tvar tsvParse = tsv.parse;\n\tvar tsvParseRows = tsv.parseRows;\n\tvar tsvFormat = tsv.format;\n\tvar tsvFormatRows = tsv.formatRows;\n\t\n\tvar center$1 = function(x, y) {\n\t  var nodes;\n\t\n\t  if (x == null) x = 0;\n\t  if (y == null) y = 0;\n\t\n\t  function force() {\n\t    var i,\n\t        n = nodes.length,\n\t        node,\n\t        sx = 0,\n\t        sy = 0;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      node = nodes[i], sx += node.x, sy += node.y;\n\t    }\n\t\n\t    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\n\t      node = nodes[i], node.x -= sx, node.y -= sy;\n\t    }\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t  };\n\t\n\t  force.x = function(_) {\n\t    return arguments.length ? (x = +_, force) : x;\n\t  };\n\t\n\t  force.y = function(_) {\n\t    return arguments.length ? (y = +_, force) : y;\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tvar constant$6 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar jiggle = function() {\n\t  return (Math.random() - 0.5) * 1e-6;\n\t};\n\t\n\tvar tree_add = function(d) {\n\t  var x = +this._x.call(null, d),\n\t      y = +this._y.call(null, d);\n\t  return add(this.cover(x, y), x, y, d);\n\t};\n\t\n\tfunction add(tree, x, y, d) {\n\t  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\t\n\t  var parent,\n\t      node = tree._root,\n\t      leaf = {data: d},\n\t      x0 = tree._x0,\n\t      y0 = tree._y0,\n\t      x1 = tree._x1,\n\t      y1 = tree._y1,\n\t      xm,\n\t      ym,\n\t      xp,\n\t      yp,\n\t      right,\n\t      bottom,\n\t      i,\n\t      j;\n\t\n\t  // If the tree is empty, initialize the root as a leaf.\n\t  if (!node) return tree._root = leaf, tree;\n\t\n\t  // Find the existing leaf for the new point, or add it.\n\t  while (node.length) {\n\t    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n\t    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n\t    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n\t  }\n\t\n\t  // Is the new point is exactly coincident with the existing point?\n\t  xp = +tree._x.call(null, node.data);\n\t  yp = +tree._y.call(null, node.data);\n\t  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\t\n\t  // Otherwise, split the leaf node until the old and new point are separated.\n\t  do {\n\t    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n\t    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n\t    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n\t  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n\t  return parent[j] = node, parent[i] = leaf, tree;\n\t}\n\t\n\tfunction addAll(data) {\n\t  var d, i, n = data.length,\n\t      x,\n\t      y,\n\t      xz = new Array(n),\n\t      yz = new Array(n),\n\t      x0 = Infinity,\n\t      y0 = Infinity,\n\t      x1 = -Infinity,\n\t      y1 = -Infinity;\n\t\n\t  // Compute the points and their extent.\n\t  for (i = 0; i < n; ++i) {\n\t    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n\t    xz[i] = x;\n\t    yz[i] = y;\n\t    if (x < x0) x0 = x;\n\t    if (x > x1) x1 = x;\n\t    if (y < y0) y0 = y;\n\t    if (y > y1) y1 = y;\n\t  }\n\t\n\t  // If there were no (valid) points, inherit the existing extent.\n\t  if (x1 < x0) x0 = this._x0, x1 = this._x1;\n\t  if (y1 < y0) y0 = this._y0, y1 = this._y1;\n\t\n\t  // Expand the tree to cover the new points.\n\t  this.cover(x0, y0).cover(x1, y1);\n\t\n\t  // Add the new points.\n\t  for (i = 0; i < n; ++i) {\n\t    add(this, xz[i], yz[i], data[i]);\n\t  }\n\t\n\t  return this;\n\t}\n\t\n\tvar tree_cover = function(x, y) {\n\t  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\t\n\t  var x0 = this._x0,\n\t      y0 = this._y0,\n\t      x1 = this._x1,\n\t      y1 = this._y1;\n\t\n\t  // If the quadtree has no extent, initialize them.\n\t  // Integer extent are necessary so that if we later double the extent,\n\t  // the existing quadrant boundaries don’t change due to floating point error!\n\t  if (isNaN(x0)) {\n\t    x1 = (x0 = Math.floor(x)) + 1;\n\t    y1 = (y0 = Math.floor(y)) + 1;\n\t  }\n\t\n\t  // Otherwise, double repeatedly to cover.\n\t  else if (x0 > x || x > x1 || y0 > y || y > y1) {\n\t    var z = x1 - x0,\n\t        node = this._root,\n\t        parent,\n\t        i;\n\t\n\t    switch (i = (y < (y0 + y1) / 2) << 1 | (x < (x0 + x1) / 2)) {\n\t      case 0: {\n\t        do parent = new Array(4), parent[i] = node, node = parent;\n\t        while (z *= 2, x1 = x0 + z, y1 = y0 + z, x > x1 || y > y1);\n\t        break;\n\t      }\n\t      case 1: {\n\t        do parent = new Array(4), parent[i] = node, node = parent;\n\t        while (z *= 2, x0 = x1 - z, y1 = y0 + z, x0 > x || y > y1);\n\t        break;\n\t      }\n\t      case 2: {\n\t        do parent = new Array(4), parent[i] = node, node = parent;\n\t        while (z *= 2, x1 = x0 + z, y0 = y1 - z, x > x1 || y0 > y);\n\t        break;\n\t      }\n\t      case 3: {\n\t        do parent = new Array(4), parent[i] = node, node = parent;\n\t        while (z *= 2, x0 = x1 - z, y0 = y1 - z, x0 > x || y0 > y);\n\t        break;\n\t      }\n\t    }\n\t\n\t    if (this._root && this._root.length) this._root = node;\n\t  }\n\t\n\t  // If the quadtree covers the point already, just return.\n\t  else return this;\n\t\n\t  this._x0 = x0;\n\t  this._y0 = y0;\n\t  this._x1 = x1;\n\t  this._y1 = y1;\n\t  return this;\n\t};\n\t\n\tvar tree_data = function() {\n\t  var data = [];\n\t  this.visit(function(node) {\n\t    if (!node.length) do data.push(node.data); while (node = node.next)\n\t  });\n\t  return data;\n\t};\n\t\n\tvar tree_extent = function(_) {\n\t  return arguments.length\n\t      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n\t      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n\t};\n\t\n\tvar Quad = function(node, x0, y0, x1, y1) {\n\t  this.node = node;\n\t  this.x0 = x0;\n\t  this.y0 = y0;\n\t  this.x1 = x1;\n\t  this.y1 = y1;\n\t};\n\t\n\tvar tree_find = function(x, y, radius) {\n\t  var data,\n\t      x0 = this._x0,\n\t      y0 = this._y0,\n\t      x1,\n\t      y1,\n\t      x2,\n\t      y2,\n\t      x3 = this._x1,\n\t      y3 = this._y1,\n\t      quads = [],\n\t      node = this._root,\n\t      q,\n\t      i;\n\t\n\t  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n\t  if (radius == null) radius = Infinity;\n\t  else {\n\t    x0 = x - radius, y0 = y - radius;\n\t    x3 = x + radius, y3 = y + radius;\n\t    radius *= radius;\n\t  }\n\t\n\t  while (q = quads.pop()) {\n\t\n\t    // Stop searching if this quadrant can’t contain a closer node.\n\t    if (!(node = q.node)\n\t        || (x1 = q.x0) > x3\n\t        || (y1 = q.y0) > y3\n\t        || (x2 = q.x1) < x0\n\t        || (y2 = q.y1) < y0) continue;\n\t\n\t    // Bisect the current quadrant.\n\t    if (node.length) {\n\t      var xm = (x1 + x2) / 2,\n\t          ym = (y1 + y2) / 2;\n\t\n\t      quads.push(\n\t        new Quad(node[3], xm, ym, x2, y2),\n\t        new Quad(node[2], x1, ym, xm, y2),\n\t        new Quad(node[1], xm, y1, x2, ym),\n\t        new Quad(node[0], x1, y1, xm, ym)\n\t      );\n\t\n\t      // Visit the closest quadrant first.\n\t      if (i = (y >= ym) << 1 | (x >= xm)) {\n\t        q = quads[quads.length - 1];\n\t        quads[quads.length - 1] = quads[quads.length - 1 - i];\n\t        quads[quads.length - 1 - i] = q;\n\t      }\n\t    }\n\t\n\t    // Visit this point. (Visiting coincident points isn’t necessary!)\n\t    else {\n\t      var dx = x - +this._x.call(null, node.data),\n\t          dy = y - +this._y.call(null, node.data),\n\t          d2 = dx * dx + dy * dy;\n\t      if (d2 < radius) {\n\t        var d = Math.sqrt(radius = d2);\n\t        x0 = x - d, y0 = y - d;\n\t        x3 = x + d, y3 = y + d;\n\t        data = node.data;\n\t      }\n\t    }\n\t  }\n\t\n\t  return data;\n\t};\n\t\n\tvar tree_remove = function(d) {\n\t  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\t\n\t  var parent,\n\t      node = this._root,\n\t      retainer,\n\t      previous,\n\t      next,\n\t      x0 = this._x0,\n\t      y0 = this._y0,\n\t      x1 = this._x1,\n\t      y1 = this._y1,\n\t      x,\n\t      y,\n\t      xm,\n\t      ym,\n\t      right,\n\t      bottom,\n\t      i,\n\t      j;\n\t\n\t  // If the tree is empty, initialize the root as a leaf.\n\t  if (!node) return this;\n\t\n\t  // Find the leaf node for the point.\n\t  // While descending, also retain the deepest parent with a non-removed sibling.\n\t  if (node.length) while (true) {\n\t    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n\t    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n\t    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n\t    if (!node.length) break;\n\t    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n\t  }\n\t\n\t  // Find the point to remove.\n\t  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n\t  if (next = node.next) delete node.next;\n\t\n\t  // If there are multiple coincident points, remove just the point.\n\t  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\t\n\t  // If this is the root point, remove it.\n\t  if (!parent) return this._root = next, this;\n\t\n\t  // Remove this leaf.\n\t  next ? parent[i] = next : delete parent[i];\n\t\n\t  // If the parent now contains exactly one leaf, collapse superfluous parents.\n\t  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n\t      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n\t      && !node.length) {\n\t    if (retainer) retainer[j] = node;\n\t    else this._root = node;\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\tfunction removeAll(data) {\n\t  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n\t  return this;\n\t}\n\t\n\tvar tree_root = function() {\n\t  return this._root;\n\t};\n\t\n\tvar tree_size = function() {\n\t  var size = 0;\n\t  this.visit(function(node) {\n\t    if (!node.length) do ++size; while (node = node.next)\n\t  });\n\t  return size;\n\t};\n\t\n\tvar tree_visit = function(callback) {\n\t  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n\t  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n\t  while (q = quads.pop()) {\n\t    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n\t      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n\t      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n\t      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n\t      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n\t      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n\t    }\n\t  }\n\t  return this;\n\t};\n\t\n\tvar tree_visitAfter = function(callback) {\n\t  var quads = [], next = [], q;\n\t  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n\t  while (q = quads.pop()) {\n\t    var node = q.node;\n\t    if (node.length) {\n\t      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n\t      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n\t      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n\t      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n\t      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n\t    }\n\t    next.push(q);\n\t  }\n\t  while (q = next.pop()) {\n\t    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n\t  }\n\t  return this;\n\t};\n\t\n\tfunction defaultX(d) {\n\t  return d[0];\n\t}\n\t\n\tvar tree_x = function(_) {\n\t  return arguments.length ? (this._x = _, this) : this._x;\n\t};\n\t\n\tfunction defaultY(d) {\n\t  return d[1];\n\t}\n\t\n\tvar tree_y = function(_) {\n\t  return arguments.length ? (this._y = _, this) : this._y;\n\t};\n\t\n\tfunction quadtree(nodes, x, y) {\n\t  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n\t  return nodes == null ? tree : tree.addAll(nodes);\n\t}\n\t\n\tfunction Quadtree(x, y, x0, y0, x1, y1) {\n\t  this._x = x;\n\t  this._y = y;\n\t  this._x0 = x0;\n\t  this._y0 = y0;\n\t  this._x1 = x1;\n\t  this._y1 = y1;\n\t  this._root = undefined;\n\t}\n\t\n\tfunction leaf_copy(leaf) {\n\t  var copy = {data: leaf.data}, next = copy;\n\t  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n\t  return copy;\n\t}\n\t\n\tvar treeProto = quadtree.prototype = Quadtree.prototype;\n\t\n\ttreeProto.copy = function() {\n\t  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n\t      node = this._root,\n\t      nodes,\n\t      child;\n\t\n\t  if (!node) return copy;\n\t\n\t  if (!node.length) return copy._root = leaf_copy(node), copy;\n\t\n\t  nodes = [{source: node, target: copy._root = new Array(4)}];\n\t  while (node = nodes.pop()) {\n\t    for (var i = 0; i < 4; ++i) {\n\t      if (child = node.source[i]) {\n\t        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n\t        else node.target[i] = leaf_copy(child);\n\t      }\n\t    }\n\t  }\n\t\n\t  return copy;\n\t};\n\t\n\ttreeProto.add = tree_add;\n\ttreeProto.addAll = addAll;\n\ttreeProto.cover = tree_cover;\n\ttreeProto.data = tree_data;\n\ttreeProto.extent = tree_extent;\n\ttreeProto.find = tree_find;\n\ttreeProto.remove = tree_remove;\n\ttreeProto.removeAll = removeAll;\n\ttreeProto.root = tree_root;\n\ttreeProto.size = tree_size;\n\ttreeProto.visit = tree_visit;\n\ttreeProto.visitAfter = tree_visitAfter;\n\ttreeProto.x = tree_x;\n\ttreeProto.y = tree_y;\n\t\n\tfunction x(d) {\n\t  return d.x + d.vx;\n\t}\n\t\n\tfunction y(d) {\n\t  return d.y + d.vy;\n\t}\n\t\n\tvar collide = function(radius) {\n\t  var nodes,\n\t      radii,\n\t      strength = 1,\n\t      iterations = 1;\n\t\n\t  if (typeof radius !== \"function\") radius = constant$6(radius == null ? 1 : +radius);\n\t\n\t  function force() {\n\t    var i, n = nodes.length,\n\t        tree,\n\t        node,\n\t        xi,\n\t        yi,\n\t        ri,\n\t        ri2;\n\t\n\t    for (var k = 0; k < iterations; ++k) {\n\t      tree = quadtree(nodes, x, y).visitAfter(prepare);\n\t      for (i = 0; i < n; ++i) {\n\t        node = nodes[i];\n\t        ri = radii[node.index], ri2 = ri * ri;\n\t        xi = node.x + node.vx;\n\t        yi = node.y + node.vy;\n\t        tree.visit(apply);\n\t      }\n\t    }\n\t\n\t    function apply(quad, x0, y0, x1, y1) {\n\t      var data = quad.data, rj = quad.r, r = ri + rj;\n\t      if (data) {\n\t        if (data.index > node.index) {\n\t          var x = xi - data.x - data.vx,\n\t              y = yi - data.y - data.vy,\n\t              l = x * x + y * y;\n\t          if (l < r * r) {\n\t            if (x === 0) x = jiggle(), l += x * x;\n\t            if (y === 0) y = jiggle(), l += y * y;\n\t            l = (r - (l = Math.sqrt(l))) / l * strength;\n\t            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n\t            node.vy += (y *= l) * r;\n\t            data.vx -= x * (r = 1 - r);\n\t            data.vy -= y * r;\n\t          }\n\t        }\n\t        return;\n\t      }\n\t      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n\t    }\n\t  }\n\t\n\t  function prepare(quad) {\n\t    if (quad.data) return quad.r = radii[quad.data.index];\n\t    for (var i = quad.r = 0; i < 4; ++i) {\n\t      if (quad[i] && quad[i].r > quad.r) {\n\t        quad.r = quad[i].r;\n\t      }\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t    var i, n = nodes.length, node;\n\t    radii = new Array(n);\n\t    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.iterations = function(_) {\n\t    return arguments.length ? (iterations = +_, force) : iterations;\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = +_, force) : strength;\n\t  };\n\t\n\t  force.radius = function(_) {\n\t    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : radius;\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tfunction index(d) {\n\t  return d.index;\n\t}\n\t\n\tfunction find(nodeById, nodeId) {\n\t  var node = nodeById.get(nodeId);\n\t  if (!node) throw new Error(\"missing: \" + nodeId);\n\t  return node;\n\t}\n\t\n\tvar link = function(links) {\n\t  var id = index,\n\t      strength = defaultStrength,\n\t      strengths,\n\t      distance = constant$6(30),\n\t      distances,\n\t      nodes,\n\t      count,\n\t      bias,\n\t      iterations = 1;\n\t\n\t  if (links == null) links = [];\n\t\n\t  function defaultStrength(link) {\n\t    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n\t  }\n\t\n\t  function force(alpha) {\n\t    for (var k = 0, n = links.length; k < iterations; ++k) {\n\t      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n\t        link = links[i], source = link.source, target = link.target;\n\t        x = target.x + target.vx - source.x - source.vx || jiggle();\n\t        y = target.y + target.vy - source.y - source.vy || jiggle();\n\t        l = Math.sqrt(x * x + y * y);\n\t        l = (l - distances[i]) / l * alpha * strengths[i];\n\t        x *= l, y *= l;\n\t        target.vx -= x * (b = bias[i]);\n\t        target.vy -= y * b;\n\t        source.vx += x * (b = 1 - b);\n\t        source.vy += y * b;\n\t      }\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t\n\t    var i,\n\t        n = nodes.length,\n\t        m = links.length,\n\t        nodeById = map$1(nodes, id),\n\t        link;\n\t\n\t    for (i = 0, count = new Array(n); i < m; ++i) {\n\t      link = links[i], link.index = i;\n\t      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n\t      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n\t      count[link.source.index] = (count[link.source.index] || 0) + 1;\n\t      count[link.target.index] = (count[link.target.index] || 0) + 1;\n\t    }\n\t\n\t    for (i = 0, bias = new Array(m); i < m; ++i) {\n\t      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n\t    }\n\t\n\t    strengths = new Array(m), initializeStrength();\n\t    distances = new Array(m), initializeDistance();\n\t  }\n\t\n\t  function initializeStrength() {\n\t    if (!nodes) return;\n\t\n\t    for (var i = 0, n = links.length; i < n; ++i) {\n\t      strengths[i] = +strength(links[i], i, links);\n\t    }\n\t  }\n\t\n\t  function initializeDistance() {\n\t    if (!nodes) return;\n\t\n\t    for (var i = 0, n = links.length; i < n; ++i) {\n\t      distances[i] = +distance(links[i], i, links);\n\t    }\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.links = function(_) {\n\t    return arguments.length ? (links = _, initialize(), force) : links;\n\t  };\n\t\n\t  force.id = function(_) {\n\t    return arguments.length ? (id = _, force) : id;\n\t  };\n\t\n\t  force.iterations = function(_) {\n\t    return arguments.length ? (iterations = +_, force) : iterations;\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initializeStrength(), force) : strength;\n\t  };\n\t\n\t  force.distance = function(_) {\n\t    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant$6(+_), initializeDistance(), force) : distance;\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tfunction x$1(d) {\n\t  return d.x;\n\t}\n\t\n\tfunction y$1(d) {\n\t  return d.y;\n\t}\n\t\n\tvar initialRadius = 10;\n\tvar initialAngle = Math.PI * (3 - Math.sqrt(5));\n\t\n\tvar simulation = function(nodes) {\n\t  var simulation,\n\t      alpha = 1,\n\t      alphaMin = 0.001,\n\t      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n\t      alphaTarget = 0,\n\t      velocityDecay = 0.6,\n\t      forces = map$1(),\n\t      stepper = timer(step),\n\t      event = dispatch(\"tick\", \"end\");\n\t\n\t  if (nodes == null) nodes = [];\n\t\n\t  function step() {\n\t    tick();\n\t    event.call(\"tick\", simulation);\n\t    if (alpha < alphaMin) {\n\t      stepper.stop();\n\t      event.call(\"end\", simulation);\n\t    }\n\t  }\n\t\n\t  function tick() {\n\t    var i, n = nodes.length, node;\n\t\n\t    alpha += (alphaTarget - alpha) * alphaDecay;\n\t\n\t    forces.each(function(force) {\n\t      force(alpha);\n\t    });\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      node = nodes[i];\n\t      if (node.fx == null) node.x += node.vx *= velocityDecay;\n\t      else node.x = node.fx, node.vx = 0;\n\t      if (node.fy == null) node.y += node.vy *= velocityDecay;\n\t      else node.y = node.fy, node.vy = 0;\n\t    }\n\t  }\n\t\n\t  function initializeNodes() {\n\t    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n\t      node = nodes[i], node.index = i;\n\t      if (isNaN(node.x) || isNaN(node.y)) {\n\t        var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n\t        node.x = radius * Math.cos(angle);\n\t        node.y = radius * Math.sin(angle);\n\t      }\n\t      if (isNaN(node.vx) || isNaN(node.vy)) {\n\t        node.vx = node.vy = 0;\n\t      }\n\t    }\n\t  }\n\t\n\t  function initializeForce(force) {\n\t    if (force.initialize) force.initialize(nodes);\n\t    return force;\n\t  }\n\t\n\t  initializeNodes();\n\t\n\t  return simulation = {\n\t    tick: tick,\n\t\n\t    restart: function() {\n\t      return stepper.restart(step), simulation;\n\t    },\n\t\n\t    stop: function() {\n\t      return stepper.stop(), simulation;\n\t    },\n\t\n\t    nodes: function(_) {\n\t      return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;\n\t    },\n\t\n\t    alpha: function(_) {\n\t      return arguments.length ? (alpha = +_, simulation) : alpha;\n\t    },\n\t\n\t    alphaMin: function(_) {\n\t      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n\t    },\n\t\n\t    alphaDecay: function(_) {\n\t      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n\t    },\n\t\n\t    alphaTarget: function(_) {\n\t      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n\t    },\n\t\n\t    velocityDecay: function(_) {\n\t      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n\t    },\n\t\n\t    force: function(name, _) {\n\t      return arguments.length > 1 ? ((_ == null ? forces.remove(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n\t    },\n\t\n\t    find: function(x, y, radius) {\n\t      var i = 0,\n\t          n = nodes.length,\n\t          dx,\n\t          dy,\n\t          d2,\n\t          node,\n\t          closest;\n\t\n\t      if (radius == null) radius = Infinity;\n\t      else radius *= radius;\n\t\n\t      for (i = 0; i < n; ++i) {\n\t        node = nodes[i];\n\t        dx = x - node.x;\n\t        dy = y - node.y;\n\t        d2 = dx * dx + dy * dy;\n\t        if (d2 < radius) closest = node, radius = d2;\n\t      }\n\t\n\t      return closest;\n\t    },\n\t\n\t    on: function(name, _) {\n\t      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n\t    }\n\t  };\n\t};\n\t\n\tvar manyBody = function() {\n\t  var nodes,\n\t      node,\n\t      alpha,\n\t      strength = constant$6(-30),\n\t      strengths,\n\t      distanceMin2 = 1,\n\t      distanceMax2 = Infinity,\n\t      theta2 = 0.81;\n\t\n\t  function force(_) {\n\t    var i, n = nodes.length, tree = quadtree(nodes, x$1, y$1).visitAfter(accumulate);\n\t    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t    var i, n = nodes.length, node;\n\t    strengths = new Array(n);\n\t    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n\t  }\n\t\n\t  function accumulate(quad) {\n\t    var strength = 0, q, c, x$$1, y$$1, i;\n\t\n\t    // For internal nodes, accumulate forces from child quadrants.\n\t    if (quad.length) {\n\t      for (x$$1 = y$$1 = i = 0; i < 4; ++i) {\n\t        if ((q = quad[i]) && (c = q.value)) {\n\t          strength += c, x$$1 += c * q.x, y$$1 += c * q.y;\n\t        }\n\t      }\n\t      quad.x = x$$1 / strength;\n\t      quad.y = y$$1 / strength;\n\t    }\n\t\n\t    // For leaf nodes, accumulate forces from coincident quadrants.\n\t    else {\n\t      q = quad;\n\t      q.x = q.data.x;\n\t      q.y = q.data.y;\n\t      do strength += strengths[q.data.index];\n\t      while (q = q.next);\n\t    }\n\t\n\t    quad.value = strength;\n\t  }\n\t\n\t  function apply(quad, x1, _, x2) {\n\t    if (!quad.value) return true;\n\t\n\t    var x$$1 = quad.x - node.x,\n\t        y$$1 = quad.y - node.y,\n\t        w = x2 - x1,\n\t        l = x$$1 * x$$1 + y$$1 * y$$1;\n\t\n\t    // Apply the Barnes-Hut approximation if possible.\n\t    // Limit forces for very close nodes; randomize direction if coincident.\n\t    if (w * w / theta2 < l) {\n\t      if (l < distanceMax2) {\n\t        if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n\t        if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n\t        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n\t        node.vx += x$$1 * quad.value * alpha / l;\n\t        node.vy += y$$1 * quad.value * alpha / l;\n\t      }\n\t      return true;\n\t    }\n\t\n\t    // Otherwise, process points directly.\n\t    else if (quad.length || l >= distanceMax2) return;\n\t\n\t    // Limit forces for very close nodes; randomize direction if coincident.\n\t    if (quad.data !== node || quad.next) {\n\t      if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n\t      if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n\t      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n\t    }\n\t\n\t    do if (quad.data !== node) {\n\t      w = strengths[quad.data.index] * alpha / l;\n\t      node.vx += x$$1 * w;\n\t      node.vy += y$$1 * w;\n\t    } while (quad = quad.next);\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n\t  };\n\t\n\t  force.distanceMin = function(_) {\n\t    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n\t  };\n\t\n\t  force.distanceMax = function(_) {\n\t    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n\t  };\n\t\n\t  force.theta = function(_) {\n\t    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tvar x$2 = function(x) {\n\t  var strength = constant$6(0.1),\n\t      nodes,\n\t      strengths,\n\t      xz;\n\t\n\t  if (typeof x !== \"function\") x = constant$6(x == null ? 0 : +x);\n\t\n\t  function force(alpha) {\n\t    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n\t      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t    var i, n = nodes.length;\n\t    strengths = new Array(n);\n\t    xz = new Array(n);\n\t    for (i = 0; i < n; ++i) {\n\t      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n\t    }\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n\t  };\n\t\n\t  force.x = function(_) {\n\t    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : x;\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tvar y$2 = function(y) {\n\t  var strength = constant$6(0.1),\n\t      nodes,\n\t      strengths,\n\t      yz;\n\t\n\t  if (typeof y !== \"function\") y = constant$6(y == null ? 0 : +y);\n\t\n\t  function force(alpha) {\n\t    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n\t      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t    var i, n = nodes.length;\n\t    strengths = new Array(n);\n\t    yz = new Array(n);\n\t    for (i = 0; i < n; ++i) {\n\t      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n\t    }\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n\t  };\n\t\n\t  force.y = function(_) {\n\t    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : y;\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\t// Computes the decimal coefficient and exponent of the specified number x with\n\t// significant digits p, where x is positive and p is in [1, 21] or undefined.\n\t// For example, formatDecimal(1.23) returns [\"123\", 0].\n\tvar formatDecimal = function(x, p) {\n\t  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n\t  var i, coefficient = x.slice(0, i);\n\t\n\t  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n\t  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n\t  return [\n\t    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n\t    +x.slice(i + 1)\n\t  ];\n\t};\n\t\n\tvar exponent$1 = function(x) {\n\t  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n\t};\n\t\n\tvar formatGroup = function(grouping, thousands) {\n\t  return function(value, width) {\n\t    var i = value.length,\n\t        t = [],\n\t        j = 0,\n\t        g = grouping[0],\n\t        length = 0;\n\t\n\t    while (i > 0 && g > 0) {\n\t      if (length + g + 1 > width) g = Math.max(1, width - length);\n\t      t.push(value.substring(i -= g, i + g));\n\t      if ((length += g + 1) > width) break;\n\t      g = grouping[j = (j + 1) % grouping.length];\n\t    }\n\t\n\t    return t.reverse().join(thousands);\n\t  };\n\t};\n\t\n\tvar formatNumerals = function(numerals) {\n\t  return function(value) {\n\t    return value.replace(/[0-9]/g, function(i) {\n\t      return numerals[+i];\n\t    });\n\t  };\n\t};\n\t\n\tvar formatDefault = function(x, p) {\n\t  x = x.toPrecision(p);\n\t\n\t  out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n\t    switch (x[i]) {\n\t      case \".\": i0 = i1 = i; break;\n\t      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n\t      case \"e\": break out;\n\t      default: if (i0 > 0) i0 = 0; break;\n\t    }\n\t  }\n\t\n\t  return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n\t};\n\t\n\tvar prefixExponent;\n\t\n\tvar formatPrefixAuto = function(x, p) {\n\t  var d = formatDecimal(x, p);\n\t  if (!d) return x + \"\";\n\t  var coefficient = d[0],\n\t      exponent = d[1],\n\t      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n\t      n = coefficient.length;\n\t  return i === n ? coefficient\n\t      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n\t      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n\t      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n\t};\n\t\n\tvar formatRounded = function(x, p) {\n\t  var d = formatDecimal(x, p);\n\t  if (!d) return x + \"\";\n\t  var coefficient = d[0],\n\t      exponent = d[1];\n\t  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n\t      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n\t      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n\t};\n\t\n\tvar formatTypes = {\n\t  \"\": formatDefault,\n\t  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n\t  \"b\": function(x) { return Math.round(x).toString(2); },\n\t  \"c\": function(x) { return x + \"\"; },\n\t  \"d\": function(x) { return Math.round(x).toString(10); },\n\t  \"e\": function(x, p) { return x.toExponential(p); },\n\t  \"f\": function(x, p) { return x.toFixed(p); },\n\t  \"g\": function(x, p) { return x.toPrecision(p); },\n\t  \"o\": function(x) { return Math.round(x).toString(8); },\n\t  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n\t  \"r\": formatRounded,\n\t  \"s\": formatPrefixAuto,\n\t  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n\t  \"x\": function(x) { return Math.round(x).toString(16); }\n\t};\n\t\n\t// [[fill]align][sign][symbol][0][width][,][.precision][type]\n\tvar re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\t\n\tfunction formatSpecifier(specifier) {\n\t  return new FormatSpecifier(specifier);\n\t}\n\t\n\tformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\t\n\tfunction FormatSpecifier(specifier) {\n\t  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\t\n\t  var match,\n\t      fill = match[1] || \" \",\n\t      align = match[2] || \">\",\n\t      sign = match[3] || \"-\",\n\t      symbol = match[4] || \"\",\n\t      zero = !!match[5],\n\t      width = match[6] && +match[6],\n\t      comma = !!match[7],\n\t      precision = match[8] && +match[8].slice(1),\n\t      type = match[9] || \"\";\n\t\n\t  // The \"n\" type is an alias for \",g\".\n\t  if (type === \"n\") comma = true, type = \"g\";\n\t\n\t  // Map invalid types to the default format.\n\t  else if (!formatTypes[type]) type = \"\";\n\t\n\t  // If zero fill is specified, padding goes after sign and before digits.\n\t  if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\t\n\t  this.fill = fill;\n\t  this.align = align;\n\t  this.sign = sign;\n\t  this.symbol = symbol;\n\t  this.zero = zero;\n\t  this.width = width;\n\t  this.comma = comma;\n\t  this.precision = precision;\n\t  this.type = type;\n\t}\n\t\n\tFormatSpecifier.prototype.toString = function() {\n\t  return this.fill\n\t      + this.align\n\t      + this.sign\n\t      + this.symbol\n\t      + (this.zero ? \"0\" : \"\")\n\t      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n\t      + (this.comma ? \",\" : \"\")\n\t      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n\t      + this.type;\n\t};\n\t\n\tvar identity$3 = function(x) {\n\t  return x;\n\t};\n\t\n\tvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"\\xB5\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\t\n\tvar formatLocale = function(locale) {\n\t  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity$3,\n\t      currency = locale.currency,\n\t      decimal = locale.decimal,\n\t      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity$3,\n\t      percent = locale.percent || \"%\";\n\t\n\t  function newFormat(specifier) {\n\t    specifier = formatSpecifier(specifier);\n\t\n\t    var fill = specifier.fill,\n\t        align = specifier.align,\n\t        sign = specifier.sign,\n\t        symbol = specifier.symbol,\n\t        zero = specifier.zero,\n\t        width = specifier.width,\n\t        comma = specifier.comma,\n\t        precision = specifier.precision,\n\t        type = specifier.type;\n\t\n\t    // Compute the prefix and suffix.\n\t    // For SI-prefix, the suffix is lazily computed.\n\t    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n\t        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? percent : \"\";\n\t\n\t    // What format function should we use?\n\t    // Is this an integer type?\n\t    // Can this type generate exponential notation?\n\t    var formatType = formatTypes[type],\n\t        maybeSuffix = !type || /[defgprs%]/.test(type);\n\t\n\t    // Set the default precision if not specified,\n\t    // or clamp the specified precision to the supported range.\n\t    // For significant precision, it must be in [1, 21].\n\t    // For fixed precision, it must be in [0, 20].\n\t    precision = precision == null ? (type ? 6 : 12)\n\t        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n\t        : Math.max(0, Math.min(20, precision));\n\t\n\t    function format(value) {\n\t      var valuePrefix = prefix,\n\t          valueSuffix = suffix,\n\t          i, n, c;\n\t\n\t      if (type === \"c\") {\n\t        valueSuffix = formatType(value) + valueSuffix;\n\t        value = \"\";\n\t      } else {\n\t        value = +value;\n\t\n\t        // Perform the initial formatting.\n\t        var valueNegative = value < 0;\n\t        value = formatType(Math.abs(value), precision);\n\t\n\t        // If a negative value rounds to zero during formatting, treat as positive.\n\t        if (valueNegative && +value === 0) valueNegative = false;\n\t\n\t        // Compute the prefix and suffix.\n\t        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n\t        valueSuffix = valueSuffix + (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\t\n\t        // Break the formatted value into the integer “value” part that can be\n\t        // grouped, and fractional or exponential “suffix” part that is not.\n\t        if (maybeSuffix) {\n\t          i = -1, n = value.length;\n\t          while (++i < n) {\n\t            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n\t              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n\t              value = value.slice(0, i);\n\t              break;\n\t            }\n\t          }\n\t        }\n\t      }\n\t\n\t      // If the fill character is not \"0\", grouping is applied before padding.\n\t      if (comma && !zero) value = group(value, Infinity);\n\t\n\t      // Compute the padding.\n\t      var length = valuePrefix.length + value.length + valueSuffix.length,\n\t          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\t\n\t      // If the fill character is \"0\", grouping is applied after padding.\n\t      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\t\n\t      // Reconstruct the final output based on the desired alignment.\n\t      switch (align) {\n\t        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n\t        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n\t        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n\t        default: value = padding + valuePrefix + value + valueSuffix; break;\n\t      }\n\t\n\t      return numerals(value);\n\t    }\n\t\n\t    format.toString = function() {\n\t      return specifier + \"\";\n\t    };\n\t\n\t    return format;\n\t  }\n\t\n\t  function formatPrefix(specifier, value) {\n\t    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n\t        e = Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3,\n\t        k = Math.pow(10, -e),\n\t        prefix = prefixes[8 + e / 3];\n\t    return function(value) {\n\t      return f(k * value) + prefix;\n\t    };\n\t  }\n\t\n\t  return {\n\t    format: newFormat,\n\t    formatPrefix: formatPrefix\n\t  };\n\t};\n\t\n\tvar locale$1;\n\t\n\t\n\t\n\tdefaultLocale({\n\t  decimal: \".\",\n\t  thousands: \",\",\n\t  grouping: [3],\n\t  currency: [\"$\", \"\"]\n\t});\n\t\n\tfunction defaultLocale(definition) {\n\t  locale$1 = formatLocale(definition);\n\t  exports.format = locale$1.format;\n\t  exports.formatPrefix = locale$1.formatPrefix;\n\t  return locale$1;\n\t}\n\t\n\tvar precisionFixed = function(step) {\n\t  return Math.max(0, -exponent$1(Math.abs(step)));\n\t};\n\t\n\tvar precisionPrefix = function(step, value) {\n\t  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3 - exponent$1(Math.abs(step)));\n\t};\n\t\n\tvar precisionRound = function(step, max) {\n\t  step = Math.abs(step), max = Math.abs(max) - step;\n\t  return Math.max(0, exponent$1(max) - exponent$1(step)) + 1;\n\t};\n\t\n\t// Adds floating point numbers with twice the normal precision.\n\t// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n\t// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n\t// 305–363 (1997).\n\t// Code adapted from GeographicLib by Charles F. F. Karney,\n\t// http://geographiclib.sourceforge.net/\n\t\n\tvar adder = function() {\n\t  return new Adder;\n\t};\n\t\n\tfunction Adder() {\n\t  this.reset();\n\t}\n\t\n\tAdder.prototype = {\n\t  constructor: Adder,\n\t  reset: function() {\n\t    this.s = // rounded value\n\t    this.t = 0; // exact error\n\t  },\n\t  add: function(y) {\n\t    add$1(temp, y, this.t);\n\t    add$1(this, temp.s, this.s);\n\t    if (this.s) this.t += temp.t;\n\t    else this.s = temp.t;\n\t  },\n\t  valueOf: function() {\n\t    return this.s;\n\t  }\n\t};\n\t\n\tvar temp = new Adder;\n\t\n\tfunction add$1(adder, a, b) {\n\t  var x = adder.s = a + b,\n\t      bv = x - a,\n\t      av = x - bv;\n\t  adder.t = (a - av) + (b - bv);\n\t}\n\t\n\tvar epsilon$2 = 1e-6;\n\tvar epsilon2$1 = 1e-12;\n\tvar pi$3 = Math.PI;\n\tvar halfPi$2 = pi$3 / 2;\n\tvar quarterPi = pi$3 / 4;\n\tvar tau$3 = pi$3 * 2;\n\t\n\tvar degrees$1 = 180 / pi$3;\n\tvar radians = pi$3 / 180;\n\t\n\tvar abs = Math.abs;\n\tvar atan = Math.atan;\n\tvar atan2 = Math.atan2;\n\tvar cos$1 = Math.cos;\n\tvar ceil = Math.ceil;\n\tvar exp = Math.exp;\n\t\n\tvar log = Math.log;\n\tvar pow = Math.pow;\n\tvar sin$1 = Math.sin;\n\tvar sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\n\tvar sqrt = Math.sqrt;\n\tvar tan = Math.tan;\n\t\n\tfunction acos(x) {\n\t  return x > 1 ? 0 : x < -1 ? pi$3 : Math.acos(x);\n\t}\n\t\n\tfunction asin(x) {\n\t  return x > 1 ? halfPi$2 : x < -1 ? -halfPi$2 : Math.asin(x);\n\t}\n\t\n\tfunction haversin(x) {\n\t  return (x = sin$1(x / 2)) * x;\n\t}\n\t\n\tfunction noop$1() {}\n\t\n\tfunction streamGeometry(geometry, stream) {\n\t  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n\t    streamGeometryType[geometry.type](geometry, stream);\n\t  }\n\t}\n\t\n\tvar streamObjectType = {\n\t  Feature: function(object, stream) {\n\t    streamGeometry(object.geometry, stream);\n\t  },\n\t  FeatureCollection: function(object, stream) {\n\t    var features = object.features, i = -1, n = features.length;\n\t    while (++i < n) streamGeometry(features[i].geometry, stream);\n\t  }\n\t};\n\t\n\tvar streamGeometryType = {\n\t  Sphere: function(object, stream) {\n\t    stream.sphere();\n\t  },\n\t  Point: function(object, stream) {\n\t    object = object.coordinates;\n\t    stream.point(object[0], object[1], object[2]);\n\t  },\n\t  MultiPoint: function(object, stream) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n\t  },\n\t  LineString: function(object, stream) {\n\t    streamLine(object.coordinates, stream, 0);\n\t  },\n\t  MultiLineString: function(object, stream) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) streamLine(coordinates[i], stream, 0);\n\t  },\n\t  Polygon: function(object, stream) {\n\t    streamPolygon(object.coordinates, stream);\n\t  },\n\t  MultiPolygon: function(object, stream) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) streamPolygon(coordinates[i], stream);\n\t  },\n\t  GeometryCollection: function(object, stream) {\n\t    var geometries = object.geometries, i = -1, n = geometries.length;\n\t    while (++i < n) streamGeometry(geometries[i], stream);\n\t  }\n\t};\n\t\n\tfunction streamLine(coordinates, stream, closed) {\n\t  var i = -1, n = coordinates.length - closed, coordinate;\n\t  stream.lineStart();\n\t  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n\t  stream.lineEnd();\n\t}\n\t\n\tfunction streamPolygon(coordinates, stream) {\n\t  var i = -1, n = coordinates.length;\n\t  stream.polygonStart();\n\t  while (++i < n) streamLine(coordinates[i], stream, 1);\n\t  stream.polygonEnd();\n\t}\n\t\n\tvar geoStream = function(object, stream) {\n\t  if (object && streamObjectType.hasOwnProperty(object.type)) {\n\t    streamObjectType[object.type](object, stream);\n\t  } else {\n\t    streamGeometry(object, stream);\n\t  }\n\t};\n\t\n\tvar areaRingSum = adder();\n\t\n\tvar areaSum = adder();\n\tvar lambda00;\n\tvar phi00;\n\tvar lambda0;\n\tvar cosPhi0;\n\tvar sinPhi0;\n\t\n\tvar areaStream = {\n\t  point: noop$1,\n\t  lineStart: noop$1,\n\t  lineEnd: noop$1,\n\t  polygonStart: function() {\n\t    areaRingSum.reset();\n\t    areaStream.lineStart = areaRingStart;\n\t    areaStream.lineEnd = areaRingEnd;\n\t  },\n\t  polygonEnd: function() {\n\t    var areaRing = +areaRingSum;\n\t    areaSum.add(areaRing < 0 ? tau$3 + areaRing : areaRing);\n\t    this.lineStart = this.lineEnd = this.point = noop$1;\n\t  },\n\t  sphere: function() {\n\t    areaSum.add(tau$3);\n\t  }\n\t};\n\t\n\tfunction areaRingStart() {\n\t  areaStream.point = areaPointFirst;\n\t}\n\t\n\tfunction areaRingEnd() {\n\t  areaPoint(lambda00, phi00);\n\t}\n\t\n\tfunction areaPointFirst(lambda, phi) {\n\t  areaStream.point = areaPoint;\n\t  lambda00 = lambda, phi00 = phi;\n\t  lambda *= radians, phi *= radians;\n\t  lambda0 = lambda, cosPhi0 = cos$1(phi = phi / 2 + quarterPi), sinPhi0 = sin$1(phi);\n\t}\n\t\n\tfunction areaPoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\t\n\t  // Spherical excess E for a spherical triangle with vertices: south pole,\n\t  // previous point, current point.  Uses a formula derived from Cagnoli’s\n\t  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n\t  var dLambda = lambda - lambda0,\n\t      sdLambda = dLambda >= 0 ? 1 : -1,\n\t      adLambda = sdLambda * dLambda,\n\t      cosPhi = cos$1(phi),\n\t      sinPhi = sin$1(phi),\n\t      k = sinPhi0 * sinPhi,\n\t      u = cosPhi0 * cosPhi + k * cos$1(adLambda),\n\t      v = k * sdLambda * sin$1(adLambda);\n\t  areaRingSum.add(atan2(v, u));\n\t\n\t  // Advance the previous points.\n\t  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n\t}\n\t\n\tvar area = function(object) {\n\t  areaSum.reset();\n\t  geoStream(object, areaStream);\n\t  return areaSum * 2;\n\t};\n\t\n\tfunction spherical(cartesian) {\n\t  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n\t}\n\t\n\tfunction cartesian(spherical) {\n\t  var lambda = spherical[0], phi = spherical[1], cosPhi = cos$1(phi);\n\t  return [cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi)];\n\t}\n\t\n\tfunction cartesianDot(a, b) {\n\t  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n\t}\n\t\n\tfunction cartesianCross(a, b) {\n\t  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n\t}\n\t\n\t// TODO return a\n\tfunction cartesianAddInPlace(a, b) {\n\t  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n\t}\n\t\n\tfunction cartesianScale(vector, k) {\n\t  return [vector[0] * k, vector[1] * k, vector[2] * k];\n\t}\n\t\n\t// TODO return d\n\tfunction cartesianNormalizeInPlace(d) {\n\t  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n\t  d[0] /= l, d[1] /= l, d[2] /= l;\n\t}\n\t\n\tvar lambda0$1;\n\tvar phi0;\n\tvar lambda1;\n\tvar phi1;\n\tvar lambda2;\n\tvar lambda00$1;\n\tvar phi00$1;\n\tvar p0;\n\tvar deltaSum = adder();\n\tvar ranges;\n\tvar range;\n\t\n\tvar boundsStream = {\n\t  point: boundsPoint,\n\t  lineStart: boundsLineStart,\n\t  lineEnd: boundsLineEnd,\n\t  polygonStart: function() {\n\t    boundsStream.point = boundsRingPoint;\n\t    boundsStream.lineStart = boundsRingStart;\n\t    boundsStream.lineEnd = boundsRingEnd;\n\t    deltaSum.reset();\n\t    areaStream.polygonStart();\n\t  },\n\t  polygonEnd: function() {\n\t    areaStream.polygonEnd();\n\t    boundsStream.point = boundsPoint;\n\t    boundsStream.lineStart = boundsLineStart;\n\t    boundsStream.lineEnd = boundsLineEnd;\n\t    if (areaRingSum < 0) lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n\t    else if (deltaSum > epsilon$2) phi1 = 90;\n\t    else if (deltaSum < -epsilon$2) phi0 = -90;\n\t    range[0] = lambda0$1, range[1] = lambda1;\n\t  }\n\t};\n\t\n\tfunction boundsPoint(lambda, phi) {\n\t  ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n\t  if (phi < phi0) phi0 = phi;\n\t  if (phi > phi1) phi1 = phi;\n\t}\n\t\n\tfunction linePoint(lambda, phi) {\n\t  var p = cartesian([lambda * radians, phi * radians]);\n\t  if (p0) {\n\t    var normal = cartesianCross(p0, p),\n\t        equatorial = [normal[1], -normal[0], 0],\n\t        inflection = cartesianCross(equatorial, normal);\n\t    cartesianNormalizeInPlace(inflection);\n\t    inflection = spherical(inflection);\n\t    var delta = lambda - lambda2,\n\t        sign$$1 = delta > 0 ? 1 : -1,\n\t        lambdai = inflection[0] * degrees$1 * sign$$1,\n\t        phii,\n\t        antimeridian = abs(delta) > 180;\n\t    if (antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n\t      phii = inflection[1] * degrees$1;\n\t      if (phii > phi1) phi1 = phii;\n\t    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n\t      phii = -inflection[1] * degrees$1;\n\t      if (phii < phi0) phi0 = phii;\n\t    } else {\n\t      if (phi < phi0) phi0 = phi;\n\t      if (phi > phi1) phi1 = phi;\n\t    }\n\t    if (antimeridian) {\n\t      if (lambda < lambda2) {\n\t        if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n\t      } else {\n\t        if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n\t      }\n\t    } else {\n\t      if (lambda1 >= lambda0$1) {\n\t        if (lambda < lambda0$1) lambda0$1 = lambda;\n\t        if (lambda > lambda1) lambda1 = lambda;\n\t      } else {\n\t        if (lambda > lambda2) {\n\t          if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n\t        } else {\n\t          if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n\t        }\n\t      }\n\t    }\n\t  } else {\n\t    ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n\t  }\n\t  if (phi < phi0) phi0 = phi;\n\t  if (phi > phi1) phi1 = phi;\n\t  p0 = p, lambda2 = lambda;\n\t}\n\t\n\tfunction boundsLineStart() {\n\t  boundsStream.point = linePoint;\n\t}\n\t\n\tfunction boundsLineEnd() {\n\t  range[0] = lambda0$1, range[1] = lambda1;\n\t  boundsStream.point = boundsPoint;\n\t  p0 = null;\n\t}\n\t\n\tfunction boundsRingPoint(lambda, phi) {\n\t  if (p0) {\n\t    var delta = lambda - lambda2;\n\t    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n\t  } else {\n\t    lambda00$1 = lambda, phi00$1 = phi;\n\t  }\n\t  areaStream.point(lambda, phi);\n\t  linePoint(lambda, phi);\n\t}\n\t\n\tfunction boundsRingStart() {\n\t  areaStream.lineStart();\n\t}\n\t\n\tfunction boundsRingEnd() {\n\t  boundsRingPoint(lambda00$1, phi00$1);\n\t  areaStream.lineEnd();\n\t  if (abs(deltaSum) > epsilon$2) lambda0$1 = -(lambda1 = 180);\n\t  range[0] = lambda0$1, range[1] = lambda1;\n\t  p0 = null;\n\t}\n\t\n\t// Finds the left-right distance between two longitudes.\n\t// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n\t// the distance between ±180° to be 360°.\n\tfunction angle(lambda0, lambda1) {\n\t  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n\t}\n\t\n\tfunction rangeCompare(a, b) {\n\t  return a[0] - b[0];\n\t}\n\t\n\tfunction rangeContains(range, x) {\n\t  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n\t}\n\t\n\tvar bounds = function(feature) {\n\t  var i, n, a, b, merged, deltaMax, delta;\n\t\n\t  phi1 = lambda1 = -(lambda0$1 = phi0 = Infinity);\n\t  ranges = [];\n\t  geoStream(feature, boundsStream);\n\t\n\t  // First, sort ranges by their minimum longitudes.\n\t  if (n = ranges.length) {\n\t    ranges.sort(rangeCompare);\n\t\n\t    // Then, merge any ranges that overlap.\n\t    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n\t      b = ranges[i];\n\t      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n\t        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n\t        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n\t      } else {\n\t        merged.push(a = b);\n\t      }\n\t    }\n\t\n\t    // Finally, find the largest gap between the merged ranges.\n\t    // The final bounding box will be the inverse of this gap.\n\t    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n\t      b = merged[i];\n\t      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0$1 = b[0], lambda1 = a[1];\n\t    }\n\t  }\n\t\n\t  ranges = range = null;\n\t\n\t  return lambda0$1 === Infinity || phi0 === Infinity\n\t      ? [[NaN, NaN], [NaN, NaN]]\n\t      : [[lambda0$1, phi0], [lambda1, phi1]];\n\t};\n\t\n\tvar W0;\n\tvar W1;\n\tvar X0;\n\tvar Y0;\n\tvar Z0;\n\tvar X1;\n\tvar Y1;\n\tvar Z1;\n\tvar X2;\n\tvar Y2;\n\tvar Z2;\n\tvar lambda00$2;\n\tvar phi00$2;\n\tvar x0;\n\tvar y0;\n\tvar z0; // previous point\n\t\n\tvar centroidStream = {\n\t  sphere: noop$1,\n\t  point: centroidPoint,\n\t  lineStart: centroidLineStart,\n\t  lineEnd: centroidLineEnd,\n\t  polygonStart: function() {\n\t    centroidStream.lineStart = centroidRingStart;\n\t    centroidStream.lineEnd = centroidRingEnd;\n\t  },\n\t  polygonEnd: function() {\n\t    centroidStream.lineStart = centroidLineStart;\n\t    centroidStream.lineEnd = centroidLineEnd;\n\t  }\n\t};\n\t\n\t// Arithmetic mean of Cartesian vectors.\n\tfunction centroidPoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var cosPhi = cos$1(phi);\n\t  centroidPointCartesian(cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi));\n\t}\n\t\n\tfunction centroidPointCartesian(x, y, z) {\n\t  ++W0;\n\t  X0 += (x - X0) / W0;\n\t  Y0 += (y - Y0) / W0;\n\t  Z0 += (z - Z0) / W0;\n\t}\n\t\n\tfunction centroidLineStart() {\n\t  centroidStream.point = centroidLinePointFirst;\n\t}\n\t\n\tfunction centroidLinePointFirst(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var cosPhi = cos$1(phi);\n\t  x0 = cosPhi * cos$1(lambda);\n\t  y0 = cosPhi * sin$1(lambda);\n\t  z0 = sin$1(phi);\n\t  centroidStream.point = centroidLinePoint;\n\t  centroidPointCartesian(x0, y0, z0);\n\t}\n\t\n\tfunction centroidLinePoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var cosPhi = cos$1(phi),\n\t      x = cosPhi * cos$1(lambda),\n\t      y = cosPhi * sin$1(lambda),\n\t      z = sin$1(phi),\n\t      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n\t  W1 += w;\n\t  X1 += w * (x0 + (x0 = x));\n\t  Y1 += w * (y0 + (y0 = y));\n\t  Z1 += w * (z0 + (z0 = z));\n\t  centroidPointCartesian(x0, y0, z0);\n\t}\n\t\n\tfunction centroidLineEnd() {\n\t  centroidStream.point = centroidPoint;\n\t}\n\t\n\t// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n\t// J. Applied Mechanics 42, 239 (1975).\n\tfunction centroidRingStart() {\n\t  centroidStream.point = centroidRingPointFirst;\n\t}\n\t\n\tfunction centroidRingEnd() {\n\t  centroidRingPoint(lambda00$2, phi00$2);\n\t  centroidStream.point = centroidPoint;\n\t}\n\t\n\tfunction centroidRingPointFirst(lambda, phi) {\n\t  lambda00$2 = lambda, phi00$2 = phi;\n\t  lambda *= radians, phi *= radians;\n\t  centroidStream.point = centroidRingPoint;\n\t  var cosPhi = cos$1(phi);\n\t  x0 = cosPhi * cos$1(lambda);\n\t  y0 = cosPhi * sin$1(lambda);\n\t  z0 = sin$1(phi);\n\t  centroidPointCartesian(x0, y0, z0);\n\t}\n\t\n\tfunction centroidRingPoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var cosPhi = cos$1(phi),\n\t      x = cosPhi * cos$1(lambda),\n\t      y = cosPhi * sin$1(lambda),\n\t      z = sin$1(phi),\n\t      cx = y0 * z - z0 * y,\n\t      cy = z0 * x - x0 * z,\n\t      cz = x0 * y - y0 * x,\n\t      m = sqrt(cx * cx + cy * cy + cz * cz),\n\t      w = asin(m), // line weight = angle\n\t      v = m && -w / m; // area weight multiplier\n\t  X2 += v * cx;\n\t  Y2 += v * cy;\n\t  Z2 += v * cz;\n\t  W1 += w;\n\t  X1 += w * (x0 + (x0 = x));\n\t  Y1 += w * (y0 + (y0 = y));\n\t  Z1 += w * (z0 + (z0 = z));\n\t  centroidPointCartesian(x0, y0, z0);\n\t}\n\t\n\tvar centroid = function(object) {\n\t  W0 = W1 =\n\t  X0 = Y0 = Z0 =\n\t  X1 = Y1 = Z1 =\n\t  X2 = Y2 = Z2 = 0;\n\t  geoStream(object, centroidStream);\n\t\n\t  var x = X2,\n\t      y = Y2,\n\t      z = Z2,\n\t      m = x * x + y * y + z * z;\n\t\n\t  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n\t  if (m < epsilon2$1) {\n\t    x = X1, y = Y1, z = Z1;\n\t    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n\t    if (W1 < epsilon$2) x = X0, y = Y0, z = Z0;\n\t    m = x * x + y * y + z * z;\n\t    // If the feature still has an undefined ccentroid, then return.\n\t    if (m < epsilon2$1) return [NaN, NaN];\n\t  }\n\t\n\t  return [atan2(y, x) * degrees$1, asin(z / sqrt(m)) * degrees$1];\n\t};\n\t\n\tvar constant$7 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar compose = function(a, b) {\n\t\n\t  function compose(x, y) {\n\t    return x = a(x, y), b(x[0], x[1]);\n\t  }\n\t\n\t  if (a.invert && b.invert) compose.invert = function(x, y) {\n\t    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n\t  };\n\t\n\t  return compose;\n\t};\n\t\n\tfunction rotationIdentity(lambda, phi) {\n\t  return [lambda > pi$3 ? lambda - tau$3 : lambda < -pi$3 ? lambda + tau$3 : lambda, phi];\n\t}\n\t\n\trotationIdentity.invert = rotationIdentity;\n\t\n\tfunction rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n\t  return (deltaLambda %= tau$3) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n\t    : rotationLambda(deltaLambda))\n\t    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n\t    : rotationIdentity);\n\t}\n\t\n\tfunction forwardRotationLambda(deltaLambda) {\n\t  return function(lambda, phi) {\n\t    return lambda += deltaLambda, [lambda > pi$3 ? lambda - tau$3 : lambda < -pi$3 ? lambda + tau$3 : lambda, phi];\n\t  };\n\t}\n\t\n\tfunction rotationLambda(deltaLambda) {\n\t  var rotation = forwardRotationLambda(deltaLambda);\n\t  rotation.invert = forwardRotationLambda(-deltaLambda);\n\t  return rotation;\n\t}\n\t\n\tfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n\t  var cosDeltaPhi = cos$1(deltaPhi),\n\t      sinDeltaPhi = sin$1(deltaPhi),\n\t      cosDeltaGamma = cos$1(deltaGamma),\n\t      sinDeltaGamma = sin$1(deltaGamma);\n\t\n\t  function rotation(lambda, phi) {\n\t    var cosPhi = cos$1(phi),\n\t        x = cos$1(lambda) * cosPhi,\n\t        y = sin$1(lambda) * cosPhi,\n\t        z = sin$1(phi),\n\t        k = z * cosDeltaPhi + x * sinDeltaPhi;\n\t    return [\n\t      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n\t      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n\t    ];\n\t  }\n\t\n\t  rotation.invert = function(lambda, phi) {\n\t    var cosPhi = cos$1(phi),\n\t        x = cos$1(lambda) * cosPhi,\n\t        y = sin$1(lambda) * cosPhi,\n\t        z = sin$1(phi),\n\t        k = z * cosDeltaGamma - y * sinDeltaGamma;\n\t    return [\n\t      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n\t      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n\t    ];\n\t  };\n\t\n\t  return rotation;\n\t}\n\t\n\tvar rotation = function(rotate) {\n\t  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\t\n\t  function forward(coordinates) {\n\t    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n\t    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n\t  }\n\t\n\t  forward.invert = function(coordinates) {\n\t    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n\t    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n\t  };\n\t\n\t  return forward;\n\t};\n\t\n\t// Generates a circle centered at [0°, 0°], with a given radius and precision.\n\tfunction circleStream(stream, radius, delta, direction, t0, t1) {\n\t  if (!delta) return;\n\t  var cosRadius = cos$1(radius),\n\t      sinRadius = sin$1(radius),\n\t      step = direction * delta;\n\t  if (t0 == null) {\n\t    t0 = radius + direction * tau$3;\n\t    t1 = radius - step / 2;\n\t  } else {\n\t    t0 = circleRadius(cosRadius, t0);\n\t    t1 = circleRadius(cosRadius, t1);\n\t    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau$3;\n\t  }\n\t  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n\t    point = spherical([cosRadius, -sinRadius * cos$1(t), -sinRadius * sin$1(t)]);\n\t    stream.point(point[0], point[1]);\n\t  }\n\t}\n\t\n\t// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\n\tfunction circleRadius(cosRadius, point) {\n\t  point = cartesian(point), point[0] -= cosRadius;\n\t  cartesianNormalizeInPlace(point);\n\t  var radius = acos(-point[1]);\n\t  return ((-point[2] < 0 ? -radius : radius) + tau$3 - epsilon$2) % tau$3;\n\t}\n\t\n\tvar circle = function() {\n\t  var center = constant$7([0, 0]),\n\t      radius = constant$7(90),\n\t      precision = constant$7(6),\n\t      ring,\n\t      rotate,\n\t      stream = {point: point};\n\t\n\t  function point(x, y) {\n\t    ring.push(x = rotate(x, y));\n\t    x[0] *= degrees$1, x[1] *= degrees$1;\n\t  }\n\t\n\t  function circle() {\n\t    var c = center.apply(this, arguments),\n\t        r = radius.apply(this, arguments) * radians,\n\t        p = precision.apply(this, arguments) * radians;\n\t    ring = [];\n\t    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n\t    circleStream(stream, r, p, 1);\n\t    c = {type: \"Polygon\", coordinates: [ring]};\n\t    ring = rotate = null;\n\t    return c;\n\t  }\n\t\n\t  circle.center = function(_) {\n\t    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant$7([+_[0], +_[1]]), circle) : center;\n\t  };\n\t\n\t  circle.radius = function(_) {\n\t    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$7(+_), circle) : radius;\n\t  };\n\t\n\t  circle.precision = function(_) {\n\t    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant$7(+_), circle) : precision;\n\t  };\n\t\n\t  return circle;\n\t};\n\t\n\tvar clipBuffer = function() {\n\t  var lines = [],\n\t      line;\n\t  return {\n\t    point: function(x, y) {\n\t      line.push([x, y]);\n\t    },\n\t    lineStart: function() {\n\t      lines.push(line = []);\n\t    },\n\t    lineEnd: noop$1,\n\t    rejoin: function() {\n\t      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n\t    },\n\t    result: function() {\n\t      var result = lines;\n\t      lines = [];\n\t      line = null;\n\t      return result;\n\t    }\n\t  };\n\t};\n\t\n\tvar clipLine = function(a, b, x0, y0, x1, y1) {\n\t  var ax = a[0],\n\t      ay = a[1],\n\t      bx = b[0],\n\t      by = b[1],\n\t      t0 = 0,\n\t      t1 = 1,\n\t      dx = bx - ax,\n\t      dy = by - ay,\n\t      r;\n\t\n\t  r = x0 - ax;\n\t  if (!dx && r > 0) return;\n\t  r /= dx;\n\t  if (dx < 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  } else if (dx > 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  }\n\t\n\t  r = x1 - ax;\n\t  if (!dx && r < 0) return;\n\t  r /= dx;\n\t  if (dx < 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  } else if (dx > 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  }\n\t\n\t  r = y0 - ay;\n\t  if (!dy && r > 0) return;\n\t  r /= dy;\n\t  if (dy < 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  } else if (dy > 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  }\n\t\n\t  r = y1 - ay;\n\t  if (!dy && r < 0) return;\n\t  r /= dy;\n\t  if (dy < 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  } else if (dy > 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  }\n\t\n\t  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n\t  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n\t  return true;\n\t};\n\t\n\tvar pointEqual = function(a, b) {\n\t  return abs(a[0] - b[0]) < epsilon$2 && abs(a[1] - b[1]) < epsilon$2;\n\t};\n\t\n\tfunction Intersection(point, points, other, entry) {\n\t  this.x = point;\n\t  this.z = points;\n\t  this.o = other; // another intersection\n\t  this.e = entry; // is an entry?\n\t  this.v = false; // visited\n\t  this.n = this.p = null; // next & previous\n\t}\n\t\n\t// A generalized polygon clipping algorithm: given a polygon that has been cut\n\t// into its visible line segments, and rejoins the segments by interpolating\n\t// along the clip edge.\n\tvar clipPolygon = function(segments, compareIntersection, startInside, interpolate, stream) {\n\t  var subject = [],\n\t      clip = [],\n\t      i,\n\t      n;\n\t\n\t  segments.forEach(function(segment) {\n\t    if ((n = segment.length - 1) <= 0) return;\n\t    var n, p0 = segment[0], p1 = segment[n], x;\n\t\n\t    // If the first and last points of a segment are coincident, then treat as a\n\t    // closed ring. TODO if all rings are closed, then the winding order of the\n\t    // exterior ring should be checked.\n\t    if (pointEqual(p0, p1)) {\n\t      stream.lineStart();\n\t      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n\t      stream.lineEnd();\n\t      return;\n\t    }\n\t\n\t    subject.push(x = new Intersection(p0, segment, null, true));\n\t    clip.push(x.o = new Intersection(p0, null, x, false));\n\t    subject.push(x = new Intersection(p1, segment, null, false));\n\t    clip.push(x.o = new Intersection(p1, null, x, true));\n\t  });\n\t\n\t  if (!subject.length) return;\n\t\n\t  clip.sort(compareIntersection);\n\t  link$1(subject);\n\t  link$1(clip);\n\t\n\t  for (i = 0, n = clip.length; i < n; ++i) {\n\t    clip[i].e = startInside = !startInside;\n\t  }\n\t\n\t  var start = subject[0],\n\t      points,\n\t      point;\n\t\n\t  while (1) {\n\t    // Find first unvisited intersection.\n\t    var current = start,\n\t        isSubject = true;\n\t    while (current.v) if ((current = current.n) === start) return;\n\t    points = current.z;\n\t    stream.lineStart();\n\t    do {\n\t      current.v = current.o.v = true;\n\t      if (current.e) {\n\t        if (isSubject) {\n\t          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n\t        } else {\n\t          interpolate(current.x, current.n.x, 1, stream);\n\t        }\n\t        current = current.n;\n\t      } else {\n\t        if (isSubject) {\n\t          points = current.p.z;\n\t          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n\t        } else {\n\t          interpolate(current.x, current.p.x, -1, stream);\n\t        }\n\t        current = current.p;\n\t      }\n\t      current = current.o;\n\t      points = current.z;\n\t      isSubject = !isSubject;\n\t    } while (!current.v);\n\t    stream.lineEnd();\n\t  }\n\t};\n\t\n\tfunction link$1(array) {\n\t  if (!(n = array.length)) return;\n\t  var n,\n\t      i = 0,\n\t      a = array[0],\n\t      b;\n\t  while (++i < n) {\n\t    a.n = b = array[i];\n\t    b.p = a;\n\t    a = b;\n\t  }\n\t  a.n = b = array[0];\n\t  b.p = a;\n\t}\n\t\n\tvar clipMax = 1e9;\n\tvar clipMin = -clipMax;\n\t\n\t// TODO Use d3-polygon’s polygonContains here for the ring check?\n\t// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\t\n\tfunction clipExtent(x0, y0, x1, y1) {\n\t\n\t  function visible(x, y) {\n\t    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n\t  }\n\t\n\t  function interpolate(from, to, direction, stream) {\n\t    var a = 0, a1 = 0;\n\t    if (from == null\n\t        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n\t        || comparePoint(from, to) < 0 ^ direction > 0) {\n\t      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n\t      while ((a = (a + direction + 4) % 4) !== a1);\n\t    } else {\n\t      stream.point(to[0], to[1]);\n\t    }\n\t  }\n\t\n\t  function corner(p, direction) {\n\t    return abs(p[0] - x0) < epsilon$2 ? direction > 0 ? 0 : 3\n\t        : abs(p[0] - x1) < epsilon$2 ? direction > 0 ? 2 : 1\n\t        : abs(p[1] - y0) < epsilon$2 ? direction > 0 ? 1 : 0\n\t        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n\t  }\n\t\n\t  function compareIntersection(a, b) {\n\t    return comparePoint(a.x, b.x);\n\t  }\n\t\n\t  function comparePoint(a, b) {\n\t    var ca = corner(a, 1),\n\t        cb = corner(b, 1);\n\t    return ca !== cb ? ca - cb\n\t        : ca === 0 ? b[1] - a[1]\n\t        : ca === 1 ? a[0] - b[0]\n\t        : ca === 2 ? a[1] - b[1]\n\t        : b[0] - a[0];\n\t  }\n\t\n\t  return function(stream) {\n\t    var activeStream = stream,\n\t        bufferStream = clipBuffer(),\n\t        segments,\n\t        polygon,\n\t        ring,\n\t        x__, y__, v__, // first point\n\t        x_, y_, v_, // previous point\n\t        first,\n\t        clean;\n\t\n\t    var clipStream = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: polygonStart,\n\t      polygonEnd: polygonEnd\n\t    };\n\t\n\t    function point(x, y) {\n\t      if (visible(x, y)) activeStream.point(x, y);\n\t    }\n\t\n\t    function polygonInside() {\n\t      var winding = 0;\n\t\n\t      for (var i = 0, n = polygon.length; i < n; ++i) {\n\t        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n\t          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n\t          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n\t          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n\t        }\n\t      }\n\t\n\t      return winding;\n\t    }\n\t\n\t    // Buffer geometry within a polygon and then clip it en masse.\n\t    function polygonStart() {\n\t      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n\t    }\n\t\n\t    function polygonEnd() {\n\t      var startInside = polygonInside(),\n\t          cleanInside = clean && startInside,\n\t          visible = (segments = merge(segments)).length;\n\t      if (cleanInside || visible) {\n\t        stream.polygonStart();\n\t        if (cleanInside) {\n\t          stream.lineStart();\n\t          interpolate(null, null, 1, stream);\n\t          stream.lineEnd();\n\t        }\n\t        if (visible) {\n\t          clipPolygon(segments, compareIntersection, startInside, interpolate, stream);\n\t        }\n\t        stream.polygonEnd();\n\t      }\n\t      activeStream = stream, segments = polygon = ring = null;\n\t    }\n\t\n\t    function lineStart() {\n\t      clipStream.point = linePoint;\n\t      if (polygon) polygon.push(ring = []);\n\t      first = true;\n\t      v_ = false;\n\t      x_ = y_ = NaN;\n\t    }\n\t\n\t    // TODO rather than special-case polygons, simply handle them separately.\n\t    // Ideally, coincident intersection points should be jittered to avoid\n\t    // clipping issues.\n\t    function lineEnd() {\n\t      if (segments) {\n\t        linePoint(x__, y__);\n\t        if (v__ && v_) bufferStream.rejoin();\n\t        segments.push(bufferStream.result());\n\t      }\n\t      clipStream.point = point;\n\t      if (v_) activeStream.lineEnd();\n\t    }\n\t\n\t    function linePoint(x, y) {\n\t      var v = visible(x, y);\n\t      if (polygon) ring.push([x, y]);\n\t      if (first) {\n\t        x__ = x, y__ = y, v__ = v;\n\t        first = false;\n\t        if (v) {\n\t          activeStream.lineStart();\n\t          activeStream.point(x, y);\n\t        }\n\t      } else {\n\t        if (v && v_) activeStream.point(x, y);\n\t        else {\n\t          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n\t              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n\t          if (clipLine(a, b, x0, y0, x1, y1)) {\n\t            if (!v_) {\n\t              activeStream.lineStart();\n\t              activeStream.point(a[0], a[1]);\n\t            }\n\t            activeStream.point(b[0], b[1]);\n\t            if (!v) activeStream.lineEnd();\n\t            clean = false;\n\t          } else if (v) {\n\t            activeStream.lineStart();\n\t            activeStream.point(x, y);\n\t            clean = false;\n\t          }\n\t        }\n\t      }\n\t      x_ = x, y_ = y, v_ = v;\n\t    }\n\t\n\t    return clipStream;\n\t  };\n\t}\n\t\n\tvar extent$1 = function() {\n\t  var x0 = 0,\n\t      y0 = 0,\n\t      x1 = 960,\n\t      y1 = 500,\n\t      cache,\n\t      cacheStream,\n\t      clip;\n\t\n\t  return clip = {\n\t    stream: function(stream) {\n\t      return cache && cacheStream === stream ? cache : cache = clipExtent(x0, y0, x1, y1)(cacheStream = stream);\n\t    },\n\t    extent: function(_) {\n\t      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n\t    }\n\t  };\n\t};\n\t\n\tvar sum$1 = adder();\n\t\n\tvar polygonContains = function(polygon, point) {\n\t  var lambda = point[0],\n\t      phi = point[1],\n\t      normal = [sin$1(lambda), -cos$1(lambda), 0],\n\t      angle = 0,\n\t      winding = 0;\n\t\n\t  sum$1.reset();\n\t\n\t  for (var i = 0, n = polygon.length; i < n; ++i) {\n\t    if (!(m = (ring = polygon[i]).length)) continue;\n\t    var ring,\n\t        m,\n\t        point0 = ring[m - 1],\n\t        lambda0 = point0[0],\n\t        phi0 = point0[1] / 2 + quarterPi,\n\t        sinPhi0 = sin$1(phi0),\n\t        cosPhi0 = cos$1(phi0);\n\t\n\t    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n\t      var point1 = ring[j],\n\t          lambda1 = point1[0],\n\t          phi1 = point1[1] / 2 + quarterPi,\n\t          sinPhi1 = sin$1(phi1),\n\t          cosPhi1 = cos$1(phi1),\n\t          delta = lambda1 - lambda0,\n\t          sign$$1 = delta >= 0 ? 1 : -1,\n\t          absDelta = sign$$1 * delta,\n\t          antimeridian = absDelta > pi$3,\n\t          k = sinPhi0 * sinPhi1;\n\t\n\t      sum$1.add(atan2(k * sign$$1 * sin$1(absDelta), cosPhi0 * cosPhi1 + k * cos$1(absDelta)));\n\t      angle += antimeridian ? delta + sign$$1 * tau$3 : delta;\n\t\n\t      // Are the longitudes either side of the point’s meridian (lambda),\n\t      // and are the latitudes smaller than the parallel (phi)?\n\t      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n\t        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n\t        cartesianNormalizeInPlace(arc);\n\t        var intersection = cartesianCross(normal, arc);\n\t        cartesianNormalizeInPlace(intersection);\n\t        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n\t        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n\t          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  // First, determine whether the South pole is inside or outside:\n\t  //\n\t  // It is inside if:\n\t  // * the polygon winds around it in a clockwise direction.\n\t  // * the polygon does not (cumulatively) wind around it, but has a negative\n\t  //   (counter-clockwise) area.\n\t  //\n\t  // Second, count the (signed) number of times a segment crosses a lambda\n\t  // from the point to the South pole.  If it is zero, then the point is the\n\t  // same side as the South pole.\n\t\n\t  return (angle < -epsilon$2 || angle < epsilon$2 && sum$1 < -epsilon$2) ^ (winding & 1);\n\t};\n\t\n\tvar lengthSum = adder();\n\tvar lambda0$2;\n\tvar sinPhi0$1;\n\tvar cosPhi0$1;\n\t\n\tvar lengthStream = {\n\t  sphere: noop$1,\n\t  point: noop$1,\n\t  lineStart: lengthLineStart,\n\t  lineEnd: noop$1,\n\t  polygonStart: noop$1,\n\t  polygonEnd: noop$1\n\t};\n\t\n\tfunction lengthLineStart() {\n\t  lengthStream.point = lengthPointFirst;\n\t  lengthStream.lineEnd = lengthLineEnd;\n\t}\n\t\n\tfunction lengthLineEnd() {\n\t  lengthStream.point = lengthStream.lineEnd = noop$1;\n\t}\n\t\n\tfunction lengthPointFirst(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  lambda0$2 = lambda, sinPhi0$1 = sin$1(phi), cosPhi0$1 = cos$1(phi);\n\t  lengthStream.point = lengthPoint;\n\t}\n\t\n\tfunction lengthPoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var sinPhi = sin$1(phi),\n\t      cosPhi = cos$1(phi),\n\t      delta = abs(lambda - lambda0$2),\n\t      cosDelta = cos$1(delta),\n\t      sinDelta = sin$1(delta),\n\t      x = cosPhi * sinDelta,\n\t      y = cosPhi0$1 * sinPhi - sinPhi0$1 * cosPhi * cosDelta,\n\t      z = sinPhi0$1 * sinPhi + cosPhi0$1 * cosPhi * cosDelta;\n\t  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n\t  lambda0$2 = lambda, sinPhi0$1 = sinPhi, cosPhi0$1 = cosPhi;\n\t}\n\t\n\tvar length$1 = function(object) {\n\t  lengthSum.reset();\n\t  geoStream(object, lengthStream);\n\t  return +lengthSum;\n\t};\n\t\n\tvar coordinates = [null, null];\n\tvar object$1 = {type: \"LineString\", coordinates: coordinates};\n\t\n\tvar distance = function(a, b) {\n\t  coordinates[0] = a;\n\t  coordinates[1] = b;\n\t  return length$1(object$1);\n\t};\n\t\n\tvar containsObjectType = {\n\t  Feature: function(object, point) {\n\t    return containsGeometry(object.geometry, point);\n\t  },\n\t  FeatureCollection: function(object, point) {\n\t    var features = object.features, i = -1, n = features.length;\n\t    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;\n\t    return false;\n\t  }\n\t};\n\t\n\tvar containsGeometryType = {\n\t  Sphere: function() {\n\t    return true;\n\t  },\n\t  Point: function(object, point) {\n\t    return containsPoint(object.coordinates, point);\n\t  },\n\t  MultiPoint: function(object, point) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) if (containsPoint(coordinates[i], point)) return true;\n\t    return false;\n\t  },\n\t  LineString: function(object, point) {\n\t    return containsLine(object.coordinates, point);\n\t  },\n\t  MultiLineString: function(object, point) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) if (containsLine(coordinates[i], point)) return true;\n\t    return false;\n\t  },\n\t  Polygon: function(object, point) {\n\t    return containsPolygon(object.coordinates, point);\n\t  },\n\t  MultiPolygon: function(object, point) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;\n\t    return false;\n\t  },\n\t  GeometryCollection: function(object, point) {\n\t    var geometries = object.geometries, i = -1, n = geometries.length;\n\t    while (++i < n) if (containsGeometry(geometries[i], point)) return true;\n\t    return false;\n\t  }\n\t};\n\t\n\tfunction containsGeometry(geometry, point) {\n\t  return geometry && containsGeometryType.hasOwnProperty(geometry.type)\n\t      ? containsGeometryType[geometry.type](geometry, point)\n\t      : false;\n\t}\n\t\n\tfunction containsPoint(coordinates, point) {\n\t  return distance(coordinates, point) === 0;\n\t}\n\t\n\tfunction containsLine(coordinates, point) {\n\t  var ab = distance(coordinates[0], coordinates[1]),\n\t      ao = distance(coordinates[0], point),\n\t      ob = distance(point, coordinates[1]);\n\t  return ao + ob <= ab + epsilon$2;\n\t}\n\t\n\tfunction containsPolygon(coordinates, point) {\n\t  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\n\t}\n\t\n\tfunction ringRadians(ring) {\n\t  return ring = ring.map(pointRadians), ring.pop(), ring;\n\t}\n\t\n\tfunction pointRadians(point) {\n\t  return [point[0] * radians, point[1] * radians];\n\t}\n\t\n\tvar contains = function(object, point) {\n\t  return (object && containsObjectType.hasOwnProperty(object.type)\n\t      ? containsObjectType[object.type]\n\t      : containsGeometry)(object, point);\n\t};\n\t\n\tfunction graticuleX(y0, y1, dy) {\n\t  var y = sequence(y0, y1 - epsilon$2, dy).concat(y1);\n\t  return function(x) { return y.map(function(y) { return [x, y]; }); };\n\t}\n\t\n\tfunction graticuleY(x0, x1, dx) {\n\t  var x = sequence(x0, x1 - epsilon$2, dx).concat(x1);\n\t  return function(y) { return x.map(function(x) { return [x, y]; }); };\n\t}\n\t\n\tfunction graticule() {\n\t  var x1, x0, X1, X0,\n\t      y1, y0, Y1, Y0,\n\t      dx = 10, dy = dx, DX = 90, DY = 360,\n\t      x, y, X, Y,\n\t      precision = 2.5;\n\t\n\t  function graticule() {\n\t    return {type: \"MultiLineString\", coordinates: lines()};\n\t  }\n\t\n\t  function lines() {\n\t    return sequence(ceil(X0 / DX) * DX, X1, DX).map(X)\n\t        .concat(sequence(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n\t        .concat(sequence(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon$2; }).map(x))\n\t        .concat(sequence(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon$2; }).map(y));\n\t  }\n\t\n\t  graticule.lines = function() {\n\t    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n\t  };\n\t\n\t  graticule.outline = function() {\n\t    return {\n\t      type: \"Polygon\",\n\t      coordinates: [\n\t        X(X0).concat(\n\t        Y(Y1).slice(1),\n\t        X(X1).reverse().slice(1),\n\t        Y(Y0).reverse().slice(1))\n\t      ]\n\t    };\n\t  };\n\t\n\t  graticule.extent = function(_) {\n\t    if (!arguments.length) return graticule.extentMinor();\n\t    return graticule.extentMajor(_).extentMinor(_);\n\t  };\n\t\n\t  graticule.extentMajor = function(_) {\n\t    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n\t    X0 = +_[0][0], X1 = +_[1][0];\n\t    Y0 = +_[0][1], Y1 = +_[1][1];\n\t    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n\t    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n\t    return graticule.precision(precision);\n\t  };\n\t\n\t  graticule.extentMinor = function(_) {\n\t    if (!arguments.length) return [[x0, y0], [x1, y1]];\n\t    x0 = +_[0][0], x1 = +_[1][0];\n\t    y0 = +_[0][1], y1 = +_[1][1];\n\t    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n\t    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n\t    return graticule.precision(precision);\n\t  };\n\t\n\t  graticule.step = function(_) {\n\t    if (!arguments.length) return graticule.stepMinor();\n\t    return graticule.stepMajor(_).stepMinor(_);\n\t  };\n\t\n\t  graticule.stepMajor = function(_) {\n\t    if (!arguments.length) return [DX, DY];\n\t    DX = +_[0], DY = +_[1];\n\t    return graticule;\n\t  };\n\t\n\t  graticule.stepMinor = function(_) {\n\t    if (!arguments.length) return [dx, dy];\n\t    dx = +_[0], dy = +_[1];\n\t    return graticule;\n\t  };\n\t\n\t  graticule.precision = function(_) {\n\t    if (!arguments.length) return precision;\n\t    precision = +_;\n\t    x = graticuleX(y0, y1, 90);\n\t    y = graticuleY(x0, x1, precision);\n\t    X = graticuleX(Y0, Y1, 90);\n\t    Y = graticuleY(X0, X1, precision);\n\t    return graticule;\n\t  };\n\t\n\t  return graticule\n\t      .extentMajor([[-180, -90 + epsilon$2], [180, 90 - epsilon$2]])\n\t      .extentMinor([[-180, -80 - epsilon$2], [180, 80 + epsilon$2]]);\n\t}\n\t\n\tfunction graticule10() {\n\t  return graticule()();\n\t}\n\t\n\tvar interpolate$1 = function(a, b) {\n\t  var x0 = a[0] * radians,\n\t      y0 = a[1] * radians,\n\t      x1 = b[0] * radians,\n\t      y1 = b[1] * radians,\n\t      cy0 = cos$1(y0),\n\t      sy0 = sin$1(y0),\n\t      cy1 = cos$1(y1),\n\t      sy1 = sin$1(y1),\n\t      kx0 = cy0 * cos$1(x0),\n\t      ky0 = cy0 * sin$1(x0),\n\t      kx1 = cy1 * cos$1(x1),\n\t      ky1 = cy1 * sin$1(x1),\n\t      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n\t      k = sin$1(d);\n\t\n\t  var interpolate = d ? function(t) {\n\t    var B = sin$1(t *= d) / k,\n\t        A = sin$1(d - t) / k,\n\t        x = A * kx0 + B * kx1,\n\t        y = A * ky0 + B * ky1,\n\t        z = A * sy0 + B * sy1;\n\t    return [\n\t      atan2(y, x) * degrees$1,\n\t      atan2(z, sqrt(x * x + y * y)) * degrees$1\n\t    ];\n\t  } : function() {\n\t    return [x0 * degrees$1, y0 * degrees$1];\n\t  };\n\t\n\t  interpolate.distance = d;\n\t\n\t  return interpolate;\n\t};\n\t\n\tvar identity$4 = function(x) {\n\t  return x;\n\t};\n\t\n\tvar areaSum$1 = adder();\n\tvar areaRingSum$1 = adder();\n\tvar x00;\n\tvar y00;\n\tvar x0$1;\n\tvar y0$1;\n\t\n\tvar areaStream$1 = {\n\t  point: noop$1,\n\t  lineStart: noop$1,\n\t  lineEnd: noop$1,\n\t  polygonStart: function() {\n\t    areaStream$1.lineStart = areaRingStart$1;\n\t    areaStream$1.lineEnd = areaRingEnd$1;\n\t  },\n\t  polygonEnd: function() {\n\t    areaStream$1.lineStart = areaStream$1.lineEnd = areaStream$1.point = noop$1;\n\t    areaSum$1.add(abs(areaRingSum$1));\n\t    areaRingSum$1.reset();\n\t  },\n\t  result: function() {\n\t    var area = areaSum$1 / 2;\n\t    areaSum$1.reset();\n\t    return area;\n\t  }\n\t};\n\t\n\tfunction areaRingStart$1() {\n\t  areaStream$1.point = areaPointFirst$1;\n\t}\n\t\n\tfunction areaPointFirst$1(x, y) {\n\t  areaStream$1.point = areaPoint$1;\n\t  x00 = x0$1 = x, y00 = y0$1 = y;\n\t}\n\t\n\tfunction areaPoint$1(x, y) {\n\t  areaRingSum$1.add(y0$1 * x - x0$1 * y);\n\t  x0$1 = x, y0$1 = y;\n\t}\n\t\n\tfunction areaRingEnd$1() {\n\t  areaPoint$1(x00, y00);\n\t}\n\t\n\tvar x0$2 = Infinity;\n\tvar y0$2 = x0$2;\n\tvar x1 = -x0$2;\n\tvar y1 = x1;\n\t\n\tvar boundsStream$1 = {\n\t  point: boundsPoint$1,\n\t  lineStart: noop$1,\n\t  lineEnd: noop$1,\n\t  polygonStart: noop$1,\n\t  polygonEnd: noop$1,\n\t  result: function() {\n\t    var bounds = [[x0$2, y0$2], [x1, y1]];\n\t    x1 = y1 = -(y0$2 = x0$2 = Infinity);\n\t    return bounds;\n\t  }\n\t};\n\t\n\tfunction boundsPoint$1(x, y) {\n\t  if (x < x0$2) x0$2 = x;\n\t  if (x > x1) x1 = x;\n\t  if (y < y0$2) y0$2 = y;\n\t  if (y > y1) y1 = y;\n\t}\n\t\n\t// TODO Enforce positive area for exterior, negative area for interior?\n\t\n\tvar X0$1 = 0;\n\tvar Y0$1 = 0;\n\tvar Z0$1 = 0;\n\tvar X1$1 = 0;\n\tvar Y1$1 = 0;\n\tvar Z1$1 = 0;\n\tvar X2$1 = 0;\n\tvar Y2$1 = 0;\n\tvar Z2$1 = 0;\n\tvar x00$1;\n\tvar y00$1;\n\tvar x0$3;\n\tvar y0$3;\n\t\n\tvar centroidStream$1 = {\n\t  point: centroidPoint$1,\n\t  lineStart: centroidLineStart$1,\n\t  lineEnd: centroidLineEnd$1,\n\t  polygonStart: function() {\n\t    centroidStream$1.lineStart = centroidRingStart$1;\n\t    centroidStream$1.lineEnd = centroidRingEnd$1;\n\t  },\n\t  polygonEnd: function() {\n\t    centroidStream$1.point = centroidPoint$1;\n\t    centroidStream$1.lineStart = centroidLineStart$1;\n\t    centroidStream$1.lineEnd = centroidLineEnd$1;\n\t  },\n\t  result: function() {\n\t    var centroid = Z2$1 ? [X2$1 / Z2$1, Y2$1 / Z2$1]\n\t        : Z1$1 ? [X1$1 / Z1$1, Y1$1 / Z1$1]\n\t        : Z0$1 ? [X0$1 / Z0$1, Y0$1 / Z0$1]\n\t        : [NaN, NaN];\n\t    X0$1 = Y0$1 = Z0$1 =\n\t    X1$1 = Y1$1 = Z1$1 =\n\t    X2$1 = Y2$1 = Z2$1 = 0;\n\t    return centroid;\n\t  }\n\t};\n\t\n\tfunction centroidPoint$1(x, y) {\n\t  X0$1 += x;\n\t  Y0$1 += y;\n\t  ++Z0$1;\n\t}\n\t\n\tfunction centroidLineStart$1() {\n\t  centroidStream$1.point = centroidPointFirstLine;\n\t}\n\t\n\tfunction centroidPointFirstLine(x, y) {\n\t  centroidStream$1.point = centroidPointLine;\n\t  centroidPoint$1(x0$3 = x, y0$3 = y);\n\t}\n\t\n\tfunction centroidPointLine(x, y) {\n\t  var dx = x - x0$3, dy = y - y0$3, z = sqrt(dx * dx + dy * dy);\n\t  X1$1 += z * (x0$3 + x) / 2;\n\t  Y1$1 += z * (y0$3 + y) / 2;\n\t  Z1$1 += z;\n\t  centroidPoint$1(x0$3 = x, y0$3 = y);\n\t}\n\t\n\tfunction centroidLineEnd$1() {\n\t  centroidStream$1.point = centroidPoint$1;\n\t}\n\t\n\tfunction centroidRingStart$1() {\n\t  centroidStream$1.point = centroidPointFirstRing;\n\t}\n\t\n\tfunction centroidRingEnd$1() {\n\t  centroidPointRing(x00$1, y00$1);\n\t}\n\t\n\tfunction centroidPointFirstRing(x, y) {\n\t  centroidStream$1.point = centroidPointRing;\n\t  centroidPoint$1(x00$1 = x0$3 = x, y00$1 = y0$3 = y);\n\t}\n\t\n\tfunction centroidPointRing(x, y) {\n\t  var dx = x - x0$3,\n\t      dy = y - y0$3,\n\t      z = sqrt(dx * dx + dy * dy);\n\t\n\t  X1$1 += z * (x0$3 + x) / 2;\n\t  Y1$1 += z * (y0$3 + y) / 2;\n\t  Z1$1 += z;\n\t\n\t  z = y0$3 * x - x0$3 * y;\n\t  X2$1 += z * (x0$3 + x);\n\t  Y2$1 += z * (y0$3 + y);\n\t  Z2$1 += z * 3;\n\t  centroidPoint$1(x0$3 = x, y0$3 = y);\n\t}\n\t\n\tfunction PathContext(context) {\n\t  this._context = context;\n\t}\n\t\n\tPathContext.prototype = {\n\t  _radius: 4.5,\n\t  pointRadius: function(_) {\n\t    return this._radius = _, this;\n\t  },\n\t  polygonStart: function() {\n\t    this._line = 0;\n\t  },\n\t  polygonEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line === 0) this._context.closePath();\n\t    this._point = NaN;\n\t  },\n\t  point: function(x, y) {\n\t    switch (this._point) {\n\t      case 0: {\n\t        this._context.moveTo(x, y);\n\t        this._point = 1;\n\t        break;\n\t      }\n\t      case 1: {\n\t        this._context.lineTo(x, y);\n\t        break;\n\t      }\n\t      default: {\n\t        this._context.moveTo(x + this._radius, y);\n\t        this._context.arc(x, y, this._radius, 0, tau$3);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  result: noop$1\n\t};\n\t\n\tvar lengthSum$1 = adder();\n\tvar lengthRing;\n\tvar x00$2;\n\tvar y00$2;\n\tvar x0$4;\n\tvar y0$4;\n\t\n\tvar lengthStream$1 = {\n\t  point: noop$1,\n\t  lineStart: function() {\n\t    lengthStream$1.point = lengthPointFirst$1;\n\t  },\n\t  lineEnd: function() {\n\t    if (lengthRing) lengthPoint$1(x00$2, y00$2);\n\t    lengthStream$1.point = noop$1;\n\t  },\n\t  polygonStart: function() {\n\t    lengthRing = true;\n\t  },\n\t  polygonEnd: function() {\n\t    lengthRing = null;\n\t  },\n\t  result: function() {\n\t    var length = +lengthSum$1;\n\t    lengthSum$1.reset();\n\t    return length;\n\t  }\n\t};\n\t\n\tfunction lengthPointFirst$1(x, y) {\n\t  lengthStream$1.point = lengthPoint$1;\n\t  x00$2 = x0$4 = x, y00$2 = y0$4 = y;\n\t}\n\t\n\tfunction lengthPoint$1(x, y) {\n\t  x0$4 -= x, y0$4 -= y;\n\t  lengthSum$1.add(sqrt(x0$4 * x0$4 + y0$4 * y0$4));\n\t  x0$4 = x, y0$4 = y;\n\t}\n\t\n\tfunction PathString() {\n\t  this._string = [];\n\t}\n\t\n\tPathString.prototype = {\n\t  _circle: circle$1(4.5),\n\t  pointRadius: function(_) {\n\t    return this._circle = circle$1(_), this;\n\t  },\n\t  polygonStart: function() {\n\t    this._line = 0;\n\t  },\n\t  polygonEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line === 0) this._string.push(\"Z\");\n\t    this._point = NaN;\n\t  },\n\t  point: function(x, y) {\n\t    switch (this._point) {\n\t      case 0: {\n\t        this._string.push(\"M\", x, \",\", y);\n\t        this._point = 1;\n\t        break;\n\t      }\n\t      case 1: {\n\t        this._string.push(\"L\", x, \",\", y);\n\t        break;\n\t      }\n\t      default: {\n\t        this._string.push(\"M\", x, \",\", y, this._circle);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  result: function() {\n\t    if (this._string.length) {\n\t      var result = this._string.join(\"\");\n\t      this._string = [];\n\t      return result;\n\t    }\n\t  }\n\t};\n\t\n\tfunction circle$1(radius) {\n\t  return \"m0,\" + radius\n\t      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n\t      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n\t      + \"z\";\n\t}\n\t\n\tvar index$1 = function(projection, context) {\n\t  var pointRadius = 4.5,\n\t      projectionStream,\n\t      contextStream;\n\t\n\t  function path(object) {\n\t    if (object) {\n\t      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n\t      geoStream(object, projectionStream(contextStream));\n\t    }\n\t    return contextStream.result();\n\t  }\n\t\n\t  path.area = function(object) {\n\t    geoStream(object, projectionStream(areaStream$1));\n\t    return areaStream$1.result();\n\t  };\n\t\n\t  path.measure = function(object) {\n\t    geoStream(object, projectionStream(lengthStream$1));\n\t    return lengthStream$1.result();\n\t  };\n\t\n\t  path.bounds = function(object) {\n\t    geoStream(object, projectionStream(boundsStream$1));\n\t    return boundsStream$1.result();\n\t  };\n\t\n\t  path.centroid = function(object) {\n\t    geoStream(object, projectionStream(centroidStream$1));\n\t    return centroidStream$1.result();\n\t  };\n\t\n\t  path.projection = function(_) {\n\t    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity$4) : (projection = _).stream, path) : projection;\n\t  };\n\t\n\t  path.context = function(_) {\n\t    if (!arguments.length) return context;\n\t    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n\t    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n\t    return path;\n\t  };\n\t\n\t  path.pointRadius = function(_) {\n\t    if (!arguments.length) return pointRadius;\n\t    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n\t    return path;\n\t  };\n\t\n\t  return path.projection(projection).context(context);\n\t};\n\t\n\tvar clip = function(pointVisible, clipLine, interpolate, start) {\n\t  return function(rotate, sink) {\n\t    var line = clipLine(sink),\n\t        rotatedStart = rotate.invert(start[0], start[1]),\n\t        ringBuffer = clipBuffer(),\n\t        ringSink = clipLine(ringBuffer),\n\t        polygonStarted = false,\n\t        polygon,\n\t        segments,\n\t        ring;\n\t\n\t    var clip = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        clip.point = pointRing;\n\t        clip.lineStart = ringStart;\n\t        clip.lineEnd = ringEnd;\n\t        segments = [];\n\t        polygon = [];\n\t      },\n\t      polygonEnd: function() {\n\t        clip.point = point;\n\t        clip.lineStart = lineStart;\n\t        clip.lineEnd = lineEnd;\n\t        segments = merge(segments);\n\t        var startInside = polygonContains(polygon, rotatedStart);\n\t        if (segments.length) {\n\t          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n\t          clipPolygon(segments, compareIntersection, startInside, interpolate, sink);\n\t        } else if (startInside) {\n\t          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n\t          sink.lineStart();\n\t          interpolate(null, null, 1, sink);\n\t          sink.lineEnd();\n\t        }\n\t        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n\t        segments = polygon = null;\n\t      },\n\t      sphere: function() {\n\t        sink.polygonStart();\n\t        sink.lineStart();\n\t        interpolate(null, null, 1, sink);\n\t        sink.lineEnd();\n\t        sink.polygonEnd();\n\t      }\n\t    };\n\t\n\t    function point(lambda, phi) {\n\t      var point = rotate(lambda, phi);\n\t      if (pointVisible(lambda = point[0], phi = point[1])) sink.point(lambda, phi);\n\t    }\n\t\n\t    function pointLine(lambda, phi) {\n\t      var point = rotate(lambda, phi);\n\t      line.point(point[0], point[1]);\n\t    }\n\t\n\t    function lineStart() {\n\t      clip.point = pointLine;\n\t      line.lineStart();\n\t    }\n\t\n\t    function lineEnd() {\n\t      clip.point = point;\n\t      line.lineEnd();\n\t    }\n\t\n\t    function pointRing(lambda, phi) {\n\t      ring.push([lambda, phi]);\n\t      var point = rotate(lambda, phi);\n\t      ringSink.point(point[0], point[1]);\n\t    }\n\t\n\t    function ringStart() {\n\t      ringSink.lineStart();\n\t      ring = [];\n\t    }\n\t\n\t    function ringEnd() {\n\t      pointRing(ring[0][0], ring[0][1]);\n\t      ringSink.lineEnd();\n\t\n\t      var clean = ringSink.clean(),\n\t          ringSegments = ringBuffer.result(),\n\t          i, n = ringSegments.length, m,\n\t          segment,\n\t          point;\n\t\n\t      ring.pop();\n\t      polygon.push(ring);\n\t      ring = null;\n\t\n\t      if (!n) return;\n\t\n\t      // No intersections.\n\t      if (clean & 1) {\n\t        segment = ringSegments[0];\n\t        if ((m = segment.length - 1) > 0) {\n\t          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n\t          sink.lineStart();\n\t          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n\t          sink.lineEnd();\n\t        }\n\t        return;\n\t      }\n\t\n\t      // Rejoin connected segments.\n\t      // TODO reuse ringBuffer.rejoin()?\n\t      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\t\n\t      segments.push(ringSegments.filter(validSegment));\n\t    }\n\t\n\t    return clip;\n\t  };\n\t};\n\t\n\tfunction validSegment(segment) {\n\t  return segment.length > 1;\n\t}\n\t\n\t// Intersections are sorted along the clip edge. For both antimeridian cutting\n\t// and circle clipping, the same comparison is used.\n\tfunction compareIntersection(a, b) {\n\t  return ((a = a.x)[0] < 0 ? a[1] - halfPi$2 - epsilon$2 : halfPi$2 - a[1])\n\t       - ((b = b.x)[0] < 0 ? b[1] - halfPi$2 - epsilon$2 : halfPi$2 - b[1]);\n\t}\n\t\n\tvar clipAntimeridian = clip(\n\t  function() { return true; },\n\t  clipAntimeridianLine,\n\t  clipAntimeridianInterpolate,\n\t  [-pi$3, -halfPi$2]\n\t);\n\t\n\t// Takes a line and cuts into visible segments. Return values: 0 - there were\n\t// intersections or the line was empty; 1 - no intersections; 2 - there were\n\t// intersections, and the first and last segments should be rejoined.\n\tfunction clipAntimeridianLine(stream) {\n\t  var lambda0 = NaN,\n\t      phi0 = NaN,\n\t      sign0 = NaN,\n\t      clean; // no intersections\n\t\n\t  return {\n\t    lineStart: function() {\n\t      stream.lineStart();\n\t      clean = 1;\n\t    },\n\t    point: function(lambda1, phi1) {\n\t      var sign1 = lambda1 > 0 ? pi$3 : -pi$3,\n\t          delta = abs(lambda1 - lambda0);\n\t      if (abs(delta - pi$3) < epsilon$2) { // line crosses a pole\n\t        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi$2 : -halfPi$2);\n\t        stream.point(sign0, phi0);\n\t        stream.lineEnd();\n\t        stream.lineStart();\n\t        stream.point(sign1, phi0);\n\t        stream.point(lambda1, phi0);\n\t        clean = 0;\n\t      } else if (sign0 !== sign1 && delta >= pi$3) { // line crosses antimeridian\n\t        if (abs(lambda0 - sign0) < epsilon$2) lambda0 -= sign0 * epsilon$2; // handle degeneracies\n\t        if (abs(lambda1 - sign1) < epsilon$2) lambda1 -= sign1 * epsilon$2;\n\t        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n\t        stream.point(sign0, phi0);\n\t        stream.lineEnd();\n\t        stream.lineStart();\n\t        stream.point(sign1, phi0);\n\t        clean = 0;\n\t      }\n\t      stream.point(lambda0 = lambda1, phi0 = phi1);\n\t      sign0 = sign1;\n\t    },\n\t    lineEnd: function() {\n\t      stream.lineEnd();\n\t      lambda0 = phi0 = NaN;\n\t    },\n\t    clean: function() {\n\t      return 2 - clean; // if intersections, rejoin first and last segments\n\t    }\n\t  };\n\t}\n\t\n\tfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n\t  var cosPhi0,\n\t      cosPhi1,\n\t      sinLambda0Lambda1 = sin$1(lambda0 - lambda1);\n\t  return abs(sinLambda0Lambda1) > epsilon$2\n\t      ? atan((sin$1(phi0) * (cosPhi1 = cos$1(phi1)) * sin$1(lambda1)\n\t          - sin$1(phi1) * (cosPhi0 = cos$1(phi0)) * sin$1(lambda0))\n\t          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n\t      : (phi0 + phi1) / 2;\n\t}\n\t\n\tfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n\t  var phi;\n\t  if (from == null) {\n\t    phi = direction * halfPi$2;\n\t    stream.point(-pi$3, phi);\n\t    stream.point(0, phi);\n\t    stream.point(pi$3, phi);\n\t    stream.point(pi$3, 0);\n\t    stream.point(pi$3, -phi);\n\t    stream.point(0, -phi);\n\t    stream.point(-pi$3, -phi);\n\t    stream.point(-pi$3, 0);\n\t    stream.point(-pi$3, phi);\n\t  } else if (abs(from[0] - to[0]) > epsilon$2) {\n\t    var lambda = from[0] < to[0] ? pi$3 : -pi$3;\n\t    phi = direction * lambda / 2;\n\t    stream.point(-lambda, phi);\n\t    stream.point(0, phi);\n\t    stream.point(lambda, phi);\n\t  } else {\n\t    stream.point(to[0], to[1]);\n\t  }\n\t}\n\t\n\tvar clipCircle = function(radius, delta) {\n\t  var cr = cos$1(radius),\n\t      smallRadius = cr > 0,\n\t      notHemisphere = abs(cr) > epsilon$2; // TODO optimise for this common case\n\t\n\t  function interpolate(from, to, direction, stream) {\n\t    circleStream(stream, radius, delta, direction, from, to);\n\t  }\n\t\n\t  function visible(lambda, phi) {\n\t    return cos$1(lambda) * cos$1(phi) > cr;\n\t  }\n\t\n\t  // Takes a line and cuts into visible segments. Return values used for polygon\n\t  // clipping: 0 - there were intersections or the line was empty; 1 - no\n\t  // intersections 2 - there were intersections, and the first and last segments\n\t  // should be rejoined.\n\t  function clipLine(stream) {\n\t    var point0, // previous point\n\t        c0, // code for previous point\n\t        v0, // visibility of previous point\n\t        v00, // visibility of first point\n\t        clean; // no intersections\n\t    return {\n\t      lineStart: function() {\n\t        v00 = v0 = false;\n\t        clean = 1;\n\t      },\n\t      point: function(lambda, phi) {\n\t        var point1 = [lambda, phi],\n\t            point2,\n\t            v = visible(lambda, phi),\n\t            c = smallRadius\n\t              ? v ? 0 : code(lambda, phi)\n\t              : v ? code(lambda + (lambda < 0 ? pi$3 : -pi$3), phi) : 0;\n\t        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n\t        // Handle degeneracies.\n\t        // TODO ignore if not clipping polygons.\n\t        if (v !== v0) {\n\t          point2 = intersect(point0, point1);\n\t          if (pointEqual(point0, point2) || pointEqual(point1, point2)) {\n\t            point1[0] += epsilon$2;\n\t            point1[1] += epsilon$2;\n\t            v = visible(point1[0], point1[1]);\n\t          }\n\t        }\n\t        if (v !== v0) {\n\t          clean = 0;\n\t          if (v) {\n\t            // outside going in\n\t            stream.lineStart();\n\t            point2 = intersect(point1, point0);\n\t            stream.point(point2[0], point2[1]);\n\t          } else {\n\t            // inside going out\n\t            point2 = intersect(point0, point1);\n\t            stream.point(point2[0], point2[1]);\n\t            stream.lineEnd();\n\t          }\n\t          point0 = point2;\n\t        } else if (notHemisphere && point0 && smallRadius ^ v) {\n\t          var t;\n\t          // If the codes for two points are different, or are both zero,\n\t          // and there this segment intersects with the small circle.\n\t          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n\t            clean = 0;\n\t            if (smallRadius) {\n\t              stream.lineStart();\n\t              stream.point(t[0][0], t[0][1]);\n\t              stream.point(t[1][0], t[1][1]);\n\t              stream.lineEnd();\n\t            } else {\n\t              stream.point(t[1][0], t[1][1]);\n\t              stream.lineEnd();\n\t              stream.lineStart();\n\t              stream.point(t[0][0], t[0][1]);\n\t            }\n\t          }\n\t        }\n\t        if (v && (!point0 || !pointEqual(point0, point1))) {\n\t          stream.point(point1[0], point1[1]);\n\t        }\n\t        point0 = point1, v0 = v, c0 = c;\n\t      },\n\t      lineEnd: function() {\n\t        if (v0) stream.lineEnd();\n\t        point0 = null;\n\t      },\n\t      // Rejoin first and last segments if there were intersections and the first\n\t      // and last points were visible.\n\t      clean: function() {\n\t        return clean | ((v00 && v0) << 1);\n\t      }\n\t    };\n\t  }\n\t\n\t  // Intersects the great circle between a and b with the clip circle.\n\t  function intersect(a, b, two) {\n\t    var pa = cartesian(a),\n\t        pb = cartesian(b);\n\t\n\t    // We have two planes, n1.p = d1 and n2.p = d2.\n\t    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n\t    var n1 = [1, 0, 0], // normal\n\t        n2 = cartesianCross(pa, pb),\n\t        n2n2 = cartesianDot(n2, n2),\n\t        n1n2 = n2[0], // cartesianDot(n1, n2),\n\t        determinant = n2n2 - n1n2 * n1n2;\n\t\n\t    // Two polar points.\n\t    if (!determinant) return !two && a;\n\t\n\t    var c1 =  cr * n2n2 / determinant,\n\t        c2 = -cr * n1n2 / determinant,\n\t        n1xn2 = cartesianCross(n1, n2),\n\t        A = cartesianScale(n1, c1),\n\t        B = cartesianScale(n2, c2);\n\t    cartesianAddInPlace(A, B);\n\t\n\t    // Solve |p(t)|^2 = 1.\n\t    var u = n1xn2,\n\t        w = cartesianDot(A, u),\n\t        uu = cartesianDot(u, u),\n\t        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\t\n\t    if (t2 < 0) return;\n\t\n\t    var t = sqrt(t2),\n\t        q = cartesianScale(u, (-w - t) / uu);\n\t    cartesianAddInPlace(q, A);\n\t    q = spherical(q);\n\t\n\t    if (!two) return q;\n\t\n\t    // Two intersection points.\n\t    var lambda0 = a[0],\n\t        lambda1 = b[0],\n\t        phi0 = a[1],\n\t        phi1 = b[1],\n\t        z;\n\t\n\t    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\t\n\t    var delta = lambda1 - lambda0,\n\t        polar = abs(delta - pi$3) < epsilon$2,\n\t        meridian = polar || delta < epsilon$2;\n\t\n\t    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\t\n\t    // Check that the first point is between a and b.\n\t    if (meridian\n\t        ? polar\n\t          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon$2 ? phi0 : phi1)\n\t          : phi0 <= q[1] && q[1] <= phi1\n\t        : delta > pi$3 ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n\t      var q1 = cartesianScale(u, (-w + t) / uu);\n\t      cartesianAddInPlace(q1, A);\n\t      return [q, spherical(q1)];\n\t    }\n\t  }\n\t\n\t  // Generates a 4-bit vector representing the location of a point relative to\n\t  // the small circle's bounding box.\n\t  function code(lambda, phi) {\n\t    var r = smallRadius ? radius : pi$3 - radius,\n\t        code = 0;\n\t    if (lambda < -r) code |= 1; // left\n\t    else if (lambda > r) code |= 2; // right\n\t    if (phi < -r) code |= 4; // below\n\t    else if (phi > r) code |= 8; // above\n\t    return code;\n\t  }\n\t\n\t  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi$3, radius - pi$3]);\n\t};\n\t\n\tvar transform = function(methods) {\n\t  return {\n\t    stream: transformer(methods)\n\t  };\n\t};\n\t\n\tfunction transformer(methods) {\n\t  return function(stream) {\n\t    var s = new TransformStream;\n\t    for (var key in methods) s[key] = methods[key];\n\t    s.stream = stream;\n\t    return s;\n\t  };\n\t}\n\t\n\tfunction TransformStream() {}\n\t\n\tTransformStream.prototype = {\n\t  constructor: TransformStream,\n\t  point: function(x, y) { this.stream.point(x, y); },\n\t  sphere: function() { this.stream.sphere(); },\n\t  lineStart: function() { this.stream.lineStart(); },\n\t  lineEnd: function() { this.stream.lineEnd(); },\n\t  polygonStart: function() { this.stream.polygonStart(); },\n\t  polygonEnd: function() { this.stream.polygonEnd(); }\n\t};\n\t\n\tfunction fitExtent(projection, extent, object) {\n\t  var w = extent[1][0] - extent[0][0],\n\t      h = extent[1][1] - extent[0][1],\n\t      clip = projection.clipExtent && projection.clipExtent();\n\t\n\t  projection\n\t      .scale(150)\n\t      .translate([0, 0]);\n\t\n\t  if (clip != null) projection.clipExtent(null);\n\t\n\t  geoStream(object, projection.stream(boundsStream$1));\n\t\n\t  var b = boundsStream$1.result(),\n\t      k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n\t      x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n\t      y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n\t\n\t  if (clip != null) projection.clipExtent(clip);\n\t\n\t  return projection\n\t      .scale(k * 150)\n\t      .translate([x, y]);\n\t}\n\t\n\tfunction fitSize(projection, size, object) {\n\t  return fitExtent(projection, [[0, 0], size], object);\n\t}\n\t\n\tvar maxDepth = 16;\n\tvar cosMinDistance = cos$1(30 * radians); // cos(minimum angular distance)\n\t\n\tvar resample = function(project, delta2) {\n\t  return +delta2 ? resample$1(project, delta2) : resampleNone(project);\n\t};\n\t\n\tfunction resampleNone(project) {\n\t  return transformer({\n\t    point: function(x, y) {\n\t      x = project(x, y);\n\t      this.stream.point(x[0], x[1]);\n\t    }\n\t  });\n\t}\n\t\n\tfunction resample$1(project, delta2) {\n\t\n\t  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n\t    var dx = x1 - x0,\n\t        dy = y1 - y0,\n\t        d2 = dx * dx + dy * dy;\n\t    if (d2 > 4 * delta2 && depth--) {\n\t      var a = a0 + a1,\n\t          b = b0 + b1,\n\t          c = c0 + c1,\n\t          m = sqrt(a * a + b * b + c * c),\n\t          phi2 = asin(c /= m),\n\t          lambda2 = abs(abs(c) - 1) < epsilon$2 || abs(lambda0 - lambda1) < epsilon$2 ? (lambda0 + lambda1) / 2 : atan2(b, a),\n\t          p = project(lambda2, phi2),\n\t          x2 = p[0],\n\t          y2 = p[1],\n\t          dx2 = x2 - x0,\n\t          dy2 = y2 - y0,\n\t          dz = dy * dx2 - dx * dy2;\n\t      if (dz * dz / d2 > delta2 // perpendicular projected distance\n\t          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n\t          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n\t        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n\t        stream.point(x2, y2);\n\t        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n\t      }\n\t    }\n\t  }\n\t  return function(stream) {\n\t    var lambda00, x00, y00, a00, b00, c00, // first point\n\t        lambda0, x0, y0, a0, b0, c0; // previous point\n\t\n\t    var resampleStream = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n\t      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n\t    };\n\t\n\t    function point(x, y) {\n\t      x = project(x, y);\n\t      stream.point(x[0], x[1]);\n\t    }\n\t\n\t    function lineStart() {\n\t      x0 = NaN;\n\t      resampleStream.point = linePoint;\n\t      stream.lineStart();\n\t    }\n\t\n\t    function linePoint(lambda, phi) {\n\t      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n\t      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n\t      stream.point(x0, y0);\n\t    }\n\t\n\t    function lineEnd() {\n\t      resampleStream.point = point;\n\t      stream.lineEnd();\n\t    }\n\t\n\t    function ringStart() {\n\t      lineStart();\n\t      resampleStream.point = ringPoint;\n\t      resampleStream.lineEnd = ringEnd;\n\t    }\n\t\n\t    function ringPoint(lambda, phi) {\n\t      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n\t      resampleStream.point = linePoint;\n\t    }\n\t\n\t    function ringEnd() {\n\t      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n\t      resampleStream.lineEnd = lineEnd;\n\t      lineEnd();\n\t    }\n\t\n\t    return resampleStream;\n\t  };\n\t}\n\t\n\tvar transformRadians = transformer({\n\t  point: function(x, y) {\n\t    this.stream.point(x * radians, y * radians);\n\t  }\n\t});\n\t\n\tfunction projection(project) {\n\t  return projectionMutator(function() { return project; })();\n\t}\n\t\n\tfunction projectionMutator(projectAt) {\n\t  var project,\n\t      k = 150, // scale\n\t      x = 480, y = 250, // translate\n\t      dx, dy, lambda = 0, phi = 0, // center\n\t      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, projectRotate, // rotate\n\t      theta = null, preclip = clipAntimeridian, // clip angle\n\t      x0 = null, y0, x1, y1, postclip = identity$4, // clip extent\n\t      delta2 = 0.5, projectResample = resample(projectTransform, delta2), // precision\n\t      cache,\n\t      cacheStream;\n\t\n\t  function projection(point) {\n\t    point = projectRotate(point[0] * radians, point[1] * radians);\n\t    return [point[0] * k + dx, dy - point[1] * k];\n\t  }\n\t\n\t  function invert(point) {\n\t    point = projectRotate.invert((point[0] - dx) / k, (dy - point[1]) / k);\n\t    return point && [point[0] * degrees$1, point[1] * degrees$1];\n\t  }\n\t\n\t  function projectTransform(x, y) {\n\t    return x = project(x, y), [x[0] * k + dx, dy - x[1] * k];\n\t  }\n\t\n\t  projection.stream = function(stream) {\n\t    return cache && cacheStream === stream ? cache : cache = transformRadians(preclip(rotate, projectResample(postclip(cacheStream = stream))));\n\t  };\n\t\n\t  projection.clipAngle = function(_) {\n\t    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians, 6 * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees$1;\n\t  };\n\t\n\t  projection.clipExtent = function(_) {\n\t    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$4) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n\t  };\n\t\n\t  projection.scale = function(_) {\n\t    return arguments.length ? (k = +_, recenter()) : k;\n\t  };\n\t\n\t  projection.translate = function(_) {\n\t    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n\t  };\n\t\n\t  projection.center = function(_) {\n\t    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees$1, phi * degrees$1];\n\t  };\n\t\n\t  projection.rotate = function(_) {\n\t    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees$1, deltaPhi * degrees$1, deltaGamma * degrees$1];\n\t  };\n\t\n\t  projection.precision = function(_) {\n\t    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n\t  };\n\t\n\t  projection.fitExtent = function(extent, object) {\n\t    return fitExtent(projection, extent, object);\n\t  };\n\t\n\t  projection.fitSize = function(size, object) {\n\t    return fitSize(projection, size, object);\n\t  };\n\t\n\t  function recenter() {\n\t    projectRotate = compose(rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma), project);\n\t    var center = project(lambda, phi);\n\t    dx = x - center[0] * k;\n\t    dy = y + center[1] * k;\n\t    return reset();\n\t  }\n\t\n\t  function reset() {\n\t    cache = cacheStream = null;\n\t    return projection;\n\t  }\n\t\n\t  return function() {\n\t    project = projectAt.apply(this, arguments);\n\t    projection.invert = project.invert && invert;\n\t    return recenter();\n\t  };\n\t}\n\t\n\tfunction conicProjection(projectAt) {\n\t  var phi0 = 0,\n\t      phi1 = pi$3 / 3,\n\t      m = projectionMutator(projectAt),\n\t      p = m(phi0, phi1);\n\t\n\t  p.parallels = function(_) {\n\t    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees$1, phi1 * degrees$1];\n\t  };\n\t\n\t  return p;\n\t}\n\t\n\tfunction cylindricalEqualAreaRaw(phi0) {\n\t  var cosPhi0 = cos$1(phi0);\n\t\n\t  function forward(lambda, phi) {\n\t    return [lambda * cosPhi0, sin$1(phi) / cosPhi0];\n\t  }\n\t\n\t  forward.invert = function(x, y) {\n\t    return [x / cosPhi0, asin(y * cosPhi0)];\n\t  };\n\t\n\t  return forward;\n\t}\n\t\n\tfunction conicEqualAreaRaw(y0, y1) {\n\t  var sy0 = sin$1(y0), n = (sy0 + sin$1(y1)) / 2;\n\t\n\t  // Are the parallels symmetrical around the Equator?\n\t  if (abs(n) < epsilon$2) return cylindricalEqualAreaRaw(y0);\n\t\n\t  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;\n\t\n\t  function project(x, y) {\n\t    var r = sqrt(c - 2 * n * sin$1(y)) / n;\n\t    return [r * sin$1(x *= n), r0 - r * cos$1(x)];\n\t  }\n\t\n\t  project.invert = function(x, y) {\n\t    var r0y = r0 - y;\n\t    return [atan2(x, abs(r0y)) / n * sign(r0y), asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n\t  };\n\t\n\t  return project;\n\t}\n\t\n\tvar conicEqualArea = function() {\n\t  return conicProjection(conicEqualAreaRaw)\n\t      .scale(155.424)\n\t      .center([0, 33.6442]);\n\t};\n\t\n\tvar albers = function() {\n\t  return conicEqualArea()\n\t      .parallels([29.5, 45.5])\n\t      .scale(1070)\n\t      .translate([480, 250])\n\t      .rotate([96, 0])\n\t      .center([-0.6, 38.7]);\n\t};\n\t\n\t// The projections must have mutually exclusive clip regions on the sphere,\n\t// as this will avoid emitting interleaving lines and polygons.\n\tfunction multiplex(streams) {\n\t  var n = streams.length;\n\t  return {\n\t    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n\t    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n\t    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n\t    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n\t    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n\t    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n\t  };\n\t}\n\t\n\t// A composite projection for the United States, configured by default for\n\t// 960×500. The projection also works quite well at 960×600 if you change the\n\t// scale to 1285 and adjust the translate accordingly. The set of standard\n\t// parallels for each region comes from USGS, which is published here:\n\t// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\n\tvar albersUsa = function() {\n\t  var cache,\n\t      cacheStream,\n\t      lower48 = albers(), lower48Point,\n\t      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n\t      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n\t      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\t\n\t  function albersUsa(coordinates) {\n\t    var x = coordinates[0], y = coordinates[1];\n\t    return point = null,\n\t        (lower48Point.point(x, y), point)\n\t        || (alaskaPoint.point(x, y), point)\n\t        || (hawaiiPoint.point(x, y), point);\n\t  }\n\t\n\t  albersUsa.invert = function(coordinates) {\n\t    var k = lower48.scale(),\n\t        t = lower48.translate(),\n\t        x = (coordinates[0] - t[0]) / k,\n\t        y = (coordinates[1] - t[1]) / k;\n\t    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n\t        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n\t        : lower48).invert(coordinates);\n\t  };\n\t\n\t  albersUsa.stream = function(stream) {\n\t    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n\t  };\n\t\n\t  albersUsa.precision = function(_) {\n\t    if (!arguments.length) return lower48.precision();\n\t    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n\t    return reset();\n\t  };\n\t\n\t  albersUsa.scale = function(_) {\n\t    if (!arguments.length) return lower48.scale();\n\t    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n\t    return albersUsa.translate(lower48.translate());\n\t  };\n\t\n\t  albersUsa.translate = function(_) {\n\t    if (!arguments.length) return lower48.translate();\n\t    var k = lower48.scale(), x = +_[0], y = +_[1];\n\t\n\t    lower48Point = lower48\n\t        .translate(_)\n\t        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n\t        .stream(pointStream);\n\t\n\t    alaskaPoint = alaska\n\t        .translate([x - 0.307 * k, y + 0.201 * k])\n\t        .clipExtent([[x - 0.425 * k + epsilon$2, y + 0.120 * k + epsilon$2], [x - 0.214 * k - epsilon$2, y + 0.234 * k - epsilon$2]])\n\t        .stream(pointStream);\n\t\n\t    hawaiiPoint = hawaii\n\t        .translate([x - 0.205 * k, y + 0.212 * k])\n\t        .clipExtent([[x - 0.214 * k + epsilon$2, y + 0.166 * k + epsilon$2], [x - 0.115 * k - epsilon$2, y + 0.234 * k - epsilon$2]])\n\t        .stream(pointStream);\n\t\n\t    return reset();\n\t  };\n\t\n\t  albersUsa.fitExtent = function(extent, object) {\n\t    return fitExtent(albersUsa, extent, object);\n\t  };\n\t\n\t  albersUsa.fitSize = function(size, object) {\n\t    return fitSize(albersUsa, size, object);\n\t  };\n\t\n\t  function reset() {\n\t    cache = cacheStream = null;\n\t    return albersUsa;\n\t  }\n\t\n\t  return albersUsa.scale(1070);\n\t};\n\t\n\tfunction azimuthalRaw(scale) {\n\t  return function(x, y) {\n\t    var cx = cos$1(x),\n\t        cy = cos$1(y),\n\t        k = scale(cx * cy);\n\t    return [\n\t      k * cy * sin$1(x),\n\t      k * sin$1(y)\n\t    ];\n\t  }\n\t}\n\t\n\tfunction azimuthalInvert(angle) {\n\t  return function(x, y) {\n\t    var z = sqrt(x * x + y * y),\n\t        c = angle(z),\n\t        sc = sin$1(c),\n\t        cc = cos$1(c);\n\t    return [\n\t      atan2(x * sc, z * cc),\n\t      asin(z && y * sc / z)\n\t    ];\n\t  }\n\t}\n\t\n\tvar azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n\t  return sqrt(2 / (1 + cxcy));\n\t});\n\t\n\tazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n\t  return 2 * asin(z / 2);\n\t});\n\t\n\tvar azimuthalEqualArea = function() {\n\t  return projection(azimuthalEqualAreaRaw)\n\t      .scale(124.75)\n\t      .clipAngle(180 - 1e-3);\n\t};\n\t\n\tvar azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n\t  return (c = acos(c)) && c / sin$1(c);\n\t});\n\t\n\tazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n\t  return z;\n\t});\n\t\n\tvar azimuthalEquidistant = function() {\n\t  return projection(azimuthalEquidistantRaw)\n\t      .scale(79.4188)\n\t      .clipAngle(180 - 1e-3);\n\t};\n\t\n\tfunction mercatorRaw(lambda, phi) {\n\t  return [lambda, log(tan((halfPi$2 + phi) / 2))];\n\t}\n\t\n\tmercatorRaw.invert = function(x, y) {\n\t  return [x, 2 * atan(exp(y)) - halfPi$2];\n\t};\n\t\n\tvar mercator = function() {\n\t  return mercatorProjection(mercatorRaw)\n\t      .scale(961 / tau$3);\n\t};\n\t\n\tfunction mercatorProjection(project) {\n\t  var m = projection(project),\n\t      center = m.center,\n\t      scale = m.scale,\n\t      translate = m.translate,\n\t      clipExtent = m.clipExtent,\n\t      x0 = null, y0, x1, y1; // clip extent\n\t\n\t  m.scale = function(_) {\n\t    return arguments.length ? (scale(_), reclip()) : scale();\n\t  };\n\t\n\t  m.translate = function(_) {\n\t    return arguments.length ? (translate(_), reclip()) : translate();\n\t  };\n\t\n\t  m.center = function(_) {\n\t    return arguments.length ? (center(_), reclip()) : center();\n\t  };\n\t\n\t  m.clipExtent = function(_) {\n\t    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n\t  };\n\t\n\t  function reclip() {\n\t    var k = pi$3 * scale(),\n\t        t = m(rotation(m.rotate()).invert([0, 0]));\n\t    return clipExtent(x0 == null\n\t        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\n\t        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\n\t        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n\t  }\n\t\n\t  return reclip();\n\t}\n\t\n\tfunction tany(y) {\n\t  return tan((halfPi$2 + y) / 2);\n\t}\n\t\n\tfunction conicConformalRaw(y0, y1) {\n\t  var cy0 = cos$1(y0),\n\t      n = y0 === y1 ? sin$1(y0) : log(cy0 / cos$1(y1)) / log(tany(y1) / tany(y0)),\n\t      f = cy0 * pow(tany(y0), n) / n;\n\t\n\t  if (!n) return mercatorRaw;\n\t\n\t  function project(x, y) {\n\t    if (f > 0) { if (y < -halfPi$2 + epsilon$2) y = -halfPi$2 + epsilon$2; }\n\t    else { if (y > halfPi$2 - epsilon$2) y = halfPi$2 - epsilon$2; }\n\t    var r = f / pow(tany(y), n);\n\t    return [r * sin$1(n * x), f - r * cos$1(n * x)];\n\t  }\n\t\n\t  project.invert = function(x, y) {\n\t    var fy = f - y, r = sign(n) * sqrt(x * x + fy * fy);\n\t    return [atan2(x, abs(fy)) / n * sign(fy), 2 * atan(pow(f / r, 1 / n)) - halfPi$2];\n\t  };\n\t\n\t  return project;\n\t}\n\t\n\tvar conicConformal = function() {\n\t  return conicProjection(conicConformalRaw)\n\t      .scale(109.5)\n\t      .parallels([30, 30]);\n\t};\n\t\n\tfunction equirectangularRaw(lambda, phi) {\n\t  return [lambda, phi];\n\t}\n\t\n\tequirectangularRaw.invert = equirectangularRaw;\n\t\n\tvar equirectangular = function() {\n\t  return projection(equirectangularRaw)\n\t      .scale(152.63);\n\t};\n\t\n\tfunction conicEquidistantRaw(y0, y1) {\n\t  var cy0 = cos$1(y0),\n\t      n = y0 === y1 ? sin$1(y0) : (cy0 - cos$1(y1)) / (y1 - y0),\n\t      g = cy0 / n + y0;\n\t\n\t  if (abs(n) < epsilon$2) return equirectangularRaw;\n\t\n\t  function project(x, y) {\n\t    var gy = g - y, nx = n * x;\n\t    return [gy * sin$1(nx), g - gy * cos$1(nx)];\n\t  }\n\t\n\t  project.invert = function(x, y) {\n\t    var gy = g - y;\n\t    return [atan2(x, abs(gy)) / n * sign(gy), g - sign(n) * sqrt(x * x + gy * gy)];\n\t  };\n\t\n\t  return project;\n\t}\n\t\n\tvar conicEquidistant = function() {\n\t  return conicProjection(conicEquidistantRaw)\n\t      .scale(131.154)\n\t      .center([0, 13.9389]);\n\t};\n\t\n\tfunction gnomonicRaw(x, y) {\n\t  var cy = cos$1(y), k = cos$1(x) * cy;\n\t  return [cy * sin$1(x) / k, sin$1(y) / k];\n\t}\n\t\n\tgnomonicRaw.invert = azimuthalInvert(atan);\n\t\n\tvar gnomonic = function() {\n\t  return projection(gnomonicRaw)\n\t      .scale(144.049)\n\t      .clipAngle(60);\n\t};\n\t\n\tfunction scaleTranslate(kx, ky, tx, ty) {\n\t  return kx === 1 && ky === 1 && tx === 0 && ty === 0 ? identity$4 : transformer({\n\t    point: function(x, y) {\n\t      this.stream.point(x * kx + tx, y * ky + ty);\n\t    }\n\t  });\n\t}\n\t\n\tvar identity$5 = function() {\n\t  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, transform = identity$4, // scale, translate and reflect\n\t      x0 = null, y0, x1, y1, clip = identity$4, // clip extent\n\t      cache,\n\t      cacheStream,\n\t      projection;\n\t\n\t  function reset() {\n\t    cache = cacheStream = null;\n\t    return projection;\n\t  }\n\t\n\t  return projection = {\n\t    stream: function(stream) {\n\t      return cache && cacheStream === stream ? cache : cache = transform(clip(cacheStream = stream));\n\t    },\n\t    clipExtent: function(_) {\n\t      return arguments.length ? (clip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$4) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n\t    },\n\t    scale: function(_) {\n\t      return arguments.length ? (transform = scaleTranslate((k = +_) * sx, k * sy, tx, ty), reset()) : k;\n\t    },\n\t    translate: function(_) {\n\t      return arguments.length ? (transform = scaleTranslate(k * sx, k * sy, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];\n\t    },\n\t    reflectX: function(_) {\n\t      return arguments.length ? (transform = scaleTranslate(k * (sx = _ ? -1 : 1), k * sy, tx, ty), reset()) : sx < 0;\n\t    },\n\t    reflectY: function(_) {\n\t      return arguments.length ? (transform = scaleTranslate(k * sx, k * (sy = _ ? -1 : 1), tx, ty), reset()) : sy < 0;\n\t    },\n\t    fitExtent: function(extent, object) {\n\t      return fitExtent(projection, extent, object);\n\t    },\n\t    fitSize: function(size, object) {\n\t      return fitSize(projection, size, object);\n\t    }\n\t  };\n\t};\n\t\n\tfunction orthographicRaw(x, y) {\n\t  return [cos$1(y) * sin$1(x), sin$1(y)];\n\t}\n\t\n\torthographicRaw.invert = azimuthalInvert(asin);\n\t\n\tvar orthographic = function() {\n\t  return projection(orthographicRaw)\n\t      .scale(249.5)\n\t      .clipAngle(90 + epsilon$2);\n\t};\n\t\n\tfunction stereographicRaw(x, y) {\n\t  var cy = cos$1(y), k = 1 + cos$1(x) * cy;\n\t  return [cy * sin$1(x) / k, sin$1(y) / k];\n\t}\n\t\n\tstereographicRaw.invert = azimuthalInvert(function(z) {\n\t  return 2 * atan(z);\n\t});\n\t\n\tvar stereographic = function() {\n\t  return projection(stereographicRaw)\n\t      .scale(250)\n\t      .clipAngle(142);\n\t};\n\t\n\tfunction transverseMercatorRaw(lambda, phi) {\n\t  return [log(tan((halfPi$2 + phi) / 2)), -lambda];\n\t}\n\t\n\ttransverseMercatorRaw.invert = function(x, y) {\n\t  return [-y, 2 * atan(exp(x)) - halfPi$2];\n\t};\n\t\n\tvar transverseMercator = function() {\n\t  var m = mercatorProjection(transverseMercatorRaw),\n\t      center = m.center,\n\t      rotate = m.rotate;\n\t\n\t  m.center = function(_) {\n\t    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n\t  };\n\t\n\t  m.rotate = function(_) {\n\t    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n\t  };\n\t\n\t  return rotate([0, 0, 90])\n\t      .scale(159.155);\n\t};\n\t\n\tfunction defaultSeparation(a, b) {\n\t  return a.parent === b.parent ? 1 : 2;\n\t}\n\t\n\tfunction meanX(children) {\n\t  return children.reduce(meanXReduce, 0) / children.length;\n\t}\n\t\n\tfunction meanXReduce(x, c) {\n\t  return x + c.x;\n\t}\n\t\n\tfunction maxY(children) {\n\t  return 1 + children.reduce(maxYReduce, 0);\n\t}\n\t\n\tfunction maxYReduce(y, c) {\n\t  return Math.max(y, c.y);\n\t}\n\t\n\tfunction leafLeft(node) {\n\t  var children;\n\t  while (children = node.children) node = children[0];\n\t  return node;\n\t}\n\t\n\tfunction leafRight(node) {\n\t  var children;\n\t  while (children = node.children) node = children[children.length - 1];\n\t  return node;\n\t}\n\t\n\tvar cluster = function() {\n\t  var separation = defaultSeparation,\n\t      dx = 1,\n\t      dy = 1,\n\t      nodeSize = false;\n\t\n\t  function cluster(root) {\n\t    var previousNode,\n\t        x = 0;\n\t\n\t    // First walk, computing the initial x & y values.\n\t    root.eachAfter(function(node) {\n\t      var children = node.children;\n\t      if (children) {\n\t        node.x = meanX(children);\n\t        node.y = maxY(children);\n\t      } else {\n\t        node.x = previousNode ? x += separation(node, previousNode) : 0;\n\t        node.y = 0;\n\t        previousNode = node;\n\t      }\n\t    });\n\t\n\t    var left = leafLeft(root),\n\t        right = leafRight(root),\n\t        x0 = left.x - separation(left, right) / 2,\n\t        x1 = right.x + separation(right, left) / 2;\n\t\n\t    // Second walk, normalizing x & y to the desired size.\n\t    return root.eachAfter(nodeSize ? function(node) {\n\t      node.x = (node.x - root.x) * dx;\n\t      node.y = (root.y - node.y) * dy;\n\t    } : function(node) {\n\t      node.x = (node.x - x0) / (x1 - x0) * dx;\n\t      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n\t    });\n\t  }\n\t\n\t  cluster.separation = function(x) {\n\t    return arguments.length ? (separation = x, cluster) : separation;\n\t  };\n\t\n\t  cluster.size = function(x) {\n\t    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n\t  };\n\t\n\t  cluster.nodeSize = function(x) {\n\t    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n\t  };\n\t\n\t  return cluster;\n\t};\n\t\n\tfunction count(node) {\n\t  var sum = 0,\n\t      children = node.children,\n\t      i = children && children.length;\n\t  if (!i) sum = 1;\n\t  else while (--i >= 0) sum += children[i].value;\n\t  node.value = sum;\n\t}\n\t\n\tvar node_count = function() {\n\t  return this.eachAfter(count);\n\t};\n\t\n\tvar node_each = function(callback) {\n\t  var node = this, current, next = [node], children, i, n;\n\t  do {\n\t    current = next.reverse(), next = [];\n\t    while (node = current.pop()) {\n\t      callback(node), children = node.children;\n\t      if (children) for (i = 0, n = children.length; i < n; ++i) {\n\t        next.push(children[i]);\n\t      }\n\t    }\n\t  } while (next.length);\n\t  return this;\n\t};\n\t\n\tvar node_eachBefore = function(callback) {\n\t  var node = this, nodes = [node], children, i;\n\t  while (node = nodes.pop()) {\n\t    callback(node), children = node.children;\n\t    if (children) for (i = children.length - 1; i >= 0; --i) {\n\t      nodes.push(children[i]);\n\t    }\n\t  }\n\t  return this;\n\t};\n\t\n\tvar node_eachAfter = function(callback) {\n\t  var node = this, nodes = [node], next = [], children, i, n;\n\t  while (node = nodes.pop()) {\n\t    next.push(node), children = node.children;\n\t    if (children) for (i = 0, n = children.length; i < n; ++i) {\n\t      nodes.push(children[i]);\n\t    }\n\t  }\n\t  while (node = next.pop()) {\n\t    callback(node);\n\t  }\n\t  return this;\n\t};\n\t\n\tvar node_sum = function(value) {\n\t  return this.eachAfter(function(node) {\n\t    var sum = +value(node.data) || 0,\n\t        children = node.children,\n\t        i = children && children.length;\n\t    while (--i >= 0) sum += children[i].value;\n\t    node.value = sum;\n\t  });\n\t};\n\t\n\tvar node_sort = function(compare) {\n\t  return this.eachBefore(function(node) {\n\t    if (node.children) {\n\t      node.children.sort(compare);\n\t    }\n\t  });\n\t};\n\t\n\tvar node_path = function(end) {\n\t  var start = this,\n\t      ancestor = leastCommonAncestor(start, end),\n\t      nodes = [start];\n\t  while (start !== ancestor) {\n\t    start = start.parent;\n\t    nodes.push(start);\n\t  }\n\t  var k = nodes.length;\n\t  while (end !== ancestor) {\n\t    nodes.splice(k, 0, end);\n\t    end = end.parent;\n\t  }\n\t  return nodes;\n\t};\n\t\n\tfunction leastCommonAncestor(a, b) {\n\t  if (a === b) return a;\n\t  var aNodes = a.ancestors(),\n\t      bNodes = b.ancestors(),\n\t      c = null;\n\t  a = aNodes.pop();\n\t  b = bNodes.pop();\n\t  while (a === b) {\n\t    c = a;\n\t    a = aNodes.pop();\n\t    b = bNodes.pop();\n\t  }\n\t  return c;\n\t}\n\t\n\tvar node_ancestors = function() {\n\t  var node = this, nodes = [node];\n\t  while (node = node.parent) {\n\t    nodes.push(node);\n\t  }\n\t  return nodes;\n\t};\n\t\n\tvar node_descendants = function() {\n\t  var nodes = [];\n\t  this.each(function(node) {\n\t    nodes.push(node);\n\t  });\n\t  return nodes;\n\t};\n\t\n\tvar node_leaves = function() {\n\t  var leaves = [];\n\t  this.eachBefore(function(node) {\n\t    if (!node.children) {\n\t      leaves.push(node);\n\t    }\n\t  });\n\t  return leaves;\n\t};\n\t\n\tvar node_links = function() {\n\t  var root = this, links = [];\n\t  root.each(function(node) {\n\t    if (node !== root) { // Don’t include the root’s parent, if any.\n\t      links.push({source: node.parent, target: node});\n\t    }\n\t  });\n\t  return links;\n\t};\n\t\n\tfunction hierarchy(data, children) {\n\t  var root = new Node(data),\n\t      valued = +data.value && (root.value = data.value),\n\t      node,\n\t      nodes = [root],\n\t      child,\n\t      childs,\n\t      i,\n\t      n;\n\t\n\t  if (children == null) children = defaultChildren;\n\t\n\t  while (node = nodes.pop()) {\n\t    if (valued) node.value = +node.data.value;\n\t    if ((childs = children(node.data)) && (n = childs.length)) {\n\t      node.children = new Array(n);\n\t      for (i = n - 1; i >= 0; --i) {\n\t        nodes.push(child = node.children[i] = new Node(childs[i]));\n\t        child.parent = node;\n\t        child.depth = node.depth + 1;\n\t      }\n\t    }\n\t  }\n\t\n\t  return root.eachBefore(computeHeight);\n\t}\n\t\n\tfunction node_copy() {\n\t  return hierarchy(this).eachBefore(copyData);\n\t}\n\t\n\tfunction defaultChildren(d) {\n\t  return d.children;\n\t}\n\t\n\tfunction copyData(node) {\n\t  node.data = node.data.data;\n\t}\n\t\n\tfunction computeHeight(node) {\n\t  var height = 0;\n\t  do node.height = height;\n\t  while ((node = node.parent) && (node.height < ++height));\n\t}\n\t\n\tfunction Node(data) {\n\t  this.data = data;\n\t  this.depth =\n\t  this.height = 0;\n\t  this.parent = null;\n\t}\n\t\n\tNode.prototype = hierarchy.prototype = {\n\t  constructor: Node,\n\t  count: node_count,\n\t  each: node_each,\n\t  eachAfter: node_eachAfter,\n\t  eachBefore: node_eachBefore,\n\t  sum: node_sum,\n\t  sort: node_sort,\n\t  path: node_path,\n\t  ancestors: node_ancestors,\n\t  descendants: node_descendants,\n\t  leaves: node_leaves,\n\t  links: node_links,\n\t  copy: node_copy\n\t};\n\t\n\tfunction Node$2(value) {\n\t  this._ = value;\n\t  this.next = null;\n\t}\n\t\n\tvar shuffle$1 = function(array) {\n\t  var i,\n\t      n = (array = array.slice()).length,\n\t      head = null,\n\t      node = head;\n\t\n\t  while (n) {\n\t    var next = new Node$2(array[n - 1]);\n\t    if (node) node = node.next = next;\n\t    else node = head = next;\n\t    array[i] = array[--n];\n\t  }\n\t\n\t  return {\n\t    head: head,\n\t    tail: node\n\t  };\n\t};\n\t\n\tvar enclose = function(circles) {\n\t  return encloseN(shuffle$1(circles), []);\n\t};\n\t\n\tfunction encloses(a, b) {\n\t  var dx = b.x - a.x,\n\t      dy = b.y - a.y,\n\t      dr = a.r - b.r;\n\t  return dr * dr + 1e-6 > dx * dx + dy * dy;\n\t}\n\t\n\t// Returns the smallest circle that contains circles L and intersects circles B.\n\tfunction encloseN(L, B) {\n\t  var circle,\n\t      l0 = null,\n\t      l1 = L.head,\n\t      l2,\n\t      p1;\n\t\n\t  switch (B.length) {\n\t    case 1: circle = enclose1(B[0]); break;\n\t    case 2: circle = enclose2(B[0], B[1]); break;\n\t    case 3: circle = enclose3(B[0], B[1], B[2]); break;\n\t  }\n\t\n\t  while (l1) {\n\t    p1 = l1._, l2 = l1.next;\n\t    if (!circle || !encloses(circle, p1)) {\n\t\n\t      // Temporarily truncate L before l1.\n\t      if (l0) L.tail = l0, l0.next = null;\n\t      else L.head = L.tail = null;\n\t\n\t      B.push(p1);\n\t      circle = encloseN(L, B); // Note: reorders L!\n\t      B.pop();\n\t\n\t      // Move l1 to the front of L and reconnect the truncated list L.\n\t      if (L.head) l1.next = L.head, L.head = l1;\n\t      else l1.next = null, L.head = L.tail = l1;\n\t      l0 = L.tail, l0.next = l2;\n\t\n\t    } else {\n\t      l0 = l1;\n\t    }\n\t    l1 = l2;\n\t  }\n\t\n\t  L.tail = l0;\n\t  return circle;\n\t}\n\t\n\tfunction enclose1(a) {\n\t  return {\n\t    x: a.x,\n\t    y: a.y,\n\t    r: a.r\n\t  };\n\t}\n\t\n\tfunction enclose2(a, b) {\n\t  var x1 = a.x, y1 = a.y, r1 = a.r,\n\t      x2 = b.x, y2 = b.y, r2 = b.r,\n\t      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n\t      l = Math.sqrt(x21 * x21 + y21 * y21);\n\t  return {\n\t    x: (x1 + x2 + x21 / l * r21) / 2,\n\t    y: (y1 + y2 + y21 / l * r21) / 2,\n\t    r: (l + r1 + r2) / 2\n\t  };\n\t}\n\t\n\tfunction enclose3(a, b, c) {\n\t  var x1 = a.x, y1 = a.y, r1 = a.r,\n\t      x2 = b.x, y2 = b.y, r2 = b.r,\n\t      x3 = c.x, y3 = c.y, r3 = c.r,\n\t      a2 = 2 * (x1 - x2),\n\t      b2 = 2 * (y1 - y2),\n\t      c2 = 2 * (r2 - r1),\n\t      d2 = x1 * x1 + y1 * y1 - r1 * r1 - x2 * x2 - y2 * y2 + r2 * r2,\n\t      a3 = 2 * (x1 - x3),\n\t      b3 = 2 * (y1 - y3),\n\t      c3 = 2 * (r3 - r1),\n\t      d3 = x1 * x1 + y1 * y1 - r1 * r1 - x3 * x3 - y3 * y3 + r3 * r3,\n\t      ab = a3 * b2 - a2 * b3,\n\t      xa = (b2 * d3 - b3 * d2) / ab - x1,\n\t      xb = (b3 * c2 - b2 * c3) / ab,\n\t      ya = (a3 * d2 - a2 * d3) / ab - y1,\n\t      yb = (a2 * c3 - a3 * c2) / ab,\n\t      A = xb * xb + yb * yb - 1,\n\t      B = 2 * (xa * xb + ya * yb + r1),\n\t      C = xa * xa + ya * ya - r1 * r1,\n\t      r = (-B - Math.sqrt(B * B - 4 * A * C)) / (2 * A);\n\t  return {\n\t    x: xa + xb * r + x1,\n\t    y: ya + yb * r + y1,\n\t    r: r\n\t  };\n\t}\n\t\n\tfunction place(a, b, c) {\n\t  var ax = a.x,\n\t      ay = a.y,\n\t      da = b.r + c.r,\n\t      db = a.r + c.r,\n\t      dx = b.x - ax,\n\t      dy = b.y - ay,\n\t      dc = dx * dx + dy * dy;\n\t  if (dc) {\n\t    var x = 0.5 + ((db *= db) - (da *= da)) / (2 * dc),\n\t        y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n\t    c.x = ax + x * dx + y * dy;\n\t    c.y = ay + x * dy - y * dx;\n\t  } else {\n\t    c.x = ax + db;\n\t    c.y = ay;\n\t  }\n\t}\n\t\n\tfunction intersects(a, b) {\n\t  var dx = b.x - a.x,\n\t      dy = b.y - a.y,\n\t      dr = a.r + b.r;\n\t  return dr * dr - 1e-6 > dx * dx + dy * dy;\n\t}\n\t\n\tfunction distance2(node, x, y) {\n\t  var a = node._,\n\t      b = node.next._,\n\t      ab = a.r + b.r,\n\t      dx = (a.x * b.r + b.x * a.r) / ab - x,\n\t      dy = (a.y * b.r + b.y * a.r) / ab - y;\n\t  return dx * dx + dy * dy;\n\t}\n\t\n\tfunction Node$1(circle) {\n\t  this._ = circle;\n\t  this.next = null;\n\t  this.previous = null;\n\t}\n\t\n\tfunction packEnclose(circles) {\n\t  if (!(n = circles.length)) return 0;\n\t\n\t  var a, b, c, n;\n\t\n\t  // Place the first circle.\n\t  a = circles[0], a.x = 0, a.y = 0;\n\t  if (!(n > 1)) return a.r;\n\t\n\t  // Place the second circle.\n\t  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n\t  if (!(n > 2)) return a.r + b.r;\n\t\n\t  // Place the third circle.\n\t  place(b, a, c = circles[2]);\n\t\n\t  // Initialize the weighted centroid.\n\t  var aa = a.r * a.r,\n\t      ba = b.r * b.r,\n\t      ca = c.r * c.r,\n\t      oa = aa + ba + ca,\n\t      ox = aa * a.x + ba * b.x + ca * c.x,\n\t      oy = aa * a.y + ba * b.y + ca * c.y,\n\t      cx, cy, i, j, k, sj, sk;\n\t\n\t  // Initialize the front-chain using the first three circles a, b and c.\n\t  a = new Node$1(a), b = new Node$1(b), c = new Node$1(c);\n\t  a.next = c.previous = b;\n\t  b.next = a.previous = c;\n\t  c.next = b.previous = a;\n\t\n\t  // Attempt to place each remaining circle…\n\t  pack: for (i = 3; i < n; ++i) {\n\t    place(a._, b._, c = circles[i]), c = new Node$1(c);\n\t\n\t    // Find the closest intersecting circle on the front-chain, if any.\n\t    // “Closeness” is determined by linear distance along the front-chain.\n\t    // “Ahead” or “behind” is likewise determined by linear distance.\n\t    j = b.next, k = a.previous, sj = b._.r, sk = a._.r;\n\t    do {\n\t      if (sj <= sk) {\n\t        if (intersects(j._, c._)) {\n\t          b = j, a.next = b, b.previous = a, --i;\n\t          continue pack;\n\t        }\n\t        sj += j._.r, j = j.next;\n\t      } else {\n\t        if (intersects(k._, c._)) {\n\t          a = k, a.next = b, b.previous = a, --i;\n\t          continue pack;\n\t        }\n\t        sk += k._.r, k = k.previous;\n\t      }\n\t    } while (j !== k.next);\n\t\n\t    // Success! Insert the new circle c between a and b.\n\t    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\t\n\t    // Update the weighted centroid.\n\t    oa += ca = c._.r * c._.r;\n\t    ox += ca * c._.x;\n\t    oy += ca * c._.y;\n\t\n\t    // Compute the new closest circle pair to the centroid.\n\t    aa = distance2(a, cx = ox / oa, cy = oy / oa);\n\t    while ((c = c.next) !== b) {\n\t      if ((ca = distance2(c, cx, cy)) < aa) {\n\t        a = c, aa = ca;\n\t      }\n\t    }\n\t    b = a.next;\n\t  }\n\t\n\t  // Compute the enclosing circle of the front chain.\n\t  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\t\n\t  // Translate the circles to put the enclosing circle around the origin.\n\t  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\t\n\t  return c.r;\n\t}\n\t\n\tvar siblings = function(circles) {\n\t  packEnclose(circles);\n\t  return circles;\n\t};\n\t\n\tfunction optional(f) {\n\t  return f == null ? null : required(f);\n\t}\n\t\n\tfunction required(f) {\n\t  if (typeof f !== \"function\") throw new Error;\n\t  return f;\n\t}\n\t\n\tfunction constantZero() {\n\t  return 0;\n\t}\n\t\n\tvar constant$8 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction defaultRadius$1(d) {\n\t  return Math.sqrt(d.value);\n\t}\n\t\n\tvar index$2 = function() {\n\t  var radius = null,\n\t      dx = 1,\n\t      dy = 1,\n\t      padding = constantZero;\n\t\n\t  function pack(root) {\n\t    root.x = dx / 2, root.y = dy / 2;\n\t    if (radius) {\n\t      root.eachBefore(radiusLeaf(radius))\n\t          .eachAfter(packChildren(padding, 0.5))\n\t          .eachBefore(translateChild(1));\n\t    } else {\n\t      root.eachBefore(radiusLeaf(defaultRadius$1))\n\t          .eachAfter(packChildren(constantZero, 1))\n\t          .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n\t          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n\t    }\n\t    return root;\n\t  }\n\t\n\t  pack.radius = function(x) {\n\t    return arguments.length ? (radius = optional(x), pack) : radius;\n\t  };\n\t\n\t  pack.size = function(x) {\n\t    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n\t  };\n\t\n\t  pack.padding = function(x) {\n\t    return arguments.length ? (padding = typeof x === \"function\" ? x : constant$8(+x), pack) : padding;\n\t  };\n\t\n\t  return pack;\n\t};\n\t\n\tfunction radiusLeaf(radius) {\n\t  return function(node) {\n\t    if (!node.children) {\n\t      node.r = Math.max(0, +radius(node) || 0);\n\t    }\n\t  };\n\t}\n\t\n\tfunction packChildren(padding, k) {\n\t  return function(node) {\n\t    if (children = node.children) {\n\t      var children,\n\t          i,\n\t          n = children.length,\n\t          r = padding(node) * k || 0,\n\t          e;\n\t\n\t      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n\t      e = packEnclose(children);\n\t      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n\t      node.r = e + r;\n\t    }\n\t  };\n\t}\n\t\n\tfunction translateChild(k) {\n\t  return function(node) {\n\t    var parent = node.parent;\n\t    node.r *= k;\n\t    if (parent) {\n\t      node.x = parent.x + k * node.x;\n\t      node.y = parent.y + k * node.y;\n\t    }\n\t  };\n\t}\n\t\n\tvar roundNode = function(node) {\n\t  node.x0 = Math.round(node.x0);\n\t  node.y0 = Math.round(node.y0);\n\t  node.x1 = Math.round(node.x1);\n\t  node.y1 = Math.round(node.y1);\n\t};\n\t\n\tvar treemapDice = function(parent, x0, y0, x1, y1) {\n\t  var nodes = parent.children,\n\t      node,\n\t      i = -1,\n\t      n = nodes.length,\n\t      k = parent.value && (x1 - x0) / parent.value;\n\t\n\t  while (++i < n) {\n\t    node = nodes[i], node.y0 = y0, node.y1 = y1;\n\t    node.x0 = x0, node.x1 = x0 += node.value * k;\n\t  }\n\t};\n\t\n\tvar partition = function() {\n\t  var dx = 1,\n\t      dy = 1,\n\t      padding = 0,\n\t      round = false;\n\t\n\t  function partition(root) {\n\t    var n = root.height + 1;\n\t    root.x0 =\n\t    root.y0 = padding;\n\t    root.x1 = dx;\n\t    root.y1 = dy / n;\n\t    root.eachBefore(positionNode(dy, n));\n\t    if (round) root.eachBefore(roundNode);\n\t    return root;\n\t  }\n\t\n\t  function positionNode(dy, n) {\n\t    return function(node) {\n\t      if (node.children) {\n\t        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n\t      }\n\t      var x0 = node.x0,\n\t          y0 = node.y0,\n\t          x1 = node.x1 - padding,\n\t          y1 = node.y1 - padding;\n\t      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n\t      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n\t      node.x0 = x0;\n\t      node.y0 = y0;\n\t      node.x1 = x1;\n\t      node.y1 = y1;\n\t    };\n\t  }\n\t\n\t  partition.round = function(x) {\n\t    return arguments.length ? (round = !!x, partition) : round;\n\t  };\n\t\n\t  partition.size = function(x) {\n\t    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n\t  };\n\t\n\t  partition.padding = function(x) {\n\t    return arguments.length ? (padding = +x, partition) : padding;\n\t  };\n\t\n\t  return partition;\n\t};\n\t\n\tvar keyPrefix$1 = \"$\";\n\tvar preroot = {depth: -1};\n\tvar ambiguous = {};\n\t\n\tfunction defaultId(d) {\n\t  return d.id;\n\t}\n\t\n\tfunction defaultParentId(d) {\n\t  return d.parentId;\n\t}\n\t\n\tvar stratify = function() {\n\t  var id = defaultId,\n\t      parentId = defaultParentId;\n\t\n\t  function stratify(data) {\n\t    var d,\n\t        i,\n\t        n = data.length,\n\t        root,\n\t        parent,\n\t        node,\n\t        nodes = new Array(n),\n\t        nodeId,\n\t        nodeKey,\n\t        nodeByKey = {};\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      d = data[i], node = nodes[i] = new Node(d);\n\t      if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n\t        nodeKey = keyPrefix$1 + (node.id = nodeId);\n\t        nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;\n\t      }\n\t    }\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      node = nodes[i], nodeId = parentId(data[i], i, data);\n\t      if (nodeId == null || !(nodeId += \"\")) {\n\t        if (root) throw new Error(\"multiple roots\");\n\t        root = node;\n\t      } else {\n\t        parent = nodeByKey[keyPrefix$1 + nodeId];\n\t        if (!parent) throw new Error(\"missing: \" + nodeId);\n\t        if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n\t        if (parent.children) parent.children.push(node);\n\t        else parent.children = [node];\n\t        node.parent = parent;\n\t      }\n\t    }\n\t\n\t    if (!root) throw new Error(\"no root\");\n\t    root.parent = preroot;\n\t    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n\t    root.parent = null;\n\t    if (n > 0) throw new Error(\"cycle\");\n\t\n\t    return root;\n\t  }\n\t\n\t  stratify.id = function(x) {\n\t    return arguments.length ? (id = required(x), stratify) : id;\n\t  };\n\t\n\t  stratify.parentId = function(x) {\n\t    return arguments.length ? (parentId = required(x), stratify) : parentId;\n\t  };\n\t\n\t  return stratify;\n\t};\n\t\n\tfunction defaultSeparation$1(a, b) {\n\t  return a.parent === b.parent ? 1 : 2;\n\t}\n\t\n\t// function radialSeparation(a, b) {\n\t//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n\t// }\n\t\n\t// This function is used to traverse the left contour of a subtree (or\n\t// subforest). It returns the successor of v on this contour. This successor is\n\t// either given by the leftmost child of v or by the thread of v. The function\n\t// returns null if and only if v is on the highest level of its subtree.\n\tfunction nextLeft(v) {\n\t  var children = v.children;\n\t  return children ? children[0] : v.t;\n\t}\n\t\n\t// This function works analogously to nextLeft.\n\tfunction nextRight(v) {\n\t  var children = v.children;\n\t  return children ? children[children.length - 1] : v.t;\n\t}\n\t\n\t// Shifts the current subtree rooted at w+. This is done by increasing\n\t// prelim(w+) and mod(w+) by shift.\n\tfunction moveSubtree(wm, wp, shift) {\n\t  var change = shift / (wp.i - wm.i);\n\t  wp.c -= change;\n\t  wp.s += shift;\n\t  wm.c += change;\n\t  wp.z += shift;\n\t  wp.m += shift;\n\t}\n\t\n\t// All other shifts, applied to the smaller subtrees between w- and w+, are\n\t// performed by this function. To prepare the shifts, we have to adjust\n\t// change(w+), shift(w+), and change(w-).\n\tfunction executeShifts(v) {\n\t  var shift = 0,\n\t      change = 0,\n\t      children = v.children,\n\t      i = children.length,\n\t      w;\n\t  while (--i >= 0) {\n\t    w = children[i];\n\t    w.z += shift;\n\t    w.m += shift;\n\t    shift += w.s + (change += w.c);\n\t  }\n\t}\n\t\n\t// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n\t// returns the specified (default) ancestor.\n\tfunction nextAncestor(vim, v, ancestor) {\n\t  return vim.a.parent === v.parent ? vim.a : ancestor;\n\t}\n\t\n\tfunction TreeNode(node, i) {\n\t  this._ = node;\n\t  this.parent = null;\n\t  this.children = null;\n\t  this.A = null; // default ancestor\n\t  this.a = this; // ancestor\n\t  this.z = 0; // prelim\n\t  this.m = 0; // mod\n\t  this.c = 0; // change\n\t  this.s = 0; // shift\n\t  this.t = null; // thread\n\t  this.i = i; // number\n\t}\n\t\n\tTreeNode.prototype = Object.create(Node.prototype);\n\t\n\tfunction treeRoot(root) {\n\t  var tree = new TreeNode(root, 0),\n\t      node,\n\t      nodes = [tree],\n\t      child,\n\t      children,\n\t      i,\n\t      n;\n\t\n\t  while (node = nodes.pop()) {\n\t    if (children = node._.children) {\n\t      node.children = new Array(n = children.length);\n\t      for (i = n - 1; i >= 0; --i) {\n\t        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n\t        child.parent = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  (tree.parent = new TreeNode(null, 0)).children = [tree];\n\t  return tree;\n\t}\n\t\n\t// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\n\tvar tree = function() {\n\t  var separation = defaultSeparation$1,\n\t      dx = 1,\n\t      dy = 1,\n\t      nodeSize = null;\n\t\n\t  function tree(root) {\n\t    var t = treeRoot(root);\n\t\n\t    // Compute the layout using Buchheim et al.’s algorithm.\n\t    t.eachAfter(firstWalk), t.parent.m = -t.z;\n\t    t.eachBefore(secondWalk);\n\t\n\t    // If a fixed node size is specified, scale x and y.\n\t    if (nodeSize) root.eachBefore(sizeNode);\n\t\n\t    // If a fixed tree size is specified, scale x and y based on the extent.\n\t    // Compute the left-most, right-most, and depth-most nodes for extents.\n\t    else {\n\t      var left = root,\n\t          right = root,\n\t          bottom = root;\n\t      root.eachBefore(function(node) {\n\t        if (node.x < left.x) left = node;\n\t        if (node.x > right.x) right = node;\n\t        if (node.depth > bottom.depth) bottom = node;\n\t      });\n\t      var s = left === right ? 1 : separation(left, right) / 2,\n\t          tx = s - left.x,\n\t          kx = dx / (right.x + s + tx),\n\t          ky = dy / (bottom.depth || 1);\n\t      root.eachBefore(function(node) {\n\t        node.x = (node.x + tx) * kx;\n\t        node.y = node.depth * ky;\n\t      });\n\t    }\n\t\n\t    return root;\n\t  }\n\t\n\t  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n\t  // applied recursively to the children of v, as well as the function\n\t  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n\t  // node v is placed to the midpoint of its outermost children.\n\t  function firstWalk(v) {\n\t    var children = v.children,\n\t        siblings = v.parent.children,\n\t        w = v.i ? siblings[v.i - 1] : null;\n\t    if (children) {\n\t      executeShifts(v);\n\t      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n\t      if (w) {\n\t        v.z = w.z + separation(v._, w._);\n\t        v.m = v.z - midpoint;\n\t      } else {\n\t        v.z = midpoint;\n\t      }\n\t    } else if (w) {\n\t      v.z = w.z + separation(v._, w._);\n\t    }\n\t    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n\t  }\n\t\n\t  // Computes all real x-coordinates by summing up the modifiers recursively.\n\t  function secondWalk(v) {\n\t    v._.x = v.z + v.parent.m;\n\t    v.m += v.parent.m;\n\t  }\n\t\n\t  // The core of the algorithm. Here, a new subtree is combined with the\n\t  // previous subtrees. Threads are used to traverse the inside and outside\n\t  // contours of the left and right subtree up to the highest common level. The\n\t  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n\t  // superscript o means outside and i means inside, the subscript - means left\n\t  // subtree and + means right subtree. For summing up the modifiers along the\n\t  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n\t  // nodes of the inside contours conflict, we compute the left one of the\n\t  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n\t  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n\t  // Finally, we add a new thread (if necessary).\n\t  function apportion(v, w, ancestor) {\n\t    if (w) {\n\t      var vip = v,\n\t          vop = v,\n\t          vim = w,\n\t          vom = vip.parent.children[0],\n\t          sip = vip.m,\n\t          sop = vop.m,\n\t          sim = vim.m,\n\t          som = vom.m,\n\t          shift;\n\t      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n\t        vom = nextLeft(vom);\n\t        vop = nextRight(vop);\n\t        vop.a = v;\n\t        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n\t        if (shift > 0) {\n\t          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n\t          sip += shift;\n\t          sop += shift;\n\t        }\n\t        sim += vim.m;\n\t        sip += vip.m;\n\t        som += vom.m;\n\t        sop += vop.m;\n\t      }\n\t      if (vim && !nextRight(vop)) {\n\t        vop.t = vim;\n\t        vop.m += sim - sop;\n\t      }\n\t      if (vip && !nextLeft(vom)) {\n\t        vom.t = vip;\n\t        vom.m += sip - som;\n\t        ancestor = v;\n\t      }\n\t    }\n\t    return ancestor;\n\t  }\n\t\n\t  function sizeNode(node) {\n\t    node.x *= dx;\n\t    node.y = node.depth * dy;\n\t  }\n\t\n\t  tree.separation = function(x) {\n\t    return arguments.length ? (separation = x, tree) : separation;\n\t  };\n\t\n\t  tree.size = function(x) {\n\t    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n\t  };\n\t\n\t  tree.nodeSize = function(x) {\n\t    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n\t  };\n\t\n\t  return tree;\n\t};\n\t\n\tvar treemapSlice = function(parent, x0, y0, x1, y1) {\n\t  var nodes = parent.children,\n\t      node,\n\t      i = -1,\n\t      n = nodes.length,\n\t      k = parent.value && (y1 - y0) / parent.value;\n\t\n\t  while (++i < n) {\n\t    node = nodes[i], node.x0 = x0, node.x1 = x1;\n\t    node.y0 = y0, node.y1 = y0 += node.value * k;\n\t  }\n\t};\n\t\n\tvar phi = (1 + Math.sqrt(5)) / 2;\n\t\n\tfunction squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n\t  var rows = [],\n\t      nodes = parent.children,\n\t      row,\n\t      nodeValue,\n\t      i0 = 0,\n\t      i1 = 0,\n\t      n = nodes.length,\n\t      dx, dy,\n\t      value = parent.value,\n\t      sumValue,\n\t      minValue,\n\t      maxValue,\n\t      newRatio,\n\t      minRatio,\n\t      alpha,\n\t      beta;\n\t\n\t  while (i0 < n) {\n\t    dx = x1 - x0, dy = y1 - y0;\n\t\n\t    // Find the next non-empty node.\n\t    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\n\t    minValue = maxValue = sumValue;\n\t    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n\t    beta = sumValue * sumValue * alpha;\n\t    minRatio = Math.max(maxValue / beta, beta / minValue);\n\t\n\t    // Keep adding nodes while the aspect ratio maintains or improves.\n\t    for (; i1 < n; ++i1) {\n\t      sumValue += nodeValue = nodes[i1].value;\n\t      if (nodeValue < minValue) minValue = nodeValue;\n\t      if (nodeValue > maxValue) maxValue = nodeValue;\n\t      beta = sumValue * sumValue * alpha;\n\t      newRatio = Math.max(maxValue / beta, beta / minValue);\n\t      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n\t      minRatio = newRatio;\n\t    }\n\t\n\t    // Position and record the row orientation.\n\t    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n\t    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n\t    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n\t    value -= sumValue, i0 = i1;\n\t  }\n\t\n\t  return rows;\n\t}\n\t\n\tvar squarify = ((function custom(ratio) {\n\t\n\t  function squarify(parent, x0, y0, x1, y1) {\n\t    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n\t  }\n\t\n\t  squarify.ratio = function(x) {\n\t    return custom((x = +x) > 1 ? x : 1);\n\t  };\n\t\n\t  return squarify;\n\t}))(phi);\n\t\n\tvar index$3 = function() {\n\t  var tile = squarify,\n\t      round = false,\n\t      dx = 1,\n\t      dy = 1,\n\t      paddingStack = [0],\n\t      paddingInner = constantZero,\n\t      paddingTop = constantZero,\n\t      paddingRight = constantZero,\n\t      paddingBottom = constantZero,\n\t      paddingLeft = constantZero;\n\t\n\t  function treemap(root) {\n\t    root.x0 =\n\t    root.y0 = 0;\n\t    root.x1 = dx;\n\t    root.y1 = dy;\n\t    root.eachBefore(positionNode);\n\t    paddingStack = [0];\n\t    if (round) root.eachBefore(roundNode);\n\t    return root;\n\t  }\n\t\n\t  function positionNode(node) {\n\t    var p = paddingStack[node.depth],\n\t        x0 = node.x0 + p,\n\t        y0 = node.y0 + p,\n\t        x1 = node.x1 - p,\n\t        y1 = node.y1 - p;\n\t    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n\t    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n\t    node.x0 = x0;\n\t    node.y0 = y0;\n\t    node.x1 = x1;\n\t    node.y1 = y1;\n\t    if (node.children) {\n\t      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n\t      x0 += paddingLeft(node) - p;\n\t      y0 += paddingTop(node) - p;\n\t      x1 -= paddingRight(node) - p;\n\t      y1 -= paddingBottom(node) - p;\n\t      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n\t      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n\t      tile(node, x0, y0, x1, y1);\n\t    }\n\t  }\n\t\n\t  treemap.round = function(x) {\n\t    return arguments.length ? (round = !!x, treemap) : round;\n\t  };\n\t\n\t  treemap.size = function(x) {\n\t    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n\t  };\n\t\n\t  treemap.tile = function(x) {\n\t    return arguments.length ? (tile = required(x), treemap) : tile;\n\t  };\n\t\n\t  treemap.padding = function(x) {\n\t    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n\t  };\n\t\n\t  treemap.paddingInner = function(x) {\n\t    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingInner;\n\t  };\n\t\n\t  treemap.paddingOuter = function(x) {\n\t    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n\t  };\n\t\n\t  treemap.paddingTop = function(x) {\n\t    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingTop;\n\t  };\n\t\n\t  treemap.paddingRight = function(x) {\n\t    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingRight;\n\t  };\n\t\n\t  treemap.paddingBottom = function(x) {\n\t    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingBottom;\n\t  };\n\t\n\t  treemap.paddingLeft = function(x) {\n\t    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingLeft;\n\t  };\n\t\n\t  return treemap;\n\t};\n\t\n\tvar binary = function(parent, x0, y0, x1, y1) {\n\t  var nodes = parent.children,\n\t      i, n = nodes.length,\n\t      sum, sums = new Array(n + 1);\n\t\n\t  for (sums[0] = sum = i = 0; i < n; ++i) {\n\t    sums[i + 1] = sum += nodes[i].value;\n\t  }\n\t\n\t  partition(0, n, parent.value, x0, y0, x1, y1);\n\t\n\t  function partition(i, j, value, x0, y0, x1, y1) {\n\t    if (i >= j - 1) {\n\t      var node = nodes[i];\n\t      node.x0 = x0, node.y0 = y0;\n\t      node.x1 = x1, node.y1 = y1;\n\t      return;\n\t    }\n\t\n\t    var valueOffset = sums[i],\n\t        valueTarget = (value / 2) + valueOffset,\n\t        k = i + 1,\n\t        hi = j - 1;\n\t\n\t    while (k < hi) {\n\t      var mid = k + hi >>> 1;\n\t      if (sums[mid] < valueTarget) k = mid + 1;\n\t      else hi = mid;\n\t    }\n\t\n\t    if ((valueTarget - sums[k - 1]) < (sums[k] - valueTarget) && i + 1 < k) --k;\n\t\n\t    var valueLeft = sums[k] - valueOffset,\n\t        valueRight = value - valueLeft;\n\t\n\t    if ((x1 - x0) > (y1 - y0)) {\n\t      var xk = (x0 * valueRight + x1 * valueLeft) / value;\n\t      partition(i, k, valueLeft, x0, y0, xk, y1);\n\t      partition(k, j, valueRight, xk, y0, x1, y1);\n\t    } else {\n\t      var yk = (y0 * valueRight + y1 * valueLeft) / value;\n\t      partition(i, k, valueLeft, x0, y0, x1, yk);\n\t      partition(k, j, valueRight, x0, yk, x1, y1);\n\t    }\n\t  }\n\t};\n\t\n\tvar sliceDice = function(parent, x0, y0, x1, y1) {\n\t  (parent.depth & 1 ? treemapSlice : treemapDice)(parent, x0, y0, x1, y1);\n\t};\n\t\n\tvar resquarify = ((function custom(ratio) {\n\t\n\t  function resquarify(parent, x0, y0, x1, y1) {\n\t    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n\t      var rows,\n\t          row,\n\t          nodes,\n\t          i,\n\t          j = -1,\n\t          n,\n\t          m = rows.length,\n\t          value = parent.value;\n\t\n\t      while (++j < m) {\n\t        row = rows[j], nodes = row.children;\n\t        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n\t        if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);\n\t        else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n\t        value -= row.value;\n\t      }\n\t    } else {\n\t      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n\t      rows.ratio = ratio;\n\t    }\n\t  }\n\t\n\t  resquarify.ratio = function(x) {\n\t    return custom((x = +x) > 1 ? x : 1);\n\t  };\n\t\n\t  return resquarify;\n\t}))(phi);\n\t\n\tvar area$1 = function(polygon) {\n\t  var i = -1,\n\t      n = polygon.length,\n\t      a,\n\t      b = polygon[n - 1],\n\t      area = 0;\n\t\n\t  while (++i < n) {\n\t    a = b;\n\t    b = polygon[i];\n\t    area += a[1] * b[0] - a[0] * b[1];\n\t  }\n\t\n\t  return area / 2;\n\t};\n\t\n\tvar centroid$1 = function(polygon) {\n\t  var i = -1,\n\t      n = polygon.length,\n\t      x = 0,\n\t      y = 0,\n\t      a,\n\t      b = polygon[n - 1],\n\t      c,\n\t      k = 0;\n\t\n\t  while (++i < n) {\n\t    a = b;\n\t    b = polygon[i];\n\t    k += c = a[0] * b[1] - b[0] * a[1];\n\t    x += (a[0] + b[0]) * c;\n\t    y += (a[1] + b[1]) * c;\n\t  }\n\t\n\t  return k *= 3, [x / k, y / k];\n\t};\n\t\n\t// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n\t// the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n\t// right, +y is up). Returns a positive value if ABC is counter-clockwise,\n\t// negative if clockwise, and zero if the points are collinear.\n\tvar cross$1 = function(a, b, c) {\n\t  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n\t};\n\t\n\tfunction lexicographicOrder(a, b) {\n\t  return a[0] - b[0] || a[1] - b[1];\n\t}\n\t\n\t// Computes the upper convex hull per the monotone chain algorithm.\n\t// Assumes points.length >= 3, is sorted by x, unique in y.\n\t// Returns an array of indices into points in left-to-right order.\n\tfunction computeUpperHullIndexes(points) {\n\t  var n = points.length,\n\t      indexes = [0, 1],\n\t      size = 2;\n\t\n\t  for (var i = 2; i < n; ++i) {\n\t    while (size > 1 && cross$1(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n\t    indexes[size++] = i;\n\t  }\n\t\n\t  return indexes.slice(0, size); // remove popped points\n\t}\n\t\n\tvar hull = function(points) {\n\t  if ((n = points.length) < 3) return null;\n\t\n\t  var i,\n\t      n,\n\t      sortedPoints = new Array(n),\n\t      flippedPoints = new Array(n);\n\t\n\t  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n\t  sortedPoints.sort(lexicographicOrder);\n\t  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\t\n\t  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n\t      lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\t\n\t  // Construct the hull polygon, removing possible duplicate endpoints.\n\t  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n\t      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n\t      hull = [];\n\t\n\t  // Add upper hull in right-to-l order.\n\t  // Then add lower hull in left-to-right order.\n\t  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n\t  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\t\n\t  return hull;\n\t};\n\t\n\tvar contains$1 = function(polygon, point) {\n\t  var n = polygon.length,\n\t      p = polygon[n - 1],\n\t      x = point[0], y = point[1],\n\t      x0 = p[0], y0 = p[1],\n\t      x1, y1,\n\t      inside = false;\n\t\n\t  for (var i = 0; i < n; ++i) {\n\t    p = polygon[i], x1 = p[0], y1 = p[1];\n\t    if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;\n\t    x0 = x1, y0 = y1;\n\t  }\n\t\n\t  return inside;\n\t};\n\t\n\tvar length$2 = function(polygon) {\n\t  var i = -1,\n\t      n = polygon.length,\n\t      b = polygon[n - 1],\n\t      xa,\n\t      ya,\n\t      xb = b[0],\n\t      yb = b[1],\n\t      perimeter = 0;\n\t\n\t  while (++i < n) {\n\t    xa = xb;\n\t    ya = yb;\n\t    b = polygon[i];\n\t    xb = b[0];\n\t    yb = b[1];\n\t    xa -= xb;\n\t    ya -= yb;\n\t    perimeter += Math.sqrt(xa * xa + ya * ya);\n\t  }\n\t\n\t  return perimeter;\n\t};\n\t\n\tvar slice$3 = [].slice;\n\t\n\tvar noabort = {};\n\t\n\tfunction Queue(size) {\n\t  if (!(size >= 1)) throw new Error;\n\t  this._size = size;\n\t  this._call =\n\t  this._error = null;\n\t  this._tasks = [];\n\t  this._data = [];\n\t  this._waiting =\n\t  this._active =\n\t  this._ended =\n\t  this._start = 0; // inside a synchronous task callback?\n\t}\n\t\n\tQueue.prototype = queue.prototype = {\n\t  constructor: Queue,\n\t  defer: function(callback) {\n\t    if (typeof callback !== \"function\" || this._call) throw new Error;\n\t    if (this._error != null) return this;\n\t    var t = slice$3.call(arguments, 1);\n\t    t.push(callback);\n\t    ++this._waiting, this._tasks.push(t);\n\t    poke$1(this);\n\t    return this;\n\t  },\n\t  abort: function() {\n\t    if (this._error == null) abort(this, new Error(\"abort\"));\n\t    return this;\n\t  },\n\t  await: function(callback) {\n\t    if (typeof callback !== \"function\" || this._call) throw new Error;\n\t    this._call = function(error, results) { callback.apply(null, [error].concat(results)); };\n\t    maybeNotify(this);\n\t    return this;\n\t  },\n\t  awaitAll: function(callback) {\n\t    if (typeof callback !== \"function\" || this._call) throw new Error;\n\t    this._call = callback;\n\t    maybeNotify(this);\n\t    return this;\n\t  }\n\t};\n\t\n\tfunction poke$1(q) {\n\t  if (!q._start) {\n\t    try { start$1(q); } // let the current task complete\n\t    catch (e) {\n\t      if (q._tasks[q._ended + q._active - 1]) abort(q, e); // task errored synchronously\n\t      else if (!q._data) throw e; // await callback errored synchronously\n\t    }\n\t  }\n\t}\n\t\n\tfunction start$1(q) {\n\t  while (q._start = q._waiting && q._active < q._size) {\n\t    var i = q._ended + q._active,\n\t        t = q._tasks[i],\n\t        j = t.length - 1,\n\t        c = t[j];\n\t    t[j] = end(q, i);\n\t    --q._waiting, ++q._active;\n\t    t = c.apply(null, t);\n\t    if (!q._tasks[i]) continue; // task finished synchronously\n\t    q._tasks[i] = t || noabort;\n\t  }\n\t}\n\t\n\tfunction end(q, i) {\n\t  return function(e, r) {\n\t    if (!q._tasks[i]) return; // ignore multiple callbacks\n\t    --q._active, ++q._ended;\n\t    q._tasks[i] = null;\n\t    if (q._error != null) return; // ignore secondary errors\n\t    if (e != null) {\n\t      abort(q, e);\n\t    } else {\n\t      q._data[i] = r;\n\t      if (q._waiting) poke$1(q);\n\t      else maybeNotify(q);\n\t    }\n\t  };\n\t}\n\t\n\tfunction abort(q, e) {\n\t  var i = q._tasks.length, t;\n\t  q._error = e; // ignore active callbacks\n\t  q._data = undefined; // allow gc\n\t  q._waiting = NaN; // prevent starting\n\t\n\t  while (--i >= 0) {\n\t    if (t = q._tasks[i]) {\n\t      q._tasks[i] = null;\n\t      if (t.abort) {\n\t        try { t.abort(); }\n\t        catch (e) { /* ignore */ }\n\t      }\n\t    }\n\t  }\n\t\n\t  q._active = NaN; // allow notification\n\t  maybeNotify(q);\n\t}\n\t\n\tfunction maybeNotify(q) {\n\t  if (!q._active && q._call) {\n\t    var d = q._data;\n\t    q._data = undefined; // allow gc\n\t    q._call(q._error, d);\n\t  }\n\t}\n\t\n\tfunction queue(concurrency) {\n\t  return new Queue(arguments.length ? +concurrency : Infinity);\n\t}\n\t\n\tvar uniform = function(min, max) {\n\t  min = min == null ? 0 : +min;\n\t  max = max == null ? 1 : +max;\n\t  if (arguments.length === 1) max = min, min = 0;\n\t  else max -= min;\n\t  return function() {\n\t    return Math.random() * max + min;\n\t  };\n\t};\n\t\n\tvar normal = function(mu, sigma) {\n\t  var x, r;\n\t  mu = mu == null ? 0 : +mu;\n\t  sigma = sigma == null ? 1 : +sigma;\n\t  return function() {\n\t    var y;\n\t\n\t    // If available, use the second previously-generated uniform random.\n\t    if (x != null) y = x, x = null;\n\t\n\t    // Otherwise, generate a new x and y.\n\t    else do {\n\t      x = Math.random() * 2 - 1;\n\t      y = Math.random() * 2 - 1;\n\t      r = x * x + y * y;\n\t    } while (!r || r > 1);\n\t\n\t    return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n\t  };\n\t};\n\t\n\tvar logNormal = function() {\n\t  var randomNormal = normal.apply(this, arguments);\n\t  return function() {\n\t    return Math.exp(randomNormal());\n\t  };\n\t};\n\t\n\tvar irwinHall = function(n) {\n\t  return function() {\n\t    for (var sum = 0, i = 0; i < n; ++i) sum += Math.random();\n\t    return sum;\n\t  };\n\t};\n\t\n\tvar bates = function(n) {\n\t  var randomIrwinHall = irwinHall(n);\n\t  return function() {\n\t    return randomIrwinHall() / n;\n\t  };\n\t};\n\t\n\tvar exponential$1 = function(lambda) {\n\t  return function() {\n\t    return -Math.log(1 - Math.random()) / lambda;\n\t  };\n\t};\n\t\n\tvar request = function(url, callback) {\n\t  var request,\n\t      event = dispatch(\"beforesend\", \"progress\", \"load\", \"error\"),\n\t      mimeType,\n\t      headers = map$1(),\n\t      xhr = new XMLHttpRequest,\n\t      user = null,\n\t      password = null,\n\t      response,\n\t      responseType,\n\t      timeout = 0;\n\t\n\t  // If IE does not support CORS, use XDomainRequest.\n\t  if (typeof XDomainRequest !== \"undefined\"\n\t      && !(\"withCredentials\" in xhr)\n\t      && /^(http(s)?:)?\\/\\//.test(url)) xhr = new XDomainRequest;\n\t\n\t  \"onload\" in xhr\n\t      ? xhr.onload = xhr.onerror = xhr.ontimeout = respond\n\t      : xhr.onreadystatechange = function(o) { xhr.readyState > 3 && respond(o); };\n\t\n\t  function respond(o) {\n\t    var status = xhr.status, result;\n\t    if (!status && hasResponse(xhr)\n\t        || status >= 200 && status < 300\n\t        || status === 304) {\n\t      if (response) {\n\t        try {\n\t          result = response.call(request, xhr);\n\t        } catch (e) {\n\t          event.call(\"error\", request, e);\n\t          return;\n\t        }\n\t      } else {\n\t        result = xhr;\n\t      }\n\t      event.call(\"load\", request, result);\n\t    } else {\n\t      event.call(\"error\", request, o);\n\t    }\n\t  }\n\t\n\t  xhr.onprogress = function(e) {\n\t    event.call(\"progress\", request, e);\n\t  };\n\t\n\t  request = {\n\t    header: function(name, value) {\n\t      name = (name + \"\").toLowerCase();\n\t      if (arguments.length < 2) return headers.get(name);\n\t      if (value == null) headers.remove(name);\n\t      else headers.set(name, value + \"\");\n\t      return request;\n\t    },\n\t\n\t    // If mimeType is non-null and no Accept header is set, a default is used.\n\t    mimeType: function(value) {\n\t      if (!arguments.length) return mimeType;\n\t      mimeType = value == null ? null : value + \"\";\n\t      return request;\n\t    },\n\t\n\t    // Specifies what type the response value should take;\n\t    // for instance, arraybuffer, blob, document, or text.\n\t    responseType: function(value) {\n\t      if (!arguments.length) return responseType;\n\t      responseType = value;\n\t      return request;\n\t    },\n\t\n\t    timeout: function(value) {\n\t      if (!arguments.length) return timeout;\n\t      timeout = +value;\n\t      return request;\n\t    },\n\t\n\t    user: function(value) {\n\t      return arguments.length < 1 ? user : (user = value == null ? null : value + \"\", request);\n\t    },\n\t\n\t    password: function(value) {\n\t      return arguments.length < 1 ? password : (password = value == null ? null : value + \"\", request);\n\t    },\n\t\n\t    // Specify how to convert the response content to a specific type;\n\t    // changes the callback value on \"load\" events.\n\t    response: function(value) {\n\t      response = value;\n\t      return request;\n\t    },\n\t\n\t    // Alias for send(\"GET\", …).\n\t    get: function(data, callback) {\n\t      return request.send(\"GET\", data, callback);\n\t    },\n\t\n\t    // Alias for send(\"POST\", …).\n\t    post: function(data, callback) {\n\t      return request.send(\"POST\", data, callback);\n\t    },\n\t\n\t    // If callback is non-null, it will be used for error and load events.\n\t    send: function(method, data, callback) {\n\t      xhr.open(method, url, true, user, password);\n\t      if (mimeType != null && !headers.has(\"accept\")) headers.set(\"accept\", mimeType + \",*/*\");\n\t      if (xhr.setRequestHeader) headers.each(function(value, name) { xhr.setRequestHeader(name, value); });\n\t      if (mimeType != null && xhr.overrideMimeType) xhr.overrideMimeType(mimeType);\n\t      if (responseType != null) xhr.responseType = responseType;\n\t      if (timeout > 0) xhr.timeout = timeout;\n\t      if (callback == null && typeof data === \"function\") callback = data, data = null;\n\t      if (callback != null && callback.length === 1) callback = fixCallback(callback);\n\t      if (callback != null) request.on(\"error\", callback).on(\"load\", function(xhr) { callback(null, xhr); });\n\t      event.call(\"beforesend\", request, xhr);\n\t      xhr.send(data == null ? null : data);\n\t      return request;\n\t    },\n\t\n\t    abort: function() {\n\t      xhr.abort();\n\t      return request;\n\t    },\n\t\n\t    on: function() {\n\t      var value = event.on.apply(event, arguments);\n\t      return value === event ? request : value;\n\t    }\n\t  };\n\t\n\t  if (callback != null) {\n\t    if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n\t    return request.get(callback);\n\t  }\n\t\n\t  return request;\n\t};\n\t\n\tfunction fixCallback(callback) {\n\t  return function(error, xhr) {\n\t    callback(error == null ? xhr : null);\n\t  };\n\t}\n\t\n\tfunction hasResponse(xhr) {\n\t  var type = xhr.responseType;\n\t  return type && type !== \"text\"\n\t      ? xhr.response // null on error\n\t      : xhr.responseText; // \"\" on error\n\t}\n\t\n\tvar type$1 = function(defaultMimeType, response) {\n\t  return function(url, callback) {\n\t    var r = request(url).mimeType(defaultMimeType).response(response);\n\t    if (callback != null) {\n\t      if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n\t      return r.get(callback);\n\t    }\n\t    return r;\n\t  };\n\t};\n\t\n\tvar html = type$1(\"text/html\", function(xhr) {\n\t  return document.createRange().createContextualFragment(xhr.responseText);\n\t});\n\t\n\tvar json = type$1(\"application/json\", function(xhr) {\n\t  return JSON.parse(xhr.responseText);\n\t});\n\t\n\tvar text = type$1(\"text/plain\", function(xhr) {\n\t  return xhr.responseText;\n\t});\n\t\n\tvar xml = type$1(\"application/xml\", function(xhr) {\n\t  var xml = xhr.responseXML;\n\t  if (!xml) throw new Error(\"parse error\");\n\t  return xml;\n\t});\n\t\n\tvar dsv$1 = function(defaultMimeType, parse) {\n\t  return function(url, row, callback) {\n\t    if (arguments.length < 3) callback = row, row = null;\n\t    var r = request(url).mimeType(defaultMimeType);\n\t    r.row = function(_) { return arguments.length ? r.response(responseOf(parse, row = _)) : row; };\n\t    r.row(row);\n\t    return callback ? r.get(callback) : r;\n\t  };\n\t};\n\t\n\tfunction responseOf(parse, row) {\n\t  return function(request$$1) {\n\t    return parse(request$$1.responseText, row);\n\t  };\n\t}\n\t\n\tvar csv$1 = dsv$1(\"text/csv\", csvParse);\n\t\n\tvar tsv$1 = dsv$1(\"text/tab-separated-values\", tsvParse);\n\t\n\tvar array$2 = Array.prototype;\n\t\n\tvar map$3 = array$2.map;\n\tvar slice$4 = array$2.slice;\n\t\n\tvar implicit = {name: \"implicit\"};\n\t\n\tfunction ordinal(range) {\n\t  var index = map$1(),\n\t      domain = [],\n\t      unknown = implicit;\n\t\n\t  range = range == null ? [] : slice$4.call(range);\n\t\n\t  function scale(d) {\n\t    var key = d + \"\", i = index.get(key);\n\t    if (!i) {\n\t      if (unknown !== implicit) return unknown;\n\t      index.set(key, i = domain.push(d));\n\t    }\n\t    return range[(i - 1) % range.length];\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    if (!arguments.length) return domain.slice();\n\t    domain = [], index = map$1();\n\t    var i = -1, n = _.length, d, key;\n\t    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n\t    return scale;\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range = slice$4.call(_), scale) : range.slice();\n\t  };\n\t\n\t  scale.unknown = function(_) {\n\t    return arguments.length ? (unknown = _, scale) : unknown;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return ordinal()\n\t        .domain(domain)\n\t        .range(range)\n\t        .unknown(unknown);\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction band() {\n\t  var scale = ordinal().unknown(undefined),\n\t      domain = scale.domain,\n\t      ordinalRange = scale.range,\n\t      range$$1 = [0, 1],\n\t      step,\n\t      bandwidth,\n\t      round = false,\n\t      paddingInner = 0,\n\t      paddingOuter = 0,\n\t      align = 0.5;\n\t\n\t  delete scale.unknown;\n\t\n\t  function rescale() {\n\t    var n = domain().length,\n\t        reverse = range$$1[1] < range$$1[0],\n\t        start = range$$1[reverse - 0],\n\t        stop = range$$1[1 - reverse];\n\t    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n\t    if (round) step = Math.floor(step);\n\t    start += (stop - start - step * (n - paddingInner)) * align;\n\t    bandwidth = step * (1 - paddingInner);\n\t    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n\t    var values = sequence(n).map(function(i) { return start + step * i; });\n\t    return ordinalRange(reverse ? values.reverse() : values);\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain(_), rescale()) : domain();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range$$1 = [+_[0], +_[1]], rescale()) : range$$1.slice();\n\t  };\n\t\n\t  scale.rangeRound = function(_) {\n\t    return range$$1 = [+_[0], +_[1]], round = true, rescale();\n\t  };\n\t\n\t  scale.bandwidth = function() {\n\t    return bandwidth;\n\t  };\n\t\n\t  scale.step = function() {\n\t    return step;\n\t  };\n\t\n\t  scale.round = function(_) {\n\t    return arguments.length ? (round = !!_, rescale()) : round;\n\t  };\n\t\n\t  scale.padding = function(_) {\n\t    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n\t  };\n\t\n\t  scale.paddingInner = function(_) {\n\t    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n\t  };\n\t\n\t  scale.paddingOuter = function(_) {\n\t    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n\t  };\n\t\n\t  scale.align = function(_) {\n\t    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return band()\n\t        .domain(domain())\n\t        .range(range$$1)\n\t        .round(round)\n\t        .paddingInner(paddingInner)\n\t        .paddingOuter(paddingOuter)\n\t        .align(align);\n\t  };\n\t\n\t  return rescale();\n\t}\n\t\n\tfunction pointish(scale) {\n\t  var copy = scale.copy;\n\t\n\t  scale.padding = scale.paddingOuter;\n\t  delete scale.paddingInner;\n\t  delete scale.paddingOuter;\n\t\n\t  scale.copy = function() {\n\t    return pointish(copy());\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction point$1() {\n\t  return pointish(band().paddingInner(1));\n\t}\n\t\n\tvar constant$9 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar number$1 = function(x) {\n\t  return +x;\n\t};\n\t\n\tvar unit = [0, 1];\n\t\n\tfunction deinterpolateLinear(a, b) {\n\t  return (b -= (a = +a))\n\t      ? function(x) { return (x - a) / b; }\n\t      : constant$9(b);\n\t}\n\t\n\tfunction deinterpolateClamp(deinterpolate) {\n\t  return function(a, b) {\n\t    var d = deinterpolate(a = +a, b = +b);\n\t    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n\t  };\n\t}\n\t\n\tfunction reinterpolateClamp(reinterpolate) {\n\t  return function(a, b) {\n\t    var r = reinterpolate(a = +a, b = +b);\n\t    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n\t  };\n\t}\n\t\n\tfunction bimap(domain, range$$1, deinterpolate, reinterpolate) {\n\t  var d0 = domain[0], d1 = domain[1], r0 = range$$1[0], r1 = range$$1[1];\n\t  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n\t  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n\t  return function(x) { return r0(d0(x)); };\n\t}\n\t\n\tfunction polymap(domain, range$$1, deinterpolate, reinterpolate) {\n\t  var j = Math.min(domain.length, range$$1.length) - 1,\n\t      d = new Array(j),\n\t      r = new Array(j),\n\t      i = -1;\n\t\n\t  // Reverse descending domains.\n\t  if (domain[j] < domain[0]) {\n\t    domain = domain.slice().reverse();\n\t    range$$1 = range$$1.slice().reverse();\n\t  }\n\t\n\t  while (++i < j) {\n\t    d[i] = deinterpolate(domain[i], domain[i + 1]);\n\t    r[i] = reinterpolate(range$$1[i], range$$1[i + 1]);\n\t  }\n\t\n\t  return function(x) {\n\t    var i = bisectRight(domain, x, 1, j) - 1;\n\t    return r[i](d[i](x));\n\t  };\n\t}\n\t\n\tfunction copy(source, target) {\n\t  return target\n\t      .domain(source.domain())\n\t      .range(source.range())\n\t      .interpolate(source.interpolate())\n\t      .clamp(source.clamp());\n\t}\n\t\n\t// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n\t// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\n\tfunction continuous(deinterpolate, reinterpolate) {\n\t  var domain = unit,\n\t      range$$1 = unit,\n\t      interpolate$$1 = interpolateValue,\n\t      clamp = false,\n\t      piecewise,\n\t      output,\n\t      input;\n\t\n\t  function rescale() {\n\t    piecewise = Math.min(domain.length, range$$1.length) > 2 ? polymap : bimap;\n\t    output = input = null;\n\t    return scale;\n\t  }\n\t\n\t  function scale(x) {\n\t    return (output || (output = piecewise(domain, range$$1, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate$$1)))(+x);\n\t  }\n\t\n\t  scale.invert = function(y) {\n\t    return (input || (input = piecewise(range$$1, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain = map$3.call(_, number$1), rescale()) : domain.slice();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range$$1 = slice$4.call(_), rescale()) : range$$1.slice();\n\t  };\n\t\n\t  scale.rangeRound = function(_) {\n\t    return range$$1 = slice$4.call(_), interpolate$$1 = interpolateRound, rescale();\n\t  };\n\t\n\t  scale.clamp = function(_) {\n\t    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n\t  };\n\t\n\t  scale.interpolate = function(_) {\n\t    return arguments.length ? (interpolate$$1 = _, rescale()) : interpolate$$1;\n\t  };\n\t\n\t  return rescale();\n\t}\n\t\n\tvar tickFormat = function(domain, count, specifier) {\n\t  var start = domain[0],\n\t      stop = domain[domain.length - 1],\n\t      step = tickStep(start, stop, count == null ? 10 : count),\n\t      precision;\n\t  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n\t  switch (specifier.type) {\n\t    case \"s\": {\n\t      var value = Math.max(Math.abs(start), Math.abs(stop));\n\t      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n\t      return exports.formatPrefix(specifier, value);\n\t    }\n\t    case \"\":\n\t    case \"e\":\n\t    case \"g\":\n\t    case \"p\":\n\t    case \"r\": {\n\t      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n\t      break;\n\t    }\n\t    case \"f\":\n\t    case \"%\": {\n\t      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n\t      break;\n\t    }\n\t  }\n\t  return exports.format(specifier);\n\t};\n\t\n\tfunction linearish(scale) {\n\t  var domain = scale.domain;\n\t\n\t  scale.ticks = function(count) {\n\t    var d = domain();\n\t    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n\t  };\n\t\n\t  scale.tickFormat = function(count, specifier) {\n\t    return tickFormat(domain(), count, specifier);\n\t  };\n\t\n\t  scale.nice = function(count) {\n\t    var d = domain(),\n\t        i = d.length - 1,\n\t        n = count == null ? 10 : count,\n\t        start = d[0],\n\t        stop = d[i],\n\t        step = tickStep(start, stop, n);\n\t\n\t    if (step) {\n\t      step = tickStep(Math.floor(start / step) * step, Math.ceil(stop / step) * step, n);\n\t      d[0] = Math.floor(start / step) * step;\n\t      d[i] = Math.ceil(stop / step) * step;\n\t      domain(d);\n\t    }\n\t\n\t    return scale;\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction linear$2() {\n\t  var scale = continuous(deinterpolateLinear, reinterpolate);\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, linear$2());\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tfunction identity$6() {\n\t  var domain = [0, 1];\n\t\n\t  function scale(x) {\n\t    return +x;\n\t  }\n\t\n\t  scale.invert = scale;\n\t\n\t  scale.domain = scale.range = function(_) {\n\t    return arguments.length ? (domain = map$3.call(_, number$1), scale) : domain.slice();\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return identity$6().domain(domain);\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tvar nice = function(domain, interval) {\n\t  domain = domain.slice();\n\t\n\t  var i0 = 0,\n\t      i1 = domain.length - 1,\n\t      x0 = domain[i0],\n\t      x1 = domain[i1],\n\t      t;\n\t\n\t  if (x1 < x0) {\n\t    t = i0, i0 = i1, i1 = t;\n\t    t = x0, x0 = x1, x1 = t;\n\t  }\n\t\n\t  domain[i0] = interval.floor(x0);\n\t  domain[i1] = interval.ceil(x1);\n\t  return domain;\n\t};\n\t\n\tfunction deinterpolate(a, b) {\n\t  return (b = Math.log(b / a))\n\t      ? function(x) { return Math.log(x / a) / b; }\n\t      : constant$9(b);\n\t}\n\t\n\tfunction reinterpolate$1(a, b) {\n\t  return a < 0\n\t      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n\t      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n\t}\n\t\n\tfunction pow10(x) {\n\t  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n\t}\n\t\n\tfunction powp(base) {\n\t  return base === 10 ? pow10\n\t      : base === Math.E ? Math.exp\n\t      : function(x) { return Math.pow(base, x); };\n\t}\n\t\n\tfunction logp(base) {\n\t  return base === Math.E ? Math.log\n\t      : base === 10 && Math.log10\n\t      || base === 2 && Math.log2\n\t      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n\t}\n\t\n\tfunction reflect(f) {\n\t  return function(x) {\n\t    return -f(-x);\n\t  };\n\t}\n\t\n\tfunction log$1() {\n\t  var scale = continuous(deinterpolate, reinterpolate$1).domain([1, 10]),\n\t      domain = scale.domain,\n\t      base = 10,\n\t      logs = logp(10),\n\t      pows = powp(10);\n\t\n\t  function rescale() {\n\t    logs = logp(base), pows = powp(base);\n\t    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n\t    return scale;\n\t  }\n\t\n\t  scale.base = function(_) {\n\t    return arguments.length ? (base = +_, rescale()) : base;\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain(_), rescale()) : domain();\n\t  };\n\t\n\t  scale.ticks = function(count) {\n\t    var d = domain(),\n\t        u = d[0],\n\t        v = d[d.length - 1],\n\t        r;\n\t\n\t    if (r = v < u) i = u, u = v, v = i;\n\t\n\t    var i = logs(u),\n\t        j = logs(v),\n\t        p,\n\t        k,\n\t        t,\n\t        n = count == null ? 10 : +count,\n\t        z = [];\n\t\n\t    if (!(base % 1) && j - i < n) {\n\t      i = Math.round(i) - 1, j = Math.round(j) + 1;\n\t      if (u > 0) for (; i < j; ++i) {\n\t        for (k = 1, p = pows(i); k < base; ++k) {\n\t          t = p * k;\n\t          if (t < u) continue;\n\t          if (t > v) break;\n\t          z.push(t);\n\t        }\n\t      } else for (; i < j; ++i) {\n\t        for (k = base - 1, p = pows(i); k >= 1; --k) {\n\t          t = p * k;\n\t          if (t < u) continue;\n\t          if (t > v) break;\n\t          z.push(t);\n\t        }\n\t      }\n\t    } else {\n\t      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n\t    }\n\t\n\t    return r ? z.reverse() : z;\n\t  };\n\t\n\t  scale.tickFormat = function(count, specifier) {\n\t    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n\t    if (typeof specifier !== \"function\") specifier = exports.format(specifier);\n\t    if (count === Infinity) return specifier;\n\t    if (count == null) count = 10;\n\t    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n\t    return function(d) {\n\t      var i = d / pows(Math.round(logs(d)));\n\t      if (i * base < base - 0.5) i *= base;\n\t      return i <= k ? specifier(d) : \"\";\n\t    };\n\t  };\n\t\n\t  scale.nice = function() {\n\t    return domain(nice(domain(), {\n\t      floor: function(x) { return pows(Math.floor(logs(x))); },\n\t      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n\t    }));\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, log$1().base(base));\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction raise$1(x, exponent) {\n\t  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n\t}\n\t\n\tfunction pow$1() {\n\t  var exponent = 1,\n\t      scale = continuous(deinterpolate, reinterpolate),\n\t      domain = scale.domain;\n\t\n\t  function deinterpolate(a, b) {\n\t    return (b = raise$1(b, exponent) - (a = raise$1(a, exponent)))\n\t        ? function(x) { return (raise$1(x, exponent) - a) / b; }\n\t        : constant$9(b);\n\t  }\n\t\n\t  function reinterpolate(a, b) {\n\t    b = raise$1(b, exponent) - (a = raise$1(a, exponent));\n\t    return function(t) { return raise$1(a + b * t, 1 / exponent); };\n\t  }\n\t\n\t  scale.exponent = function(_) {\n\t    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, pow$1().exponent(exponent));\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tfunction sqrt$1() {\n\t  return pow$1().exponent(0.5);\n\t}\n\t\n\tfunction quantile$$1() {\n\t  var domain = [],\n\t      range$$1 = [],\n\t      thresholds = [];\n\t\n\t  function rescale() {\n\t    var i = 0, n = Math.max(1, range$$1.length);\n\t    thresholds = new Array(n - 1);\n\t    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n\t    return scale;\n\t  }\n\t\n\t  function scale(x) {\n\t    if (!isNaN(x = +x)) return range$$1[bisectRight(thresholds, x)];\n\t  }\n\t\n\t  scale.invertExtent = function(y) {\n\t    var i = range$$1.indexOf(y);\n\t    return i < 0 ? [NaN, NaN] : [\n\t      i > 0 ? thresholds[i - 1] : domain[0],\n\t      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n\t    ];\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    if (!arguments.length) return domain.slice();\n\t    domain = [];\n\t    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n\t    domain.sort(ascending);\n\t    return rescale();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range$$1 = slice$4.call(_), rescale()) : range$$1.slice();\n\t  };\n\t\n\t  scale.quantiles = function() {\n\t    return thresholds.slice();\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return quantile$$1()\n\t        .domain(domain)\n\t        .range(range$$1);\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction quantize$1() {\n\t  var x0 = 0,\n\t      x1 = 1,\n\t      n = 1,\n\t      domain = [0.5],\n\t      range$$1 = [0, 1];\n\t\n\t  function scale(x) {\n\t    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n\t  }\n\t\n\t  function rescale() {\n\t    var i = -1;\n\t    domain = new Array(n);\n\t    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n\t    return scale;\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (n = (range$$1 = slice$4.call(_)).length - 1, rescale()) : range$$1.slice();\n\t  };\n\t\n\t  scale.invertExtent = function(y) {\n\t    var i = range$$1.indexOf(y);\n\t    return i < 0 ? [NaN, NaN]\n\t        : i < 1 ? [x0, domain[0]]\n\t        : i >= n ? [domain[n - 1], x1]\n\t        : [domain[i - 1], domain[i]];\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return quantize$1()\n\t        .domain([x0, x1])\n\t        .range(range$$1);\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tfunction threshold$1() {\n\t  var domain = [0.5],\n\t      range$$1 = [0, 1],\n\t      n = 1;\n\t\n\t  function scale(x) {\n\t    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain = slice$4.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : domain.slice();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range$$1 = slice$4.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : range$$1.slice();\n\t  };\n\t\n\t  scale.invertExtent = function(y) {\n\t    var i = range$$1.indexOf(y);\n\t    return [domain[i - 1], domain[i]];\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return threshold$1()\n\t        .domain(domain)\n\t        .range(range$$1);\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tvar t0$1 = new Date;\n\tvar t1$1 = new Date;\n\t\n\tfunction newInterval(floori, offseti, count, field) {\n\t\n\t  function interval(date) {\n\t    return floori(date = new Date(+date)), date;\n\t  }\n\t\n\t  interval.floor = interval;\n\t\n\t  interval.ceil = function(date) {\n\t    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n\t  };\n\t\n\t  interval.round = function(date) {\n\t    var d0 = interval(date),\n\t        d1 = interval.ceil(date);\n\t    return date - d0 < d1 - date ? d0 : d1;\n\t  };\n\t\n\t  interval.offset = function(date, step) {\n\t    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n\t  };\n\t\n\t  interval.range = function(start, stop, step) {\n\t    var range = [];\n\t    start = interval.ceil(start);\n\t    step = step == null ? 1 : Math.floor(step);\n\t    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n\t    do range.push(new Date(+start)); while (offseti(start, step), floori(start), start < stop)\n\t    return range;\n\t  };\n\t\n\t  interval.filter = function(test) {\n\t    return newInterval(function(date) {\n\t      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n\t    }, function(date, step) {\n\t      if (date >= date) while (--step >= 0) while (offseti(date, 1), !test(date)) {} // eslint-disable-line no-empty\n\t    });\n\t  };\n\t\n\t  if (count) {\n\t    interval.count = function(start, end) {\n\t      t0$1.setTime(+start), t1$1.setTime(+end);\n\t      floori(t0$1), floori(t1$1);\n\t      return Math.floor(count(t0$1, t1$1));\n\t    };\n\t\n\t    interval.every = function(step) {\n\t      step = Math.floor(step);\n\t      return !isFinite(step) || !(step > 0) ? null\n\t          : !(step > 1) ? interval\n\t          : interval.filter(field\n\t              ? function(d) { return field(d) % step === 0; }\n\t              : function(d) { return interval.count(0, d) % step === 0; });\n\t    };\n\t  }\n\t\n\t  return interval;\n\t}\n\t\n\tvar millisecond = newInterval(function() {\n\t  // noop\n\t}, function(date, step) {\n\t  date.setTime(+date + step);\n\t}, function(start, end) {\n\t  return end - start;\n\t});\n\t\n\t// An optimized implementation for this simple case.\n\tmillisecond.every = function(k) {\n\t  k = Math.floor(k);\n\t  if (!isFinite(k) || !(k > 0)) return null;\n\t  if (!(k > 1)) return millisecond;\n\t  return newInterval(function(date) {\n\t    date.setTime(Math.floor(date / k) * k);\n\t  }, function(date, step) {\n\t    date.setTime(+date + step * k);\n\t  }, function(start, end) {\n\t    return (end - start) / k;\n\t  });\n\t};\n\t\n\tvar milliseconds = millisecond.range;\n\t\n\tvar durationSecond$1 = 1e3;\n\tvar durationMinute$1 = 6e4;\n\tvar durationHour$1 = 36e5;\n\tvar durationDay$1 = 864e5;\n\tvar durationWeek$1 = 6048e5;\n\t\n\tvar second = newInterval(function(date) {\n\t  date.setTime(Math.floor(date / durationSecond$1) * durationSecond$1);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationSecond$1);\n\t}, function(start, end) {\n\t  return (end - start) / durationSecond$1;\n\t}, function(date) {\n\t  return date.getUTCSeconds();\n\t});\n\t\n\tvar seconds = second.range;\n\t\n\tvar minute = newInterval(function(date) {\n\t  date.setTime(Math.floor(date / durationMinute$1) * durationMinute$1);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationMinute$1);\n\t}, function(start, end) {\n\t  return (end - start) / durationMinute$1;\n\t}, function(date) {\n\t  return date.getMinutes();\n\t});\n\t\n\tvar minutes = minute.range;\n\t\n\tvar hour = newInterval(function(date) {\n\t  var offset = date.getTimezoneOffset() * durationMinute$1 % durationHour$1;\n\t  if (offset < 0) offset += durationHour$1;\n\t  date.setTime(Math.floor((+date - offset) / durationHour$1) * durationHour$1 + offset);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationHour$1);\n\t}, function(start, end) {\n\t  return (end - start) / durationHour$1;\n\t}, function(date) {\n\t  return date.getHours();\n\t});\n\t\n\tvar hours = hour.range;\n\t\n\tvar day = newInterval(function(date) {\n\t  date.setHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setDate(date.getDate() + step);\n\t}, function(start, end) {\n\t  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute$1) / durationDay$1;\n\t}, function(date) {\n\t  return date.getDate() - 1;\n\t});\n\t\n\tvar days = day.range;\n\t\n\tfunction weekday(i) {\n\t  return newInterval(function(date) {\n\t    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n\t    date.setHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setDate(date.getDate() + step * 7);\n\t  }, function(start, end) {\n\t    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute$1) / durationWeek$1;\n\t  });\n\t}\n\t\n\tvar sunday = weekday(0);\n\tvar monday = weekday(1);\n\tvar tuesday = weekday(2);\n\tvar wednesday = weekday(3);\n\tvar thursday = weekday(4);\n\tvar friday = weekday(5);\n\tvar saturday = weekday(6);\n\t\n\tvar sundays = sunday.range;\n\tvar mondays = monday.range;\n\tvar tuesdays = tuesday.range;\n\tvar wednesdays = wednesday.range;\n\tvar thursdays = thursday.range;\n\tvar fridays = friday.range;\n\tvar saturdays = saturday.range;\n\t\n\tvar month = newInterval(function(date) {\n\t  date.setDate(1);\n\t  date.setHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setMonth(date.getMonth() + step);\n\t}, function(start, end) {\n\t  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n\t}, function(date) {\n\t  return date.getMonth();\n\t});\n\t\n\tvar months = month.range;\n\t\n\tvar year = newInterval(function(date) {\n\t  date.setMonth(0, 1);\n\t  date.setHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setFullYear(date.getFullYear() + step);\n\t}, function(start, end) {\n\t  return end.getFullYear() - start.getFullYear();\n\t}, function(date) {\n\t  return date.getFullYear();\n\t});\n\t\n\t// An optimized implementation for this simple case.\n\tyear.every = function(k) {\n\t  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n\t    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n\t    date.setMonth(0, 1);\n\t    date.setHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setFullYear(date.getFullYear() + step * k);\n\t  });\n\t};\n\t\n\tvar years = year.range;\n\t\n\tvar utcMinute = newInterval(function(date) {\n\t  date.setUTCSeconds(0, 0);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationMinute$1);\n\t}, function(start, end) {\n\t  return (end - start) / durationMinute$1;\n\t}, function(date) {\n\t  return date.getUTCMinutes();\n\t});\n\t\n\tvar utcMinutes = utcMinute.range;\n\t\n\tvar utcHour = newInterval(function(date) {\n\t  date.setUTCMinutes(0, 0, 0);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationHour$1);\n\t}, function(start, end) {\n\t  return (end - start) / durationHour$1;\n\t}, function(date) {\n\t  return date.getUTCHours();\n\t});\n\t\n\tvar utcHours = utcHour.range;\n\t\n\tvar utcDay = newInterval(function(date) {\n\t  date.setUTCHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setUTCDate(date.getUTCDate() + step);\n\t}, function(start, end) {\n\t  return (end - start) / durationDay$1;\n\t}, function(date) {\n\t  return date.getUTCDate() - 1;\n\t});\n\t\n\tvar utcDays = utcDay.range;\n\t\n\tfunction utcWeekday(i) {\n\t  return newInterval(function(date) {\n\t    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n\t    date.setUTCHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setUTCDate(date.getUTCDate() + step * 7);\n\t  }, function(start, end) {\n\t    return (end - start) / durationWeek$1;\n\t  });\n\t}\n\t\n\tvar utcSunday = utcWeekday(0);\n\tvar utcMonday = utcWeekday(1);\n\tvar utcTuesday = utcWeekday(2);\n\tvar utcWednesday = utcWeekday(3);\n\tvar utcThursday = utcWeekday(4);\n\tvar utcFriday = utcWeekday(5);\n\tvar utcSaturday = utcWeekday(6);\n\t\n\tvar utcSundays = utcSunday.range;\n\tvar utcMondays = utcMonday.range;\n\tvar utcTuesdays = utcTuesday.range;\n\tvar utcWednesdays = utcWednesday.range;\n\tvar utcThursdays = utcThursday.range;\n\tvar utcFridays = utcFriday.range;\n\tvar utcSaturdays = utcSaturday.range;\n\t\n\tvar utcMonth = newInterval(function(date) {\n\t  date.setUTCDate(1);\n\t  date.setUTCHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setUTCMonth(date.getUTCMonth() + step);\n\t}, function(start, end) {\n\t  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n\t}, function(date) {\n\t  return date.getUTCMonth();\n\t});\n\t\n\tvar utcMonths = utcMonth.range;\n\t\n\tvar utcYear = newInterval(function(date) {\n\t  date.setUTCMonth(0, 1);\n\t  date.setUTCHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setUTCFullYear(date.getUTCFullYear() + step);\n\t}, function(start, end) {\n\t  return end.getUTCFullYear() - start.getUTCFullYear();\n\t}, function(date) {\n\t  return date.getUTCFullYear();\n\t});\n\t\n\t// An optimized implementation for this simple case.\n\tutcYear.every = function(k) {\n\t  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n\t    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n\t    date.setUTCMonth(0, 1);\n\t    date.setUTCHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n\t  });\n\t};\n\t\n\tvar utcYears = utcYear.range;\n\t\n\tfunction localDate(d) {\n\t  if (0 <= d.y && d.y < 100) {\n\t    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n\t    date.setFullYear(d.y);\n\t    return date;\n\t  }\n\t  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n\t}\n\t\n\tfunction utcDate(d) {\n\t  if (0 <= d.y && d.y < 100) {\n\t    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n\t    date.setUTCFullYear(d.y);\n\t    return date;\n\t  }\n\t  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n\t}\n\t\n\tfunction newYear(y) {\n\t  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n\t}\n\t\n\tfunction formatLocale$1(locale) {\n\t  var locale_dateTime = locale.dateTime,\n\t      locale_date = locale.date,\n\t      locale_time = locale.time,\n\t      locale_periods = locale.periods,\n\t      locale_weekdays = locale.days,\n\t      locale_shortWeekdays = locale.shortDays,\n\t      locale_months = locale.months,\n\t      locale_shortMonths = locale.shortMonths;\n\t\n\t  var periodRe = formatRe(locale_periods),\n\t      periodLookup = formatLookup(locale_periods),\n\t      weekdayRe = formatRe(locale_weekdays),\n\t      weekdayLookup = formatLookup(locale_weekdays),\n\t      shortWeekdayRe = formatRe(locale_shortWeekdays),\n\t      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n\t      monthRe = formatRe(locale_months),\n\t      monthLookup = formatLookup(locale_months),\n\t      shortMonthRe = formatRe(locale_shortMonths),\n\t      shortMonthLookup = formatLookup(locale_shortMonths);\n\t\n\t  var formats = {\n\t    \"a\": formatShortWeekday,\n\t    \"A\": formatWeekday,\n\t    \"b\": formatShortMonth,\n\t    \"B\": formatMonth,\n\t    \"c\": null,\n\t    \"d\": formatDayOfMonth,\n\t    \"e\": formatDayOfMonth,\n\t    \"H\": formatHour24,\n\t    \"I\": formatHour12,\n\t    \"j\": formatDayOfYear,\n\t    \"L\": formatMilliseconds,\n\t    \"m\": formatMonthNumber,\n\t    \"M\": formatMinutes,\n\t    \"p\": formatPeriod,\n\t    \"S\": formatSeconds,\n\t    \"U\": formatWeekNumberSunday,\n\t    \"w\": formatWeekdayNumber,\n\t    \"W\": formatWeekNumberMonday,\n\t    \"x\": null,\n\t    \"X\": null,\n\t    \"y\": formatYear,\n\t    \"Y\": formatFullYear,\n\t    \"Z\": formatZone,\n\t    \"%\": formatLiteralPercent\n\t  };\n\t\n\t  var utcFormats = {\n\t    \"a\": formatUTCShortWeekday,\n\t    \"A\": formatUTCWeekday,\n\t    \"b\": formatUTCShortMonth,\n\t    \"B\": formatUTCMonth,\n\t    \"c\": null,\n\t    \"d\": formatUTCDayOfMonth,\n\t    \"e\": formatUTCDayOfMonth,\n\t    \"H\": formatUTCHour24,\n\t    \"I\": formatUTCHour12,\n\t    \"j\": formatUTCDayOfYear,\n\t    \"L\": formatUTCMilliseconds,\n\t    \"m\": formatUTCMonthNumber,\n\t    \"M\": formatUTCMinutes,\n\t    \"p\": formatUTCPeriod,\n\t    \"S\": formatUTCSeconds,\n\t    \"U\": formatUTCWeekNumberSunday,\n\t    \"w\": formatUTCWeekdayNumber,\n\t    \"W\": formatUTCWeekNumberMonday,\n\t    \"x\": null,\n\t    \"X\": null,\n\t    \"y\": formatUTCYear,\n\t    \"Y\": formatUTCFullYear,\n\t    \"Z\": formatUTCZone,\n\t    \"%\": formatLiteralPercent\n\t  };\n\t\n\t  var parses = {\n\t    \"a\": parseShortWeekday,\n\t    \"A\": parseWeekday,\n\t    \"b\": parseShortMonth,\n\t    \"B\": parseMonth,\n\t    \"c\": parseLocaleDateTime,\n\t    \"d\": parseDayOfMonth,\n\t    \"e\": parseDayOfMonth,\n\t    \"H\": parseHour24,\n\t    \"I\": parseHour24,\n\t    \"j\": parseDayOfYear,\n\t    \"L\": parseMilliseconds,\n\t    \"m\": parseMonthNumber,\n\t    \"M\": parseMinutes,\n\t    \"p\": parsePeriod,\n\t    \"S\": parseSeconds,\n\t    \"U\": parseWeekNumberSunday,\n\t    \"w\": parseWeekdayNumber,\n\t    \"W\": parseWeekNumberMonday,\n\t    \"x\": parseLocaleDate,\n\t    \"X\": parseLocaleTime,\n\t    \"y\": parseYear,\n\t    \"Y\": parseFullYear,\n\t    \"Z\": parseZone,\n\t    \"%\": parseLiteralPercent\n\t  };\n\t\n\t  // These recursive directive definitions must be deferred.\n\t  formats.x = newFormat(locale_date, formats);\n\t  formats.X = newFormat(locale_time, formats);\n\t  formats.c = newFormat(locale_dateTime, formats);\n\t  utcFormats.x = newFormat(locale_date, utcFormats);\n\t  utcFormats.X = newFormat(locale_time, utcFormats);\n\t  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\t\n\t  function newFormat(specifier, formats) {\n\t    return function(date) {\n\t      var string = [],\n\t          i = -1,\n\t          j = 0,\n\t          n = specifier.length,\n\t          c,\n\t          pad,\n\t          format;\n\t\n\t      if (!(date instanceof Date)) date = new Date(+date);\n\t\n\t      while (++i < n) {\n\t        if (specifier.charCodeAt(i) === 37) {\n\t          string.push(specifier.slice(j, i));\n\t          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n\t          else pad = c === \"e\" ? \" \" : \"0\";\n\t          if (format = formats[c]) c = format(date, pad);\n\t          string.push(c);\n\t          j = i + 1;\n\t        }\n\t      }\n\t\n\t      string.push(specifier.slice(j, i));\n\t      return string.join(\"\");\n\t    };\n\t  }\n\t\n\t  function newParse(specifier, newDate) {\n\t    return function(string) {\n\t      var d = newYear(1900),\n\t          i = parseSpecifier(d, specifier, string += \"\", 0);\n\t      if (i != string.length) return null;\n\t\n\t      // The am-pm flag is 0 for AM, and 1 for PM.\n\t      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\t\n\t      // Convert day-of-week and week-of-year to day-of-year.\n\t      if (\"W\" in d || \"U\" in d) {\n\t        if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n\t        var day$$1 = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n\t        d.m = 0;\n\t        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day$$1 + 5) % 7 : d.w + d.U * 7 - (day$$1 + 6) % 7;\n\t      }\n\t\n\t      // If a time zone is specified, all fields are interpreted as UTC and then\n\t      // offset according to the specified time zone.\n\t      if (\"Z\" in d) {\n\t        d.H += d.Z / 100 | 0;\n\t        d.M += d.Z % 100;\n\t        return utcDate(d);\n\t      }\n\t\n\t      // Otherwise, all fields are in local time.\n\t      return newDate(d);\n\t    };\n\t  }\n\t\n\t  function parseSpecifier(d, specifier, string, j) {\n\t    var i = 0,\n\t        n = specifier.length,\n\t        m = string.length,\n\t        c,\n\t        parse;\n\t\n\t    while (i < n) {\n\t      if (j >= m) return -1;\n\t      c = specifier.charCodeAt(i++);\n\t      if (c === 37) {\n\t        c = specifier.charAt(i++);\n\t        parse = parses[c in pads ? specifier.charAt(i++) : c];\n\t        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n\t      } else if (c != string.charCodeAt(j++)) {\n\t        return -1;\n\t      }\n\t    }\n\t\n\t    return j;\n\t  }\n\t\n\t  function parsePeriod(d, string, i) {\n\t    var n = periodRe.exec(string.slice(i));\n\t    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseShortWeekday(d, string, i) {\n\t    var n = shortWeekdayRe.exec(string.slice(i));\n\t    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseWeekday(d, string, i) {\n\t    var n = weekdayRe.exec(string.slice(i));\n\t    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseShortMonth(d, string, i) {\n\t    var n = shortMonthRe.exec(string.slice(i));\n\t    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseMonth(d, string, i) {\n\t    var n = monthRe.exec(string.slice(i));\n\t    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseLocaleDateTime(d, string, i) {\n\t    return parseSpecifier(d, locale_dateTime, string, i);\n\t  }\n\t\n\t  function parseLocaleDate(d, string, i) {\n\t    return parseSpecifier(d, locale_date, string, i);\n\t  }\n\t\n\t  function parseLocaleTime(d, string, i) {\n\t    return parseSpecifier(d, locale_time, string, i);\n\t  }\n\t\n\t  function formatShortWeekday(d) {\n\t    return locale_shortWeekdays[d.getDay()];\n\t  }\n\t\n\t  function formatWeekday(d) {\n\t    return locale_weekdays[d.getDay()];\n\t  }\n\t\n\t  function formatShortMonth(d) {\n\t    return locale_shortMonths[d.getMonth()];\n\t  }\n\t\n\t  function formatMonth(d) {\n\t    return locale_months[d.getMonth()];\n\t  }\n\t\n\t  function formatPeriod(d) {\n\t    return locale_periods[+(d.getHours() >= 12)];\n\t  }\n\t\n\t  function formatUTCShortWeekday(d) {\n\t    return locale_shortWeekdays[d.getUTCDay()];\n\t  }\n\t\n\t  function formatUTCWeekday(d) {\n\t    return locale_weekdays[d.getUTCDay()];\n\t  }\n\t\n\t  function formatUTCShortMonth(d) {\n\t    return locale_shortMonths[d.getUTCMonth()];\n\t  }\n\t\n\t  function formatUTCMonth(d) {\n\t    return locale_months[d.getUTCMonth()];\n\t  }\n\t\n\t  function formatUTCPeriod(d) {\n\t    return locale_periods[+(d.getUTCHours() >= 12)];\n\t  }\n\t\n\t  return {\n\t    format: function(specifier) {\n\t      var f = newFormat(specifier += \"\", formats);\n\t      f.toString = function() { return specifier; };\n\t      return f;\n\t    },\n\t    parse: function(specifier) {\n\t      var p = newParse(specifier += \"\", localDate);\n\t      p.toString = function() { return specifier; };\n\t      return p;\n\t    },\n\t    utcFormat: function(specifier) {\n\t      var f = newFormat(specifier += \"\", utcFormats);\n\t      f.toString = function() { return specifier; };\n\t      return f;\n\t    },\n\t    utcParse: function(specifier) {\n\t      var p = newParse(specifier, utcDate);\n\t      p.toString = function() { return specifier; };\n\t      return p;\n\t    }\n\t  };\n\t}\n\t\n\tvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"};\n\tvar numberRe = /^\\s*\\d+/;\n\tvar percentRe = /^%/;\n\tvar requoteRe = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\t\n\tfunction pad(value, fill, width) {\n\t  var sign = value < 0 ? \"-\" : \"\",\n\t      string = (sign ? -value : value) + \"\",\n\t      length = string.length;\n\t  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n\t}\n\t\n\tfunction requote(s) {\n\t  return s.replace(requoteRe, \"\\\\$&\");\n\t}\n\t\n\tfunction formatRe(names) {\n\t  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n\t}\n\t\n\tfunction formatLookup(names) {\n\t  var map = {}, i = -1, n = names.length;\n\t  while (++i < n) map[names[i].toLowerCase()] = i;\n\t  return map;\n\t}\n\t\n\tfunction parseWeekdayNumber(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 1));\n\t  return n ? (d.w = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseWeekNumberSunday(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i));\n\t  return n ? (d.U = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseWeekNumberMonday(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i));\n\t  return n ? (d.W = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseFullYear(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 4));\n\t  return n ? (d.y = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseYear(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseZone(d, string, i) {\n\t  var n = /^(Z)|([+-]\\d\\d)(?:\\:?(\\d\\d))?/.exec(string.slice(i, i + 6));\n\t  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseMonthNumber(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseDayOfMonth(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.d = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseDayOfYear(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 3));\n\t  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseHour24(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.H = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseMinutes(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.M = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseSeconds(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.S = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseMilliseconds(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 3));\n\t  return n ? (d.L = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseLiteralPercent(d, string, i) {\n\t  var n = percentRe.exec(string.slice(i, i + 1));\n\t  return n ? i + n[0].length : -1;\n\t}\n\t\n\tfunction formatDayOfMonth(d, p) {\n\t  return pad(d.getDate(), p, 2);\n\t}\n\t\n\tfunction formatHour24(d, p) {\n\t  return pad(d.getHours(), p, 2);\n\t}\n\t\n\tfunction formatHour12(d, p) {\n\t  return pad(d.getHours() % 12 || 12, p, 2);\n\t}\n\t\n\tfunction formatDayOfYear(d, p) {\n\t  return pad(1 + day.count(year(d), d), p, 3);\n\t}\n\t\n\tfunction formatMilliseconds(d, p) {\n\t  return pad(d.getMilliseconds(), p, 3);\n\t}\n\t\n\tfunction formatMonthNumber(d, p) {\n\t  return pad(d.getMonth() + 1, p, 2);\n\t}\n\t\n\tfunction formatMinutes(d, p) {\n\t  return pad(d.getMinutes(), p, 2);\n\t}\n\t\n\tfunction formatSeconds(d, p) {\n\t  return pad(d.getSeconds(), p, 2);\n\t}\n\t\n\tfunction formatWeekNumberSunday(d, p) {\n\t  return pad(sunday.count(year(d), d), p, 2);\n\t}\n\t\n\tfunction formatWeekdayNumber(d) {\n\t  return d.getDay();\n\t}\n\t\n\tfunction formatWeekNumberMonday(d, p) {\n\t  return pad(monday.count(year(d), d), p, 2);\n\t}\n\t\n\tfunction formatYear(d, p) {\n\t  return pad(d.getFullYear() % 100, p, 2);\n\t}\n\t\n\tfunction formatFullYear(d, p) {\n\t  return pad(d.getFullYear() % 10000, p, 4);\n\t}\n\t\n\tfunction formatZone(d) {\n\t  var z = d.getTimezoneOffset();\n\t  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n\t      + pad(z / 60 | 0, \"0\", 2)\n\t      + pad(z % 60, \"0\", 2);\n\t}\n\t\n\tfunction formatUTCDayOfMonth(d, p) {\n\t  return pad(d.getUTCDate(), p, 2);\n\t}\n\t\n\tfunction formatUTCHour24(d, p) {\n\t  return pad(d.getUTCHours(), p, 2);\n\t}\n\t\n\tfunction formatUTCHour12(d, p) {\n\t  return pad(d.getUTCHours() % 12 || 12, p, 2);\n\t}\n\t\n\tfunction formatUTCDayOfYear(d, p) {\n\t  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n\t}\n\t\n\tfunction formatUTCMilliseconds(d, p) {\n\t  return pad(d.getUTCMilliseconds(), p, 3);\n\t}\n\t\n\tfunction formatUTCMonthNumber(d, p) {\n\t  return pad(d.getUTCMonth() + 1, p, 2);\n\t}\n\t\n\tfunction formatUTCMinutes(d, p) {\n\t  return pad(d.getUTCMinutes(), p, 2);\n\t}\n\t\n\tfunction formatUTCSeconds(d, p) {\n\t  return pad(d.getUTCSeconds(), p, 2);\n\t}\n\t\n\tfunction formatUTCWeekNumberSunday(d, p) {\n\t  return pad(utcSunday.count(utcYear(d), d), p, 2);\n\t}\n\t\n\tfunction formatUTCWeekdayNumber(d) {\n\t  return d.getUTCDay();\n\t}\n\t\n\tfunction formatUTCWeekNumberMonday(d, p) {\n\t  return pad(utcMonday.count(utcYear(d), d), p, 2);\n\t}\n\t\n\tfunction formatUTCYear(d, p) {\n\t  return pad(d.getUTCFullYear() % 100, p, 2);\n\t}\n\t\n\tfunction formatUTCFullYear(d, p) {\n\t  return pad(d.getUTCFullYear() % 10000, p, 4);\n\t}\n\t\n\tfunction formatUTCZone() {\n\t  return \"+0000\";\n\t}\n\t\n\tfunction formatLiteralPercent() {\n\t  return \"%\";\n\t}\n\t\n\tvar locale$2;\n\t\n\t\n\t\n\t\n\t\n\tdefaultLocale$1({\n\t  dateTime: \"%x, %X\",\n\t  date: \"%-m/%-d/%Y\",\n\t  time: \"%-I:%M:%S %p\",\n\t  periods: [\"AM\", \"PM\"],\n\t  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n\t  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n\t  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n\t  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n\t});\n\t\n\tfunction defaultLocale$1(definition) {\n\t  locale$2 = formatLocale$1(definition);\n\t  exports.timeFormat = locale$2.format;\n\t  exports.timeParse = locale$2.parse;\n\t  exports.utcFormat = locale$2.utcFormat;\n\t  exports.utcParse = locale$2.utcParse;\n\t  return locale$2;\n\t}\n\t\n\tvar isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\t\n\tfunction formatIsoNative(date) {\n\t  return date.toISOString();\n\t}\n\t\n\tvar formatIso = Date.prototype.toISOString\n\t    ? formatIsoNative\n\t    : exports.utcFormat(isoSpecifier);\n\t\n\tfunction parseIsoNative(string) {\n\t  var date = new Date(string);\n\t  return isNaN(date) ? null : date;\n\t}\n\t\n\tvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n\t    ? parseIsoNative\n\t    : exports.utcParse(isoSpecifier);\n\t\n\tvar durationSecond = 1000;\n\tvar durationMinute = durationSecond * 60;\n\tvar durationHour = durationMinute * 60;\n\tvar durationDay = durationHour * 24;\n\tvar durationWeek = durationDay * 7;\n\tvar durationMonth = durationDay * 30;\n\tvar durationYear = durationDay * 365;\n\t\n\tfunction date$1(t) {\n\t  return new Date(t);\n\t}\n\t\n\tfunction number$2(t) {\n\t  return t instanceof Date ? +t : +new Date(+t);\n\t}\n\t\n\tfunction calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format) {\n\t  var scale = continuous(deinterpolateLinear, reinterpolate),\n\t      invert = scale.invert,\n\t      domain = scale.domain;\n\t\n\t  var formatMillisecond = format(\".%L\"),\n\t      formatSecond = format(\":%S\"),\n\t      formatMinute = format(\"%I:%M\"),\n\t      formatHour = format(\"%I %p\"),\n\t      formatDay = format(\"%a %d\"),\n\t      formatWeek = format(\"%b %d\"),\n\t      formatMonth = format(\"%B\"),\n\t      formatYear = format(\"%Y\");\n\t\n\t  var tickIntervals = [\n\t    [second$$1,  1,      durationSecond],\n\t    [second$$1,  5,  5 * durationSecond],\n\t    [second$$1, 15, 15 * durationSecond],\n\t    [second$$1, 30, 30 * durationSecond],\n\t    [minute$$1,  1,      durationMinute],\n\t    [minute$$1,  5,  5 * durationMinute],\n\t    [minute$$1, 15, 15 * durationMinute],\n\t    [minute$$1, 30, 30 * durationMinute],\n\t    [  hour$$1,  1,      durationHour  ],\n\t    [  hour$$1,  3,  3 * durationHour  ],\n\t    [  hour$$1,  6,  6 * durationHour  ],\n\t    [  hour$$1, 12, 12 * durationHour  ],\n\t    [   day$$1,  1,      durationDay   ],\n\t    [   day$$1,  2,  2 * durationDay   ],\n\t    [  week,  1,      durationWeek  ],\n\t    [ month$$1,  1,      durationMonth ],\n\t    [ month$$1,  3,  3 * durationMonth ],\n\t    [  year$$1,  1,      durationYear  ]\n\t  ];\n\t\n\t  function tickFormat(date) {\n\t    return (second$$1(date) < date ? formatMillisecond\n\t        : minute$$1(date) < date ? formatSecond\n\t        : hour$$1(date) < date ? formatMinute\n\t        : day$$1(date) < date ? formatHour\n\t        : month$$1(date) < date ? (week(date) < date ? formatDay : formatWeek)\n\t        : year$$1(date) < date ? formatMonth\n\t        : formatYear)(date);\n\t  }\n\t\n\t  function tickInterval(interval, start, stop, step) {\n\t    if (interval == null) interval = 10;\n\t\n\t    // If a desired tick count is specified, pick a reasonable tick interval\n\t    // based on the extent of the domain and a rough estimate of tick size.\n\t    // Otherwise, assume interval is already a time interval and use it.\n\t    if (typeof interval === \"number\") {\n\t      var target = Math.abs(stop - start) / interval,\n\t          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n\t      if (i === tickIntervals.length) {\n\t        step = tickStep(start / durationYear, stop / durationYear, interval);\n\t        interval = year$$1;\n\t      } else if (i) {\n\t        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n\t        step = i[1];\n\t        interval = i[0];\n\t      } else {\n\t        step = tickStep(start, stop, interval);\n\t        interval = millisecond$$1;\n\t      }\n\t    }\n\t\n\t    return step == null ? interval : interval.every(step);\n\t  }\n\t\n\t  scale.invert = function(y) {\n\t    return new Date(invert(y));\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? domain(map$3.call(_, number$2)) : domain().map(date$1);\n\t  };\n\t\n\t  scale.ticks = function(interval, step) {\n\t    var d = domain(),\n\t        t0 = d[0],\n\t        t1 = d[d.length - 1],\n\t        r = t1 < t0,\n\t        t;\n\t    if (r) t = t0, t0 = t1, t1 = t;\n\t    t = tickInterval(interval, t0, t1, step);\n\t    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n\t    return r ? t.reverse() : t;\n\t  };\n\t\n\t  scale.tickFormat = function(count, specifier) {\n\t    return specifier == null ? tickFormat : format(specifier);\n\t  };\n\t\n\t  scale.nice = function(interval, step) {\n\t    var d = domain();\n\t    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n\t        ? domain(nice(d, interval))\n\t        : scale;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format));\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tvar time = function() {\n\t  return calendar(year, month, sunday, day, hour, minute, second, millisecond, exports.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n\t};\n\t\n\tvar utcTime = function() {\n\t  return calendar(utcYear, utcMonth, utcSunday, utcDay, utcHour, utcMinute, second, millisecond, exports.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n\t};\n\t\n\tvar colors = function(s) {\n\t  return s.match(/.{6}/g).map(function(x) {\n\t    return \"#\" + x;\n\t  });\n\t};\n\t\n\tvar category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\t\n\tvar category20b = colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n\t\n\tvar category20c = colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n\t\n\tvar category20 = colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n\t\n\tvar cubehelix$3 = cubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n\t\n\tvar warm = cubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\t\n\tvar cool = cubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\t\n\tvar rainbow = cubehelix();\n\t\n\tvar rainbow$1 = function(t) {\n\t  if (t < 0 || t > 1) t -= Math.floor(t);\n\t  var ts = Math.abs(t - 0.5);\n\t  rainbow.h = 360 * t - 100;\n\t  rainbow.s = 1.5 - 1.5 * ts;\n\t  rainbow.l = 0.8 - 0.9 * ts;\n\t  return rainbow + \"\";\n\t};\n\t\n\tfunction ramp(range) {\n\t  var n = range.length;\n\t  return function(t) {\n\t    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n\t  };\n\t}\n\t\n\tvar viridis = ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\t\n\tvar magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\t\n\tvar inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\t\n\tvar plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\t\n\tfunction sequential(interpolator) {\n\t  var x0 = 0,\n\t      x1 = 1,\n\t      clamp = false;\n\t\n\t  function scale(x) {\n\t    var t = (x - x0) / (x1 - x0);\n\t    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n\t  };\n\t\n\t  scale.clamp = function(_) {\n\t    return arguments.length ? (clamp = !!_, scale) : clamp;\n\t  };\n\t\n\t  scale.interpolator = function(_) {\n\t    return arguments.length ? (interpolator = _, scale) : interpolator;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tvar constant$10 = function(x) {\n\t  return function constant() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar abs$1 = Math.abs;\n\tvar atan2$1 = Math.atan2;\n\tvar cos$2 = Math.cos;\n\tvar max$2 = Math.max;\n\tvar min$1 = Math.min;\n\tvar sin$2 = Math.sin;\n\tvar sqrt$2 = Math.sqrt;\n\t\n\tvar epsilon$3 = 1e-12;\n\tvar pi$4 = Math.PI;\n\tvar halfPi$3 = pi$4 / 2;\n\tvar tau$4 = 2 * pi$4;\n\t\n\tfunction acos$1(x) {\n\t  return x > 1 ? 0 : x < -1 ? pi$4 : Math.acos(x);\n\t}\n\t\n\tfunction asin$1(x) {\n\t  return x >= 1 ? halfPi$3 : x <= -1 ? -halfPi$3 : Math.asin(x);\n\t}\n\t\n\tfunction arcInnerRadius(d) {\n\t  return d.innerRadius;\n\t}\n\t\n\tfunction arcOuterRadius(d) {\n\t  return d.outerRadius;\n\t}\n\t\n\tfunction arcStartAngle(d) {\n\t  return d.startAngle;\n\t}\n\t\n\tfunction arcEndAngle(d) {\n\t  return d.endAngle;\n\t}\n\t\n\tfunction arcPadAngle(d) {\n\t  return d && d.padAngle; // Note: optional!\n\t}\n\t\n\tfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n\t  var x10 = x1 - x0, y10 = y1 - y0,\n\t      x32 = x3 - x2, y32 = y3 - y2,\n\t      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n\t  return [x0 + t * x10, y0 + t * y10];\n\t}\n\t\n\t// Compute perpendicular offset line of length rc.\n\t// http://mathworld.wolfram.com/Circle-LineIntersection.html\n\tfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n\t  var x01 = x0 - x1,\n\t      y01 = y0 - y1,\n\t      lo = (cw ? rc : -rc) / sqrt$2(x01 * x01 + y01 * y01),\n\t      ox = lo * y01,\n\t      oy = -lo * x01,\n\t      x11 = x0 + ox,\n\t      y11 = y0 + oy,\n\t      x10 = x1 + ox,\n\t      y10 = y1 + oy,\n\t      x00 = (x11 + x10) / 2,\n\t      y00 = (y11 + y10) / 2,\n\t      dx = x10 - x11,\n\t      dy = y10 - y11,\n\t      d2 = dx * dx + dy * dy,\n\t      r = r1 - rc,\n\t      D = x11 * y10 - x10 * y11,\n\t      d = (dy < 0 ? -1 : 1) * sqrt$2(max$2(0, r * r * d2 - D * D)),\n\t      cx0 = (D * dy - dx * d) / d2,\n\t      cy0 = (-D * dx - dy * d) / d2,\n\t      cx1 = (D * dy + dx * d) / d2,\n\t      cy1 = (-D * dx + dy * d) / d2,\n\t      dx0 = cx0 - x00,\n\t      dy0 = cy0 - y00,\n\t      dx1 = cx1 - x00,\n\t      dy1 = cy1 - y00;\n\t\n\t  // Pick the closer of the two intersection points.\n\t  // TODO Is there a faster way to determine which intersection to use?\n\t  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\t\n\t  return {\n\t    cx: cx0,\n\t    cy: cy0,\n\t    x01: -ox,\n\t    y01: -oy,\n\t    x11: cx0 * (r1 / r - 1),\n\t    y11: cy0 * (r1 / r - 1)\n\t  };\n\t}\n\t\n\tvar arc = function() {\n\t  var innerRadius = arcInnerRadius,\n\t      outerRadius = arcOuterRadius,\n\t      cornerRadius = constant$10(0),\n\t      padRadius = null,\n\t      startAngle = arcStartAngle,\n\t      endAngle = arcEndAngle,\n\t      padAngle = arcPadAngle,\n\t      context = null;\n\t\n\t  function arc() {\n\t    var buffer,\n\t        r,\n\t        r0 = +innerRadius.apply(this, arguments),\n\t        r1 = +outerRadius.apply(this, arguments),\n\t        a0 = startAngle.apply(this, arguments) - halfPi$3,\n\t        a1 = endAngle.apply(this, arguments) - halfPi$3,\n\t        da = abs$1(a1 - a0),\n\t        cw = a1 > a0;\n\t\n\t    if (!context) context = buffer = path();\n\t\n\t    // Ensure that the outer radius is always larger than the inner radius.\n\t    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\t\n\t    // Is it a point?\n\t    if (!(r1 > epsilon$3)) context.moveTo(0, 0);\n\t\n\t    // Or is it a circle or annulus?\n\t    else if (da > tau$4 - epsilon$3) {\n\t      context.moveTo(r1 * cos$2(a0), r1 * sin$2(a0));\n\t      context.arc(0, 0, r1, a0, a1, !cw);\n\t      if (r0 > epsilon$3) {\n\t        context.moveTo(r0 * cos$2(a1), r0 * sin$2(a1));\n\t        context.arc(0, 0, r0, a1, a0, cw);\n\t      }\n\t    }\n\t\n\t    // Or is it a circular or annular sector?\n\t    else {\n\t      var a01 = a0,\n\t          a11 = a1,\n\t          a00 = a0,\n\t          a10 = a1,\n\t          da0 = da,\n\t          da1 = da,\n\t          ap = padAngle.apply(this, arguments) / 2,\n\t          rp = (ap > epsilon$3) && (padRadius ? +padRadius.apply(this, arguments) : sqrt$2(r0 * r0 + r1 * r1)),\n\t          rc = min$1(abs$1(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n\t          rc0 = rc,\n\t          rc1 = rc,\n\t          t0,\n\t          t1;\n\t\n\t      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n\t      if (rp > epsilon$3) {\n\t        var p0 = asin$1(rp / r0 * sin$2(ap)),\n\t            p1 = asin$1(rp / r1 * sin$2(ap));\n\t        if ((da0 -= p0 * 2) > epsilon$3) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n\t        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n\t        if ((da1 -= p1 * 2) > epsilon$3) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n\t        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n\t      }\n\t\n\t      var x01 = r1 * cos$2(a01),\n\t          y01 = r1 * sin$2(a01),\n\t          x10 = r0 * cos$2(a10),\n\t          y10 = r0 * sin$2(a10);\n\t\n\t      // Apply rounded corners?\n\t      if (rc > epsilon$3) {\n\t        var x11 = r1 * cos$2(a11),\n\t            y11 = r1 * sin$2(a11),\n\t            x00 = r0 * cos$2(a00),\n\t            y00 = r0 * sin$2(a00);\n\t\n\t        // Restrict the corner radius according to the sector angle.\n\t        if (da < pi$4) {\n\t          var oc = da0 > epsilon$3 ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n\t              ax = x01 - oc[0],\n\t              ay = y01 - oc[1],\n\t              bx = x11 - oc[0],\n\t              by = y11 - oc[1],\n\t              kc = 1 / sin$2(acos$1((ax * bx + ay * by) / (sqrt$2(ax * ax + ay * ay) * sqrt$2(bx * bx + by * by))) / 2),\n\t              lc = sqrt$2(oc[0] * oc[0] + oc[1] * oc[1]);\n\t          rc0 = min$1(rc, (r0 - lc) / (kc - 1));\n\t          rc1 = min$1(rc, (r1 - lc) / (kc + 1));\n\t        }\n\t      }\n\t\n\t      // Is the sector collapsed to a line?\n\t      if (!(da1 > epsilon$3)) context.moveTo(x01, y01);\n\t\n\t      // Does the sector’s outer ring have rounded corners?\n\t      else if (rc1 > epsilon$3) {\n\t        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n\t        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\t\n\t        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\t\n\t        // Have the corners merged?\n\t        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2$1(t0.y01, t0.x01), atan2$1(t1.y01, t1.x01), !cw);\n\t\n\t        // Otherwise, draw the two corners and the ring.\n\t        else {\n\t          context.arc(t0.cx, t0.cy, rc1, atan2$1(t0.y01, t0.x01), atan2$1(t0.y11, t0.x11), !cw);\n\t          context.arc(0, 0, r1, atan2$1(t0.cy + t0.y11, t0.cx + t0.x11), atan2$1(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n\t          context.arc(t1.cx, t1.cy, rc1, atan2$1(t1.y11, t1.x11), atan2$1(t1.y01, t1.x01), !cw);\n\t        }\n\t      }\n\t\n\t      // Or is the outer ring just a circular arc?\n\t      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\t\n\t      // Is there no inner ring, and it’s a circular sector?\n\t      // Or perhaps it’s an annular sector collapsed due to padding?\n\t      if (!(r0 > epsilon$3) || !(da0 > epsilon$3)) context.lineTo(x10, y10);\n\t\n\t      // Does the sector’s inner ring (or point) have rounded corners?\n\t      else if (rc0 > epsilon$3) {\n\t        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n\t        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\t\n\t        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\t\n\t        // Have the corners merged?\n\t        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2$1(t0.y01, t0.x01), atan2$1(t1.y01, t1.x01), !cw);\n\t\n\t        // Otherwise, draw the two corners and the ring.\n\t        else {\n\t          context.arc(t0.cx, t0.cy, rc0, atan2$1(t0.y01, t0.x01), atan2$1(t0.y11, t0.x11), !cw);\n\t          context.arc(0, 0, r0, atan2$1(t0.cy + t0.y11, t0.cx + t0.x11), atan2$1(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n\t          context.arc(t1.cx, t1.cy, rc0, atan2$1(t1.y11, t1.x11), atan2$1(t1.y01, t1.x01), !cw);\n\t        }\n\t      }\n\t\n\t      // Or is the inner ring just a circular arc?\n\t      else context.arc(0, 0, r0, a10, a00, cw);\n\t    }\n\t\n\t    context.closePath();\n\t\n\t    if (buffer) return context = null, buffer + \"\" || null;\n\t  }\n\t\n\t  arc.centroid = function() {\n\t    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n\t        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi$4 / 2;\n\t    return [cos$2(a) * r, sin$2(a) * r];\n\t  };\n\t\n\t  arc.innerRadius = function(_) {\n\t    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : innerRadius;\n\t  };\n\t\n\t  arc.outerRadius = function(_) {\n\t    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : outerRadius;\n\t  };\n\t\n\t  arc.cornerRadius = function(_) {\n\t    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : cornerRadius;\n\t  };\n\t\n\t  arc.padRadius = function(_) {\n\t    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), arc) : padRadius;\n\t  };\n\t\n\t  arc.startAngle = function(_) {\n\t    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : startAngle;\n\t  };\n\t\n\t  arc.endAngle = function(_) {\n\t    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : endAngle;\n\t  };\n\t\n\t  arc.padAngle = function(_) {\n\t    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : padAngle;\n\t  };\n\t\n\t  arc.context = function(_) {\n\t    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n\t  };\n\t\n\t  return arc;\n\t};\n\t\n\tfunction Linear(context) {\n\t  this._context = context;\n\t}\n\t\n\tLinear.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; // proceed\n\t      default: this._context.lineTo(x, y); break;\n\t    }\n\t  }\n\t};\n\t\n\tvar curveLinear = function(context) {\n\t  return new Linear(context);\n\t};\n\t\n\tfunction x$3(p) {\n\t  return p[0];\n\t}\n\t\n\tfunction y$3(p) {\n\t  return p[1];\n\t}\n\t\n\tvar line = function() {\n\t  var x$$1 = x$3,\n\t      y$$1 = y$3,\n\t      defined = constant$10(true),\n\t      context = null,\n\t      curve = curveLinear,\n\t      output = null;\n\t\n\t  function line(data) {\n\t    var i,\n\t        n = data.length,\n\t        d,\n\t        defined0 = false,\n\t        buffer;\n\t\n\t    if (context == null) output = curve(buffer = path());\n\t\n\t    for (i = 0; i <= n; ++i) {\n\t      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n\t        if (defined0 = !defined0) output.lineStart();\n\t        else output.lineEnd();\n\t      }\n\t      if (defined0) output.point(+x$$1(d, i, data), +y$$1(d, i, data));\n\t    }\n\t\n\t    if (buffer) return output = null, buffer + \"\" || null;\n\t  }\n\t\n\t  line.x = function(_) {\n\t    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$10(+_), line) : x$$1;\n\t  };\n\t\n\t  line.y = function(_) {\n\t    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$10(+_), line) : y$$1;\n\t  };\n\t\n\t  line.defined = function(_) {\n\t    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$10(!!_), line) : defined;\n\t  };\n\t\n\t  line.curve = function(_) {\n\t    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n\t  };\n\t\n\t  line.context = function(_) {\n\t    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n\t  };\n\t\n\t  return line;\n\t};\n\t\n\tvar area$2 = function() {\n\t  var x0 = x$3,\n\t      x1 = null,\n\t      y0 = constant$10(0),\n\t      y1 = y$3,\n\t      defined = constant$10(true),\n\t      context = null,\n\t      curve = curveLinear,\n\t      output = null;\n\t\n\t  function area(data) {\n\t    var i,\n\t        j,\n\t        k,\n\t        n = data.length,\n\t        d,\n\t        defined0 = false,\n\t        buffer,\n\t        x0z = new Array(n),\n\t        y0z = new Array(n);\n\t\n\t    if (context == null) output = curve(buffer = path());\n\t\n\t    for (i = 0; i <= n; ++i) {\n\t      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n\t        if (defined0 = !defined0) {\n\t          j = i;\n\t          output.areaStart();\n\t          output.lineStart();\n\t        } else {\n\t          output.lineEnd();\n\t          output.lineStart();\n\t          for (k = i - 1; k >= j; --k) {\n\t            output.point(x0z[k], y0z[k]);\n\t          }\n\t          output.lineEnd();\n\t          output.areaEnd();\n\t        }\n\t      }\n\t      if (defined0) {\n\t        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n\t        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n\t      }\n\t    }\n\t\n\t    if (buffer) return output = null, buffer + \"\" || null;\n\t  }\n\t\n\t  function arealine() {\n\t    return line().defined(defined).curve(curve).context(context);\n\t  }\n\t\n\t  area.x = function(_) {\n\t    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$10(+_), x1 = null, area) : x0;\n\t  };\n\t\n\t  area.x0 = function(_) {\n\t    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$10(+_), area) : x0;\n\t  };\n\t\n\t  area.x1 = function(_) {\n\t    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), area) : x1;\n\t  };\n\t\n\t  area.y = function(_) {\n\t    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$10(+_), y1 = null, area) : y0;\n\t  };\n\t\n\t  area.y0 = function(_) {\n\t    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$10(+_), area) : y0;\n\t  };\n\t\n\t  area.y1 = function(_) {\n\t    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), area) : y1;\n\t  };\n\t\n\t  area.lineX0 =\n\t  area.lineY0 = function() {\n\t    return arealine().x(x0).y(y0);\n\t  };\n\t\n\t  area.lineY1 = function() {\n\t    return arealine().x(x0).y(y1);\n\t  };\n\t\n\t  area.lineX1 = function() {\n\t    return arealine().x(x1).y(y0);\n\t  };\n\t\n\t  area.defined = function(_) {\n\t    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$10(!!_), area) : defined;\n\t  };\n\t\n\t  area.curve = function(_) {\n\t    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n\t  };\n\t\n\t  area.context = function(_) {\n\t    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n\t  };\n\t\n\t  return area;\n\t};\n\t\n\tvar descending$1 = function(a, b) {\n\t  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n\t};\n\t\n\tvar identity$7 = function(d) {\n\t  return d;\n\t};\n\t\n\tvar pie = function() {\n\t  var value = identity$7,\n\t      sortValues = descending$1,\n\t      sort = null,\n\t      startAngle = constant$10(0),\n\t      endAngle = constant$10(tau$4),\n\t      padAngle = constant$10(0);\n\t\n\t  function pie(data) {\n\t    var i,\n\t        n = data.length,\n\t        j,\n\t        k,\n\t        sum = 0,\n\t        index = new Array(n),\n\t        arcs = new Array(n),\n\t        a0 = +startAngle.apply(this, arguments),\n\t        da = Math.min(tau$4, Math.max(-tau$4, endAngle.apply(this, arguments) - a0)),\n\t        a1,\n\t        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n\t        pa = p * (da < 0 ? -1 : 1),\n\t        v;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n\t        sum += v;\n\t      }\n\t    }\n\t\n\t    // Optionally sort the arcs by previously-computed values or by data.\n\t    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n\t    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\t\n\t    // Compute the arcs! They are stored in the original data's order.\n\t    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n\t      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n\t        data: data[j],\n\t        index: i,\n\t        value: v,\n\t        startAngle: a0,\n\t        endAngle: a1,\n\t        padAngle: p\n\t      };\n\t    }\n\t\n\t    return arcs;\n\t  }\n\t\n\t  pie.value = function(_) {\n\t    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$10(+_), pie) : value;\n\t  };\n\t\n\t  pie.sortValues = function(_) {\n\t    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n\t  };\n\t\n\t  pie.sort = function(_) {\n\t    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n\t  };\n\t\n\t  pie.startAngle = function(_) {\n\t    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : startAngle;\n\t  };\n\t\n\t  pie.endAngle = function(_) {\n\t    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : endAngle;\n\t  };\n\t\n\t  pie.padAngle = function(_) {\n\t    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : padAngle;\n\t  };\n\t\n\t  return pie;\n\t};\n\t\n\tvar curveRadialLinear = curveRadial(curveLinear);\n\t\n\tfunction Radial(curve) {\n\t  this._curve = curve;\n\t}\n\t\n\tRadial.prototype = {\n\t  areaStart: function() {\n\t    this._curve.areaStart();\n\t  },\n\t  areaEnd: function() {\n\t    this._curve.areaEnd();\n\t  },\n\t  lineStart: function() {\n\t    this._curve.lineStart();\n\t  },\n\t  lineEnd: function() {\n\t    this._curve.lineEnd();\n\t  },\n\t  point: function(a, r) {\n\t    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n\t  }\n\t};\n\t\n\tfunction curveRadial(curve) {\n\t\n\t  function radial(context) {\n\t    return new Radial(curve(context));\n\t  }\n\t\n\t  radial._curve = curve;\n\t\n\t  return radial;\n\t}\n\t\n\tfunction radialLine(l) {\n\t  var c = l.curve;\n\t\n\t  l.angle = l.x, delete l.x;\n\t  l.radius = l.y, delete l.y;\n\t\n\t  l.curve = function(_) {\n\t    return arguments.length ? c(curveRadial(_)) : c()._curve;\n\t  };\n\t\n\t  return l;\n\t}\n\t\n\tvar radialLine$1 = function() {\n\t  return radialLine(line().curve(curveRadialLinear));\n\t};\n\t\n\tvar radialArea = function() {\n\t  var a = area$2().curve(curveRadialLinear),\n\t      c = a.curve,\n\t      x0 = a.lineX0,\n\t      x1 = a.lineX1,\n\t      y0 = a.lineY0,\n\t      y1 = a.lineY1;\n\t\n\t  a.angle = a.x, delete a.x;\n\t  a.startAngle = a.x0, delete a.x0;\n\t  a.endAngle = a.x1, delete a.x1;\n\t  a.radius = a.y, delete a.y;\n\t  a.innerRadius = a.y0, delete a.y0;\n\t  a.outerRadius = a.y1, delete a.y1;\n\t  a.lineStartAngle = function() { return radialLine(x0()); }, delete a.lineX0;\n\t  a.lineEndAngle = function() { return radialLine(x1()); }, delete a.lineX1;\n\t  a.lineInnerRadius = function() { return radialLine(y0()); }, delete a.lineY0;\n\t  a.lineOuterRadius = function() { return radialLine(y1()); }, delete a.lineY1;\n\t\n\t  a.curve = function(_) {\n\t    return arguments.length ? c(curveRadial(_)) : c()._curve;\n\t  };\n\t\n\t  return a;\n\t};\n\t\n\tvar circle$2 = {\n\t  draw: function(context, size) {\n\t    var r = Math.sqrt(size / pi$4);\n\t    context.moveTo(r, 0);\n\t    context.arc(0, 0, r, 0, tau$4);\n\t  }\n\t};\n\t\n\tvar cross$2 = {\n\t  draw: function(context, size) {\n\t    var r = Math.sqrt(size / 5) / 2;\n\t    context.moveTo(-3 * r, -r);\n\t    context.lineTo(-r, -r);\n\t    context.lineTo(-r, -3 * r);\n\t    context.lineTo(r, -3 * r);\n\t    context.lineTo(r, -r);\n\t    context.lineTo(3 * r, -r);\n\t    context.lineTo(3 * r, r);\n\t    context.lineTo(r, r);\n\t    context.lineTo(r, 3 * r);\n\t    context.lineTo(-r, 3 * r);\n\t    context.lineTo(-r, r);\n\t    context.lineTo(-3 * r, r);\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar tan30 = Math.sqrt(1 / 3);\n\tvar tan30_2 = tan30 * 2;\n\t\n\tvar diamond = {\n\t  draw: function(context, size) {\n\t    var y = Math.sqrt(size / tan30_2),\n\t        x = y * tan30;\n\t    context.moveTo(0, -y);\n\t    context.lineTo(x, 0);\n\t    context.lineTo(0, y);\n\t    context.lineTo(-x, 0);\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar ka = 0.89081309152928522810;\n\tvar kr = Math.sin(pi$4 / 10) / Math.sin(7 * pi$4 / 10);\n\tvar kx = Math.sin(tau$4 / 10) * kr;\n\tvar ky = -Math.cos(tau$4 / 10) * kr;\n\t\n\tvar star = {\n\t  draw: function(context, size) {\n\t    var r = Math.sqrt(size * ka),\n\t        x = kx * r,\n\t        y = ky * r;\n\t    context.moveTo(0, -r);\n\t    context.lineTo(x, y);\n\t    for (var i = 1; i < 5; ++i) {\n\t      var a = tau$4 * i / 5,\n\t          c = Math.cos(a),\n\t          s = Math.sin(a);\n\t      context.lineTo(s * r, -c * r);\n\t      context.lineTo(c * x - s * y, s * x + c * y);\n\t    }\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar square = {\n\t  draw: function(context, size) {\n\t    var w = Math.sqrt(size),\n\t        x = -w / 2;\n\t    context.rect(x, x, w, w);\n\t  }\n\t};\n\t\n\tvar sqrt3 = Math.sqrt(3);\n\t\n\tvar triangle = {\n\t  draw: function(context, size) {\n\t    var y = -Math.sqrt(size / (sqrt3 * 3));\n\t    context.moveTo(0, y * 2);\n\t    context.lineTo(-sqrt3 * y, -y);\n\t    context.lineTo(sqrt3 * y, -y);\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar c = -0.5;\n\tvar s = Math.sqrt(3) / 2;\n\tvar k = 1 / Math.sqrt(12);\n\tvar a = (k / 2 + 1) * 3;\n\t\n\tvar wye = {\n\t  draw: function(context, size) {\n\t    var r = Math.sqrt(size / a),\n\t        x0 = r / 2,\n\t        y0 = r * k,\n\t        x1 = x0,\n\t        y1 = r * k + r,\n\t        x2 = -x1,\n\t        y2 = y1;\n\t    context.moveTo(x0, y0);\n\t    context.lineTo(x1, y1);\n\t    context.lineTo(x2, y2);\n\t    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n\t    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n\t    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n\t    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n\t    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n\t    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar symbols = [\n\t  circle$2,\n\t  cross$2,\n\t  diamond,\n\t  square,\n\t  star,\n\t  triangle,\n\t  wye\n\t];\n\t\n\tvar symbol = function() {\n\t  var type = constant$10(circle$2),\n\t      size = constant$10(64),\n\t      context = null;\n\t\n\t  function symbol() {\n\t    var buffer;\n\t    if (!context) context = buffer = path();\n\t    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n\t    if (buffer) return context = null, buffer + \"\" || null;\n\t  }\n\t\n\t  symbol.type = function(_) {\n\t    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant$10(_), symbol) : type;\n\t  };\n\t\n\t  symbol.size = function(_) {\n\t    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant$10(+_), symbol) : size;\n\t  };\n\t\n\t  symbol.context = function(_) {\n\t    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n\t  };\n\t\n\t  return symbol;\n\t};\n\t\n\tvar noop$2 = function() {};\n\t\n\tfunction point$2(that, x, y) {\n\t  that._context.bezierCurveTo(\n\t    (2 * that._x0 + that._x1) / 3,\n\t    (2 * that._y0 + that._y1) / 3,\n\t    (that._x0 + 2 * that._x1) / 3,\n\t    (that._y0 + 2 * that._y1) / 3,\n\t    (that._x0 + 4 * that._x1 + x) / 6,\n\t    (that._y0 + 4 * that._y1 + y) / 6\n\t  );\n\t}\n\t\n\tfunction Basis(context) {\n\t  this._context = context;\n\t}\n\t\n\tBasis.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 =\n\t    this._y0 = this._y1 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 3: point$2(this, this._x1, this._y1); // proceed\n\t      case 2: this._context.lineTo(this._x1, this._y1); break;\n\t    }\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n\t      default: point$2(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = x;\n\t    this._y0 = this._y1, this._y1 = y;\n\t  }\n\t};\n\t\n\tvar basis$2 = function(context) {\n\t  return new Basis(context);\n\t};\n\t\n\tfunction BasisClosed(context) {\n\t  this._context = context;\n\t}\n\t\n\tBasisClosed.prototype = {\n\t  areaStart: noop$2,\n\t  areaEnd: noop$2,\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n\t    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 1: {\n\t        this._context.moveTo(this._x2, this._y2);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 2: {\n\t        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n\t        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 3: {\n\t        this.point(this._x2, this._y2);\n\t        this.point(this._x3, this._y3);\n\t        this.point(this._x4, this._y4);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n\t      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n\t      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n\t      default: point$2(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = x;\n\t    this._y0 = this._y1, this._y1 = y;\n\t  }\n\t};\n\t\n\tvar basisClosed$1 = function(context) {\n\t  return new BasisClosed(context);\n\t};\n\t\n\tfunction BasisOpen(context) {\n\t  this._context = context;\n\t}\n\t\n\tBasisOpen.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 =\n\t    this._y0 = this._y1 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n\t      case 3: this._point = 4; // proceed\n\t      default: point$2(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = x;\n\t    this._y0 = this._y1, this._y1 = y;\n\t  }\n\t};\n\t\n\tvar basisOpen = function(context) {\n\t  return new BasisOpen(context);\n\t};\n\t\n\tfunction Bundle(context, beta) {\n\t  this._basis = new Basis(context);\n\t  this._beta = beta;\n\t}\n\t\n\tBundle.prototype = {\n\t  lineStart: function() {\n\t    this._x = [];\n\t    this._y = [];\n\t    this._basis.lineStart();\n\t  },\n\t  lineEnd: function() {\n\t    var x = this._x,\n\t        y = this._y,\n\t        j = x.length - 1;\n\t\n\t    if (j > 0) {\n\t      var x0 = x[0],\n\t          y0 = y[0],\n\t          dx = x[j] - x0,\n\t          dy = y[j] - y0,\n\t          i = -1,\n\t          t;\n\t\n\t      while (++i <= j) {\n\t        t = i / j;\n\t        this._basis.point(\n\t          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n\t          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n\t        );\n\t      }\n\t    }\n\t\n\t    this._x = this._y = null;\n\t    this._basis.lineEnd();\n\t  },\n\t  point: function(x, y) {\n\t    this._x.push(+x);\n\t    this._y.push(+y);\n\t  }\n\t};\n\t\n\tvar bundle = ((function custom(beta) {\n\t\n\t  function bundle(context) {\n\t    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n\t  }\n\t\n\t  bundle.beta = function(beta) {\n\t    return custom(+beta);\n\t  };\n\t\n\t  return bundle;\n\t}))(0.85);\n\t\n\tfunction point$3(that, x, y) {\n\t  that._context.bezierCurveTo(\n\t    that._x1 + that._k * (that._x2 - that._x0),\n\t    that._y1 + that._k * (that._y2 - that._y0),\n\t    that._x2 + that._k * (that._x1 - x),\n\t    that._y2 + that._k * (that._y1 - y),\n\t    that._x2,\n\t    that._y2\n\t  );\n\t}\n\t\n\tfunction Cardinal(context, tension) {\n\t  this._context = context;\n\t  this._k = (1 - tension) / 6;\n\t}\n\t\n\tCardinal.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 =\n\t    this._y0 = this._y1 = this._y2 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 2: this._context.lineTo(this._x2, this._y2); break;\n\t      case 3: point$3(this, this._x1, this._y1); break;\n\t    }\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n\t      case 2: this._point = 3; // proceed\n\t      default: point$3(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar cardinal = ((function custom(tension) {\n\t\n\t  function cardinal(context) {\n\t    return new Cardinal(context, tension);\n\t  }\n\t\n\t  cardinal.tension = function(tension) {\n\t    return custom(+tension);\n\t  };\n\t\n\t  return cardinal;\n\t}))(0);\n\t\n\tfunction CardinalClosed(context, tension) {\n\t  this._context = context;\n\t  this._k = (1 - tension) / 6;\n\t}\n\t\n\tCardinalClosed.prototype = {\n\t  areaStart: noop$2,\n\t  areaEnd: noop$2,\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n\t    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 1: {\n\t        this._context.moveTo(this._x3, this._y3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 2: {\n\t        this._context.lineTo(this._x3, this._y3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 3: {\n\t        this.point(this._x3, this._y3);\n\t        this.point(this._x4, this._y4);\n\t        this.point(this._x5, this._y5);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n\t      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n\t      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n\t      default: point$3(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar cardinalClosed = ((function custom(tension) {\n\t\n\t  function cardinal(context) {\n\t    return new CardinalClosed(context, tension);\n\t  }\n\t\n\t  cardinal.tension = function(tension) {\n\t    return custom(+tension);\n\t  };\n\t\n\t  return cardinal;\n\t}))(0);\n\t\n\tfunction CardinalOpen(context, tension) {\n\t  this._context = context;\n\t  this._k = (1 - tension) / 6;\n\t}\n\t\n\tCardinalOpen.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 =\n\t    this._y0 = this._y1 = this._y2 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n\t      case 3: this._point = 4; // proceed\n\t      default: point$3(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar cardinalOpen = ((function custom(tension) {\n\t\n\t  function cardinal(context) {\n\t    return new CardinalOpen(context, tension);\n\t  }\n\t\n\t  cardinal.tension = function(tension) {\n\t    return custom(+tension);\n\t  };\n\t\n\t  return cardinal;\n\t}))(0);\n\t\n\tfunction point$4(that, x, y) {\n\t  var x1 = that._x1,\n\t      y1 = that._y1,\n\t      x2 = that._x2,\n\t      y2 = that._y2;\n\t\n\t  if (that._l01_a > epsilon$3) {\n\t    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n\t        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n\t    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n\t    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n\t  }\n\t\n\t  if (that._l23_a > epsilon$3) {\n\t    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n\t        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n\t    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n\t    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n\t  }\n\t\n\t  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n\t}\n\t\n\tfunction CatmullRom(context, alpha) {\n\t  this._context = context;\n\t  this._alpha = alpha;\n\t}\n\t\n\tCatmullRom.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 =\n\t    this._y0 = this._y1 = this._y2 = NaN;\n\t    this._l01_a = this._l12_a = this._l23_a =\n\t    this._l01_2a = this._l12_2a = this._l23_2a =\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 2: this._context.lineTo(this._x2, this._y2); break;\n\t      case 3: this.point(this._x2, this._y2); break;\n\t    }\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t\n\t    if (this._point) {\n\t      var x23 = this._x2 - x,\n\t          y23 = this._y2 - y;\n\t      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n\t    }\n\t\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; // proceed\n\t      default: point$4(this, x, y); break;\n\t    }\n\t\n\t    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n\t    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar catmullRom = ((function custom(alpha) {\n\t\n\t  function catmullRom(context) {\n\t    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n\t  }\n\t\n\t  catmullRom.alpha = function(alpha) {\n\t    return custom(+alpha);\n\t  };\n\t\n\t  return catmullRom;\n\t}))(0.5);\n\t\n\tfunction CatmullRomClosed(context, alpha) {\n\t  this._context = context;\n\t  this._alpha = alpha;\n\t}\n\t\n\tCatmullRomClosed.prototype = {\n\t  areaStart: noop$2,\n\t  areaEnd: noop$2,\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n\t    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n\t    this._l01_a = this._l12_a = this._l23_a =\n\t    this._l01_2a = this._l12_2a = this._l23_2a =\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 1: {\n\t        this._context.moveTo(this._x3, this._y3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 2: {\n\t        this._context.lineTo(this._x3, this._y3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 3: {\n\t        this.point(this._x3, this._y3);\n\t        this.point(this._x4, this._y4);\n\t        this.point(this._x5, this._y5);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t\n\t    if (this._point) {\n\t      var x23 = this._x2 - x,\n\t          y23 = this._y2 - y;\n\t      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n\t    }\n\t\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n\t      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n\t      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n\t      default: point$4(this, x, y); break;\n\t    }\n\t\n\t    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n\t    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar catmullRomClosed = ((function custom(alpha) {\n\t\n\t  function catmullRom(context) {\n\t    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n\t  }\n\t\n\t  catmullRom.alpha = function(alpha) {\n\t    return custom(+alpha);\n\t  };\n\t\n\t  return catmullRom;\n\t}))(0.5);\n\t\n\tfunction CatmullRomOpen(context, alpha) {\n\t  this._context = context;\n\t  this._alpha = alpha;\n\t}\n\t\n\tCatmullRomOpen.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 =\n\t    this._y0 = this._y1 = this._y2 = NaN;\n\t    this._l01_a = this._l12_a = this._l23_a =\n\t    this._l01_2a = this._l12_2a = this._l23_2a =\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t\n\t    if (this._point) {\n\t      var x23 = this._x2 - x,\n\t          y23 = this._y2 - y;\n\t      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n\t    }\n\t\n\t    switch (this._point) {\n\t      case 0: this._point = 1; break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n\t      case 3: this._point = 4; // proceed\n\t      default: point$4(this, x, y); break;\n\t    }\n\t\n\t    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n\t    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar catmullRomOpen = ((function custom(alpha) {\n\t\n\t  function catmullRom(context) {\n\t    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n\t  }\n\t\n\t  catmullRom.alpha = function(alpha) {\n\t    return custom(+alpha);\n\t  };\n\t\n\t  return catmullRom;\n\t}))(0.5);\n\t\n\tfunction LinearClosed(context) {\n\t  this._context = context;\n\t}\n\t\n\tLinearClosed.prototype = {\n\t  areaStart: noop$2,\n\t  areaEnd: noop$2,\n\t  lineStart: function() {\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._point) this._context.closePath();\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    if (this._point) this._context.lineTo(x, y);\n\t    else this._point = 1, this._context.moveTo(x, y);\n\t  }\n\t};\n\t\n\tvar linearClosed = function(context) {\n\t  return new LinearClosed(context);\n\t};\n\t\n\tfunction sign$1(x) {\n\t  return x < 0 ? -1 : 1;\n\t}\n\t\n\t// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n\t// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n\t// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n\t// NOV(II), P. 443, 1990.\n\tfunction slope3(that, x2, y2) {\n\t  var h0 = that._x1 - that._x0,\n\t      h1 = x2 - that._x1,\n\t      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n\t      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n\t      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n\t  return (sign$1(s0) + sign$1(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n\t}\n\t\n\t// Calculate a one-sided slope.\n\tfunction slope2(that, t) {\n\t  var h = that._x1 - that._x0;\n\t  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n\t}\n\t\n\t// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n\t// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n\t// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\n\tfunction point$5(that, t0, t1) {\n\t  var x0 = that._x0,\n\t      y0 = that._y0,\n\t      x1 = that._x1,\n\t      y1 = that._y1,\n\t      dx = (x1 - x0) / 3;\n\t  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n\t}\n\t\n\tfunction MonotoneX(context) {\n\t  this._context = context;\n\t}\n\t\n\tMonotoneX.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 =\n\t    this._y0 = this._y1 =\n\t    this._t0 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 2: this._context.lineTo(this._x1, this._y1); break;\n\t      case 3: point$5(this, this._t0, slope2(this, this._t0)); break;\n\t    }\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    var t1 = NaN;\n\t\n\t    x = +x, y = +y;\n\t    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; point$5(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n\t      default: point$5(this, this._t0, t1 = slope3(this, x, y)); break;\n\t    }\n\t\n\t    this._x0 = this._x1, this._x1 = x;\n\t    this._y0 = this._y1, this._y1 = y;\n\t    this._t0 = t1;\n\t  }\n\t};\n\t\n\tfunction MonotoneY(context) {\n\t  this._context = new ReflectContext(context);\n\t}\n\t\n\t(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n\t  MonotoneX.prototype.point.call(this, y, x);\n\t};\n\t\n\tfunction ReflectContext(context) {\n\t  this._context = context;\n\t}\n\t\n\tReflectContext.prototype = {\n\t  moveTo: function(x, y) { this._context.moveTo(y, x); },\n\t  closePath: function() { this._context.closePath(); },\n\t  lineTo: function(x, y) { this._context.lineTo(y, x); },\n\t  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n\t};\n\t\n\tfunction monotoneX(context) {\n\t  return new MonotoneX(context);\n\t}\n\t\n\tfunction monotoneY(context) {\n\t  return new MonotoneY(context);\n\t}\n\t\n\tfunction Natural(context) {\n\t  this._context = context;\n\t}\n\t\n\tNatural.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x = [];\n\t    this._y = [];\n\t  },\n\t  lineEnd: function() {\n\t    var x = this._x,\n\t        y = this._y,\n\t        n = x.length;\n\t\n\t    if (n) {\n\t      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n\t      if (n === 2) {\n\t        this._context.lineTo(x[1], y[1]);\n\t      } else {\n\t        var px = controlPoints(x),\n\t            py = controlPoints(y);\n\t        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n\t          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n\t        }\n\t      }\n\t    }\n\t\n\t    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t    this._x = this._y = null;\n\t  },\n\t  point: function(x, y) {\n\t    this._x.push(+x);\n\t    this._y.push(+y);\n\t  }\n\t};\n\t\n\t// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\n\tfunction controlPoints(x) {\n\t  var i,\n\t      n = x.length - 1,\n\t      m,\n\t      a = new Array(n),\n\t      b = new Array(n),\n\t      r = new Array(n);\n\t  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n\t  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n\t  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n\t  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n\t  a[n - 1] = r[n - 1] / b[n - 1];\n\t  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n\t  b[n - 1] = (x[n] + a[n - 1]) / 2;\n\t  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n\t  return [a, b];\n\t}\n\t\n\tvar natural = function(context) {\n\t  return new Natural(context);\n\t};\n\t\n\tfunction Step(context, t) {\n\t  this._context = context;\n\t  this._t = t;\n\t}\n\t\n\tStep.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x = this._y = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; // proceed\n\t      default: {\n\t        if (this._t <= 0) {\n\t          this._context.lineTo(this._x, y);\n\t          this._context.lineTo(x, y);\n\t        } else {\n\t          var x1 = this._x * (1 - this._t) + x * this._t;\n\t          this._context.lineTo(x1, this._y);\n\t          this._context.lineTo(x1, y);\n\t        }\n\t        break;\n\t      }\n\t    }\n\t    this._x = x, this._y = y;\n\t  }\n\t};\n\t\n\tvar step = function(context) {\n\t  return new Step(context, 0.5);\n\t};\n\t\n\tfunction stepBefore(context) {\n\t  return new Step(context, 0);\n\t}\n\t\n\tfunction stepAfter(context) {\n\t  return new Step(context, 1);\n\t}\n\t\n\tvar slice$5 = Array.prototype.slice;\n\t\n\tvar none$1 = function(series, order) {\n\t  if (!((n = series.length) > 1)) return;\n\t  for (var i = 1, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n\t    s0 = s1, s1 = series[order[i]];\n\t    for (var j = 0; j < m; ++j) {\n\t      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n\t    }\n\t  }\n\t};\n\t\n\tvar none$2 = function(series) {\n\t  var n = series.length, o = new Array(n);\n\t  while (--n >= 0) o[n] = n;\n\t  return o;\n\t};\n\t\n\tfunction stackValue(d, key) {\n\t  return d[key];\n\t}\n\t\n\tvar stack = function() {\n\t  var keys = constant$10([]),\n\t      order = none$2,\n\t      offset = none$1,\n\t      value = stackValue;\n\t\n\t  function stack(data) {\n\t    var kz = keys.apply(this, arguments),\n\t        i,\n\t        m = data.length,\n\t        n = kz.length,\n\t        sz = new Array(n),\n\t        oz;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n\t        si[j] = sij = [0, +value(data[j], ki, j, data)];\n\t        sij.data = data[j];\n\t      }\n\t      si.key = ki;\n\t    }\n\t\n\t    for (i = 0, oz = order(sz); i < n; ++i) {\n\t      sz[oz[i]].index = i;\n\t    }\n\t\n\t    offset(sz, oz);\n\t    return sz;\n\t  }\n\t\n\t  stack.keys = function(_) {\n\t    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant$10(slice$5.call(_)), stack) : keys;\n\t  };\n\t\n\t  stack.value = function(_) {\n\t    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$10(+_), stack) : value;\n\t  };\n\t\n\t  stack.order = function(_) {\n\t    return arguments.length ? (order = _ == null ? none$2 : typeof _ === \"function\" ? _ : constant$10(slice$5.call(_)), stack) : order;\n\t  };\n\t\n\t  stack.offset = function(_) {\n\t    return arguments.length ? (offset = _ == null ? none$1 : _, stack) : offset;\n\t  };\n\t\n\t  return stack;\n\t};\n\t\n\tvar expand = function(series, order) {\n\t  if (!((n = series.length) > 0)) return;\n\t  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n\t    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n\t    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n\t  }\n\t  none$1(series, order);\n\t};\n\t\n\tvar silhouette = function(series, order) {\n\t  if (!((n = series.length) > 0)) return;\n\t  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n\t    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n\t    s0[j][1] += s0[j][0] = -y / 2;\n\t  }\n\t  none$1(series, order);\n\t};\n\t\n\tvar wiggle = function(series, order) {\n\t  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n\t  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n\t    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n\t      var si = series[order[i]],\n\t          sij0 = si[j][1] || 0,\n\t          sij1 = si[j - 1][1] || 0,\n\t          s3 = (sij0 - sij1) / 2;\n\t      for (var k = 0; k < i; ++k) {\n\t        var sk = series[order[k]],\n\t            skj0 = sk[j][1] || 0,\n\t            skj1 = sk[j - 1][1] || 0;\n\t        s3 += skj0 - skj1;\n\t      }\n\t      s1 += sij0, s2 += s3 * sij0;\n\t    }\n\t    s0[j - 1][1] += s0[j - 1][0] = y;\n\t    if (s1) y -= s2 / s1;\n\t  }\n\t  s0[j - 1][1] += s0[j - 1][0] = y;\n\t  none$1(series, order);\n\t};\n\t\n\tvar ascending$2 = function(series) {\n\t  var sums = series.map(sum$2);\n\t  return none$2(series).sort(function(a, b) { return sums[a] - sums[b]; });\n\t};\n\t\n\tfunction sum$2(series) {\n\t  var s = 0, i = -1, n = series.length, v;\n\t  while (++i < n) if (v = +series[i][1]) s += v;\n\t  return s;\n\t}\n\t\n\tvar descending$2 = function(series) {\n\t  return ascending$2(series).reverse();\n\t};\n\t\n\tvar insideOut = function(series) {\n\t  var n = series.length,\n\t      i,\n\t      j,\n\t      sums = series.map(sum$2),\n\t      order = none$2(series).sort(function(a, b) { return sums[b] - sums[a]; }),\n\t      top = 0,\n\t      bottom = 0,\n\t      tops = [],\n\t      bottoms = [];\n\t\n\t  for (i = 0; i < n; ++i) {\n\t    j = order[i];\n\t    if (top < bottom) {\n\t      top += sums[j];\n\t      tops.push(j);\n\t    } else {\n\t      bottom += sums[j];\n\t      bottoms.push(j);\n\t    }\n\t  }\n\t\n\t  return bottoms.reverse().concat(tops);\n\t};\n\t\n\tvar reverse = function(series) {\n\t  return none$2(series).reverse();\n\t};\n\t\n\tvar constant$11 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction x$4(d) {\n\t  return d[0];\n\t}\n\t\n\tfunction y$4(d) {\n\t  return d[1];\n\t}\n\t\n\tfunction RedBlackTree() {\n\t  this._ = null; // root node\n\t}\n\t\n\tfunction RedBlackNode(node) {\n\t  node.U = // parent node\n\t  node.C = // color - true for red, false for black\n\t  node.L = // left node\n\t  node.R = // right node\n\t  node.P = // previous node\n\t  node.N = null; // next node\n\t}\n\t\n\tRedBlackTree.prototype = {\n\t  constructor: RedBlackTree,\n\t\n\t  insert: function(after, node) {\n\t    var parent, grandpa, uncle;\n\t\n\t    if (after) {\n\t      node.P = after;\n\t      node.N = after.N;\n\t      if (after.N) after.N.P = node;\n\t      after.N = node;\n\t      if (after.R) {\n\t        after = after.R;\n\t        while (after.L) after = after.L;\n\t        after.L = node;\n\t      } else {\n\t        after.R = node;\n\t      }\n\t      parent = after;\n\t    } else if (this._) {\n\t      after = RedBlackFirst(this._);\n\t      node.P = null;\n\t      node.N = after;\n\t      after.P = after.L = node;\n\t      parent = after;\n\t    } else {\n\t      node.P = node.N = null;\n\t      this._ = node;\n\t      parent = null;\n\t    }\n\t    node.L = node.R = null;\n\t    node.U = parent;\n\t    node.C = true;\n\t\n\t    after = node;\n\t    while (parent && parent.C) {\n\t      grandpa = parent.U;\n\t      if (parent === grandpa.L) {\n\t        uncle = grandpa.R;\n\t        if (uncle && uncle.C) {\n\t          parent.C = uncle.C = false;\n\t          grandpa.C = true;\n\t          after = grandpa;\n\t        } else {\n\t          if (after === parent.R) {\n\t            RedBlackRotateLeft(this, parent);\n\t            after = parent;\n\t            parent = after.U;\n\t          }\n\t          parent.C = false;\n\t          grandpa.C = true;\n\t          RedBlackRotateRight(this, grandpa);\n\t        }\n\t      } else {\n\t        uncle = grandpa.L;\n\t        if (uncle && uncle.C) {\n\t          parent.C = uncle.C = false;\n\t          grandpa.C = true;\n\t          after = grandpa;\n\t        } else {\n\t          if (after === parent.L) {\n\t            RedBlackRotateRight(this, parent);\n\t            after = parent;\n\t            parent = after.U;\n\t          }\n\t          parent.C = false;\n\t          grandpa.C = true;\n\t          RedBlackRotateLeft(this, grandpa);\n\t        }\n\t      }\n\t      parent = after.U;\n\t    }\n\t    this._.C = false;\n\t  },\n\t\n\t  remove: function(node) {\n\t    if (node.N) node.N.P = node.P;\n\t    if (node.P) node.P.N = node.N;\n\t    node.N = node.P = null;\n\t\n\t    var parent = node.U,\n\t        sibling,\n\t        left = node.L,\n\t        right = node.R,\n\t        next,\n\t        red;\n\t\n\t    if (!left) next = right;\n\t    else if (!right) next = left;\n\t    else next = RedBlackFirst(right);\n\t\n\t    if (parent) {\n\t      if (parent.L === node) parent.L = next;\n\t      else parent.R = next;\n\t    } else {\n\t      this._ = next;\n\t    }\n\t\n\t    if (left && right) {\n\t      red = next.C;\n\t      next.C = node.C;\n\t      next.L = left;\n\t      left.U = next;\n\t      if (next !== right) {\n\t        parent = next.U;\n\t        next.U = node.U;\n\t        node = next.R;\n\t        parent.L = node;\n\t        next.R = right;\n\t        right.U = next;\n\t      } else {\n\t        next.U = parent;\n\t        parent = next;\n\t        node = next.R;\n\t      }\n\t    } else {\n\t      red = node.C;\n\t      node = next;\n\t    }\n\t\n\t    if (node) node.U = parent;\n\t    if (red) return;\n\t    if (node && node.C) { node.C = false; return; }\n\t\n\t    do {\n\t      if (node === this._) break;\n\t      if (node === parent.L) {\n\t        sibling = parent.R;\n\t        if (sibling.C) {\n\t          sibling.C = false;\n\t          parent.C = true;\n\t          RedBlackRotateLeft(this, parent);\n\t          sibling = parent.R;\n\t        }\n\t        if ((sibling.L && sibling.L.C)\n\t            || (sibling.R && sibling.R.C)) {\n\t          if (!sibling.R || !sibling.R.C) {\n\t            sibling.L.C = false;\n\t            sibling.C = true;\n\t            RedBlackRotateRight(this, sibling);\n\t            sibling = parent.R;\n\t          }\n\t          sibling.C = parent.C;\n\t          parent.C = sibling.R.C = false;\n\t          RedBlackRotateLeft(this, parent);\n\t          node = this._;\n\t          break;\n\t        }\n\t      } else {\n\t        sibling = parent.L;\n\t        if (sibling.C) {\n\t          sibling.C = false;\n\t          parent.C = true;\n\t          RedBlackRotateRight(this, parent);\n\t          sibling = parent.L;\n\t        }\n\t        if ((sibling.L && sibling.L.C)\n\t          || (sibling.R && sibling.R.C)) {\n\t          if (!sibling.L || !sibling.L.C) {\n\t            sibling.R.C = false;\n\t            sibling.C = true;\n\t            RedBlackRotateLeft(this, sibling);\n\t            sibling = parent.L;\n\t          }\n\t          sibling.C = parent.C;\n\t          parent.C = sibling.L.C = false;\n\t          RedBlackRotateRight(this, parent);\n\t          node = this._;\n\t          break;\n\t        }\n\t      }\n\t      sibling.C = true;\n\t      node = parent;\n\t      parent = parent.U;\n\t    } while (!node.C);\n\t\n\t    if (node) node.C = false;\n\t  }\n\t};\n\t\n\tfunction RedBlackRotateLeft(tree, node) {\n\t  var p = node,\n\t      q = node.R,\n\t      parent = p.U;\n\t\n\t  if (parent) {\n\t    if (parent.L === p) parent.L = q;\n\t    else parent.R = q;\n\t  } else {\n\t    tree._ = q;\n\t  }\n\t\n\t  q.U = parent;\n\t  p.U = q;\n\t  p.R = q.L;\n\t  if (p.R) p.R.U = p;\n\t  q.L = p;\n\t}\n\t\n\tfunction RedBlackRotateRight(tree, node) {\n\t  var p = node,\n\t      q = node.L,\n\t      parent = p.U;\n\t\n\t  if (parent) {\n\t    if (parent.L === p) parent.L = q;\n\t    else parent.R = q;\n\t  } else {\n\t    tree._ = q;\n\t  }\n\t\n\t  q.U = parent;\n\t  p.U = q;\n\t  p.L = q.R;\n\t  if (p.L) p.L.U = p;\n\t  q.R = p;\n\t}\n\t\n\tfunction RedBlackFirst(node) {\n\t  while (node.L) node = node.L;\n\t  return node;\n\t}\n\t\n\tfunction createEdge(left, right, v0, v1) {\n\t  var edge = [null, null],\n\t      index = edges.push(edge) - 1;\n\t  edge.left = left;\n\t  edge.right = right;\n\t  if (v0) setEdgeEnd(edge, left, right, v0);\n\t  if (v1) setEdgeEnd(edge, right, left, v1);\n\t  cells[left.index].halfedges.push(index);\n\t  cells[right.index].halfedges.push(index);\n\t  return edge;\n\t}\n\t\n\tfunction createBorderEdge(left, v0, v1) {\n\t  var edge = [v0, v1];\n\t  edge.left = left;\n\t  return edge;\n\t}\n\t\n\tfunction setEdgeEnd(edge, left, right, vertex) {\n\t  if (!edge[0] && !edge[1]) {\n\t    edge[0] = vertex;\n\t    edge.left = left;\n\t    edge.right = right;\n\t  } else if (edge.left === right) {\n\t    edge[1] = vertex;\n\t  } else {\n\t    edge[0] = vertex;\n\t  }\n\t}\n\t\n\t// Liang–Barsky line clipping.\n\tfunction clipEdge(edge, x0, y0, x1, y1) {\n\t  var a = edge[0],\n\t      b = edge[1],\n\t      ax = a[0],\n\t      ay = a[1],\n\t      bx = b[0],\n\t      by = b[1],\n\t      t0 = 0,\n\t      t1 = 1,\n\t      dx = bx - ax,\n\t      dy = by - ay,\n\t      r;\n\t\n\t  r = x0 - ax;\n\t  if (!dx && r > 0) return;\n\t  r /= dx;\n\t  if (dx < 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  } else if (dx > 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  }\n\t\n\t  r = x1 - ax;\n\t  if (!dx && r < 0) return;\n\t  r /= dx;\n\t  if (dx < 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  } else if (dx > 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  }\n\t\n\t  r = y0 - ay;\n\t  if (!dy && r > 0) return;\n\t  r /= dy;\n\t  if (dy < 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  } else if (dy > 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  }\n\t\n\t  r = y1 - ay;\n\t  if (!dy && r < 0) return;\n\t  r /= dy;\n\t  if (dy < 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  } else if (dy > 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  }\n\t\n\t  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\t\n\t  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n\t  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n\t  return true;\n\t}\n\t\n\tfunction connectEdge(edge, x0, y0, x1, y1) {\n\t  var v1 = edge[1];\n\t  if (v1) return true;\n\t\n\t  var v0 = edge[0],\n\t      left = edge.left,\n\t      right = edge.right,\n\t      lx = left[0],\n\t      ly = left[1],\n\t      rx = right[0],\n\t      ry = right[1],\n\t      fx = (lx + rx) / 2,\n\t      fy = (ly + ry) / 2,\n\t      fm,\n\t      fb;\n\t\n\t  if (ry === ly) {\n\t    if (fx < x0 || fx >= x1) return;\n\t    if (lx > rx) {\n\t      if (!v0) v0 = [fx, y0];\n\t      else if (v0[1] >= y1) return;\n\t      v1 = [fx, y1];\n\t    } else {\n\t      if (!v0) v0 = [fx, y1];\n\t      else if (v0[1] < y0) return;\n\t      v1 = [fx, y0];\n\t    }\n\t  } else {\n\t    fm = (lx - rx) / (ry - ly);\n\t    fb = fy - fm * fx;\n\t    if (fm < -1 || fm > 1) {\n\t      if (lx > rx) {\n\t        if (!v0) v0 = [(y0 - fb) / fm, y0];\n\t        else if (v0[1] >= y1) return;\n\t        v1 = [(y1 - fb) / fm, y1];\n\t      } else {\n\t        if (!v0) v0 = [(y1 - fb) / fm, y1];\n\t        else if (v0[1] < y0) return;\n\t        v1 = [(y0 - fb) / fm, y0];\n\t      }\n\t    } else {\n\t      if (ly < ry) {\n\t        if (!v0) v0 = [x0, fm * x0 + fb];\n\t        else if (v0[0] >= x1) return;\n\t        v1 = [x1, fm * x1 + fb];\n\t      } else {\n\t        if (!v0) v0 = [x1, fm * x1 + fb];\n\t        else if (v0[0] < x0) return;\n\t        v1 = [x0, fm * x0 + fb];\n\t      }\n\t    }\n\t  }\n\t\n\t  edge[0] = v0;\n\t  edge[1] = v1;\n\t  return true;\n\t}\n\t\n\tfunction clipEdges(x0, y0, x1, y1) {\n\t  var i = edges.length,\n\t      edge;\n\t\n\t  while (i--) {\n\t    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n\t        || !clipEdge(edge, x0, y0, x1, y1)\n\t        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon$4\n\t            || Math.abs(edge[0][1] - edge[1][1]) > epsilon$4)) {\n\t      delete edges[i];\n\t    }\n\t  }\n\t}\n\t\n\tfunction createCell(site) {\n\t  return cells[site.index] = {\n\t    site: site,\n\t    halfedges: []\n\t  };\n\t}\n\t\n\tfunction cellHalfedgeAngle(cell, edge) {\n\t  var site = cell.site,\n\t      va = edge.left,\n\t      vb = edge.right;\n\t  if (site === vb) vb = va, va = site;\n\t  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n\t  if (site === va) va = edge[1], vb = edge[0];\n\t  else va = edge[0], vb = edge[1];\n\t  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n\t}\n\t\n\tfunction cellHalfedgeStart(cell, edge) {\n\t  return edge[+(edge.left !== cell.site)];\n\t}\n\t\n\tfunction cellHalfedgeEnd(cell, edge) {\n\t  return edge[+(edge.left === cell.site)];\n\t}\n\t\n\tfunction sortCellHalfedges() {\n\t  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n\t    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n\t      var index = new Array(m),\n\t          array = new Array(m);\n\t      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n\t      index.sort(function(i, j) { return array[j] - array[i]; });\n\t      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n\t      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n\t    }\n\t  }\n\t}\n\t\n\tfunction clipCells(x0, y0, x1, y1) {\n\t  var nCells = cells.length,\n\t      iCell,\n\t      cell,\n\t      site,\n\t      iHalfedge,\n\t      halfedges,\n\t      nHalfedges,\n\t      start,\n\t      startX,\n\t      startY,\n\t      end,\n\t      endX,\n\t      endY,\n\t      cover = true;\n\t\n\t  for (iCell = 0; iCell < nCells; ++iCell) {\n\t    if (cell = cells[iCell]) {\n\t      site = cell.site;\n\t      halfedges = cell.halfedges;\n\t      iHalfedge = halfedges.length;\n\t\n\t      // Remove any dangling clipped edges.\n\t      while (iHalfedge--) {\n\t        if (!edges[halfedges[iHalfedge]]) {\n\t          halfedges.splice(iHalfedge, 1);\n\t        }\n\t      }\n\t\n\t      // Insert any border edges as necessary.\n\t      iHalfedge = 0, nHalfedges = halfedges.length;\n\t      while (iHalfedge < nHalfedges) {\n\t        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n\t        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n\t        if (Math.abs(endX - startX) > epsilon$4 || Math.abs(endY - startY) > epsilon$4) {\n\t          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n\t              Math.abs(endX - x0) < epsilon$4 && y1 - endY > epsilon$4 ? [x0, Math.abs(startX - x0) < epsilon$4 ? startY : y1]\n\t              : Math.abs(endY - y1) < epsilon$4 && x1 - endX > epsilon$4 ? [Math.abs(startY - y1) < epsilon$4 ? startX : x1, y1]\n\t              : Math.abs(endX - x1) < epsilon$4 && endY - y0 > epsilon$4 ? [x1, Math.abs(startX - x1) < epsilon$4 ? startY : y0]\n\t              : Math.abs(endY - y0) < epsilon$4 && endX - x0 > epsilon$4 ? [Math.abs(startY - y0) < epsilon$4 ? startX : x0, y0]\n\t              : null)) - 1);\n\t          ++nHalfedges;\n\t        }\n\t      }\n\t\n\t      if (nHalfedges) cover = false;\n\t    }\n\t  }\n\t\n\t  // If there weren’t any edges, have the closest site cover the extent.\n\t  // It doesn’t matter which corner of the extent we measure!\n\t  if (cover) {\n\t    var dx, dy, d2, dc = Infinity;\n\t\n\t    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n\t      if (cell = cells[iCell]) {\n\t        site = cell.site;\n\t        dx = site[0] - x0;\n\t        dy = site[1] - y0;\n\t        d2 = dx * dx + dy * dy;\n\t        if (d2 < dc) dc = d2, cover = cell;\n\t      }\n\t    }\n\t\n\t    if (cover) {\n\t      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n\t      cover.halfedges.push(\n\t        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n\t        edges.push(createBorderEdge(site, v01, v11)) - 1,\n\t        edges.push(createBorderEdge(site, v11, v10)) - 1,\n\t        edges.push(createBorderEdge(site, v10, v00)) - 1\n\t      );\n\t    }\n\t  }\n\t\n\t  // Lastly delete any cells with no edges; these were entirely clipped.\n\t  for (iCell = 0; iCell < nCells; ++iCell) {\n\t    if (cell = cells[iCell]) {\n\t      if (!cell.halfedges.length) {\n\t        delete cells[iCell];\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\tvar circlePool = [];\n\t\n\tvar firstCircle;\n\t\n\tfunction Circle() {\n\t  RedBlackNode(this);\n\t  this.x =\n\t  this.y =\n\t  this.arc =\n\t  this.site =\n\t  this.cy = null;\n\t}\n\t\n\tfunction attachCircle(arc) {\n\t  var lArc = arc.P,\n\t      rArc = arc.N;\n\t\n\t  if (!lArc || !rArc) return;\n\t\n\t  var lSite = lArc.site,\n\t      cSite = arc.site,\n\t      rSite = rArc.site;\n\t\n\t  if (lSite === rSite) return;\n\t\n\t  var bx = cSite[0],\n\t      by = cSite[1],\n\t      ax = lSite[0] - bx,\n\t      ay = lSite[1] - by,\n\t      cx = rSite[0] - bx,\n\t      cy = rSite[1] - by;\n\t\n\t  var d = 2 * (ax * cy - ay * cx);\n\t  if (d >= -epsilon2$2) return;\n\t\n\t  var ha = ax * ax + ay * ay,\n\t      hc = cx * cx + cy * cy,\n\t      x = (cy * ha - ay * hc) / d,\n\t      y = (ax * hc - cx * ha) / d;\n\t\n\t  var circle = circlePool.pop() || new Circle;\n\t  circle.arc = arc;\n\t  circle.site = cSite;\n\t  circle.x = x + bx;\n\t  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\t\n\t  arc.circle = circle;\n\t\n\t  var before = null,\n\t      node = circles._;\n\t\n\t  while (node) {\n\t    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n\t      if (node.L) node = node.L;\n\t      else { before = node.P; break; }\n\t    } else {\n\t      if (node.R) node = node.R;\n\t      else { before = node; break; }\n\t    }\n\t  }\n\t\n\t  circles.insert(before, circle);\n\t  if (!before) firstCircle = circle;\n\t}\n\t\n\tfunction detachCircle(arc) {\n\t  var circle = arc.circle;\n\t  if (circle) {\n\t    if (!circle.P) firstCircle = circle.N;\n\t    circles.remove(circle);\n\t    circlePool.push(circle);\n\t    RedBlackNode(circle);\n\t    arc.circle = null;\n\t  }\n\t}\n\t\n\tvar beachPool = [];\n\t\n\tfunction Beach() {\n\t  RedBlackNode(this);\n\t  this.edge =\n\t  this.site =\n\t  this.circle = null;\n\t}\n\t\n\tfunction createBeach(site) {\n\t  var beach = beachPool.pop() || new Beach;\n\t  beach.site = site;\n\t  return beach;\n\t}\n\t\n\tfunction detachBeach(beach) {\n\t  detachCircle(beach);\n\t  beaches.remove(beach);\n\t  beachPool.push(beach);\n\t  RedBlackNode(beach);\n\t}\n\t\n\tfunction removeBeach(beach) {\n\t  var circle = beach.circle,\n\t      x = circle.x,\n\t      y = circle.cy,\n\t      vertex = [x, y],\n\t      previous = beach.P,\n\t      next = beach.N,\n\t      disappearing = [beach];\n\t\n\t  detachBeach(beach);\n\t\n\t  var lArc = previous;\n\t  while (lArc.circle\n\t      && Math.abs(x - lArc.circle.x) < epsilon$4\n\t      && Math.abs(y - lArc.circle.cy) < epsilon$4) {\n\t    previous = lArc.P;\n\t    disappearing.unshift(lArc);\n\t    detachBeach(lArc);\n\t    lArc = previous;\n\t  }\n\t\n\t  disappearing.unshift(lArc);\n\t  detachCircle(lArc);\n\t\n\t  var rArc = next;\n\t  while (rArc.circle\n\t      && Math.abs(x - rArc.circle.x) < epsilon$4\n\t      && Math.abs(y - rArc.circle.cy) < epsilon$4) {\n\t    next = rArc.N;\n\t    disappearing.push(rArc);\n\t    detachBeach(rArc);\n\t    rArc = next;\n\t  }\n\t\n\t  disappearing.push(rArc);\n\t  detachCircle(rArc);\n\t\n\t  var nArcs = disappearing.length,\n\t      iArc;\n\t  for (iArc = 1; iArc < nArcs; ++iArc) {\n\t    rArc = disappearing[iArc];\n\t    lArc = disappearing[iArc - 1];\n\t    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n\t  }\n\t\n\t  lArc = disappearing[0];\n\t  rArc = disappearing[nArcs - 1];\n\t  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\t\n\t  attachCircle(lArc);\n\t  attachCircle(rArc);\n\t}\n\t\n\tfunction addBeach(site) {\n\t  var x = site[0],\n\t      directrix = site[1],\n\t      lArc,\n\t      rArc,\n\t      dxl,\n\t      dxr,\n\t      node = beaches._;\n\t\n\t  while (node) {\n\t    dxl = leftBreakPoint(node, directrix) - x;\n\t    if (dxl > epsilon$4) node = node.L; else {\n\t      dxr = x - rightBreakPoint(node, directrix);\n\t      if (dxr > epsilon$4) {\n\t        if (!node.R) {\n\t          lArc = node;\n\t          break;\n\t        }\n\t        node = node.R;\n\t      } else {\n\t        if (dxl > -epsilon$4) {\n\t          lArc = node.P;\n\t          rArc = node;\n\t        } else if (dxr > -epsilon$4) {\n\t          lArc = node;\n\t          rArc = node.N;\n\t        } else {\n\t          lArc = rArc = node;\n\t        }\n\t        break;\n\t      }\n\t    }\n\t  }\n\t\n\t  createCell(site);\n\t  var newArc = createBeach(site);\n\t  beaches.insert(lArc, newArc);\n\t\n\t  if (!lArc && !rArc) return;\n\t\n\t  if (lArc === rArc) {\n\t    detachCircle(lArc);\n\t    rArc = createBeach(lArc.site);\n\t    beaches.insert(newArc, rArc);\n\t    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n\t    attachCircle(lArc);\n\t    attachCircle(rArc);\n\t    return;\n\t  }\n\t\n\t  if (!rArc) { // && lArc\n\t    newArc.edge = createEdge(lArc.site, newArc.site);\n\t    return;\n\t  }\n\t\n\t  // else lArc !== rArc\n\t  detachCircle(lArc);\n\t  detachCircle(rArc);\n\t\n\t  var lSite = lArc.site,\n\t      ax = lSite[0],\n\t      ay = lSite[1],\n\t      bx = site[0] - ax,\n\t      by = site[1] - ay,\n\t      rSite = rArc.site,\n\t      cx = rSite[0] - ax,\n\t      cy = rSite[1] - ay,\n\t      d = 2 * (bx * cy - by * cx),\n\t      hb = bx * bx + by * by,\n\t      hc = cx * cx + cy * cy,\n\t      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\t\n\t  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n\t  newArc.edge = createEdge(lSite, site, null, vertex);\n\t  rArc.edge = createEdge(site, rSite, null, vertex);\n\t  attachCircle(lArc);\n\t  attachCircle(rArc);\n\t}\n\t\n\tfunction leftBreakPoint(arc, directrix) {\n\t  var site = arc.site,\n\t      rfocx = site[0],\n\t      rfocy = site[1],\n\t      pby2 = rfocy - directrix;\n\t\n\t  if (!pby2) return rfocx;\n\t\n\t  var lArc = arc.P;\n\t  if (!lArc) return -Infinity;\n\t\n\t  site = lArc.site;\n\t  var lfocx = site[0],\n\t      lfocy = site[1],\n\t      plby2 = lfocy - directrix;\n\t\n\t  if (!plby2) return lfocx;\n\t\n\t  var hl = lfocx - rfocx,\n\t      aby2 = 1 / pby2 - 1 / plby2,\n\t      b = hl / plby2;\n\t\n\t  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\t\n\t  return (rfocx + lfocx) / 2;\n\t}\n\t\n\tfunction rightBreakPoint(arc, directrix) {\n\t  var rArc = arc.N;\n\t  if (rArc) return leftBreakPoint(rArc, directrix);\n\t  var site = arc.site;\n\t  return site[1] === directrix ? site[0] : Infinity;\n\t}\n\t\n\tvar epsilon$4 = 1e-6;\n\tvar epsilon2$2 = 1e-12;\n\tvar beaches;\n\tvar cells;\n\tvar circles;\n\tvar edges;\n\t\n\tfunction triangleArea(a, b, c) {\n\t  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n\t}\n\t\n\tfunction lexicographic(a, b) {\n\t  return b[1] - a[1]\n\t      || b[0] - a[0];\n\t}\n\t\n\tfunction Diagram(sites, extent) {\n\t  var site = sites.sort(lexicographic).pop(),\n\t      x,\n\t      y,\n\t      circle;\n\t\n\t  edges = [];\n\t  cells = new Array(sites.length);\n\t  beaches = new RedBlackTree;\n\t  circles = new RedBlackTree;\n\t\n\t  while (true) {\n\t    circle = firstCircle;\n\t    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n\t      if (site[0] !== x || site[1] !== y) {\n\t        addBeach(site);\n\t        x = site[0], y = site[1];\n\t      }\n\t      site = sites.pop();\n\t    } else if (circle) {\n\t      removeBeach(circle.arc);\n\t    } else {\n\t      break;\n\t    }\n\t  }\n\t\n\t  sortCellHalfedges();\n\t\n\t  if (extent) {\n\t    var x0 = +extent[0][0],\n\t        y0 = +extent[0][1],\n\t        x1 = +extent[1][0],\n\t        y1 = +extent[1][1];\n\t    clipEdges(x0, y0, x1, y1);\n\t    clipCells(x0, y0, x1, y1);\n\t  }\n\t\n\t  this.edges = edges;\n\t  this.cells = cells;\n\t\n\t  beaches =\n\t  circles =\n\t  edges =\n\t  cells = null;\n\t}\n\t\n\tDiagram.prototype = {\n\t  constructor: Diagram,\n\t\n\t  polygons: function() {\n\t    var edges = this.edges;\n\t\n\t    return this.cells.map(function(cell) {\n\t      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n\t      polygon.data = cell.site.data;\n\t      return polygon;\n\t    });\n\t  },\n\t\n\t  triangles: function() {\n\t    var triangles = [],\n\t        edges = this.edges;\n\t\n\t    this.cells.forEach(function(cell, i) {\n\t      if (!(m = (halfedges = cell.halfedges).length)) return;\n\t      var site = cell.site,\n\t          halfedges,\n\t          j = -1,\n\t          m,\n\t          s0,\n\t          e1 = edges[halfedges[m - 1]],\n\t          s1 = e1.left === site ? e1.right : e1.left;\n\t\n\t      while (++j < m) {\n\t        s0 = s1;\n\t        e1 = edges[halfedges[j]];\n\t        s1 = e1.left === site ? e1.right : e1.left;\n\t        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n\t          triangles.push([site.data, s0.data, s1.data]);\n\t        }\n\t      }\n\t    });\n\t\n\t    return triangles;\n\t  },\n\t\n\t  links: function() {\n\t    return this.edges.filter(function(edge) {\n\t      return edge.right;\n\t    }).map(function(edge) {\n\t      return {\n\t        source: edge.left.data,\n\t        target: edge.right.data\n\t      };\n\t    });\n\t  },\n\t\n\t  find: function(x, y, radius) {\n\t    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\t\n\t    // Use the previously-found cell, or start with an arbitrary one.\n\t    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n\t    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\t\n\t    // Traverse the half-edges to find a closer cell, if any.\n\t    do {\n\t      cell = that.cells[i0 = i1], i1 = null;\n\t      cell.halfedges.forEach(function(e) {\n\t        var edge = that.edges[e], v = edge.left;\n\t        if ((v === cell.site || !v) && !(v = edge.right)) return;\n\t        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n\t        if (v2 < d2) d2 = v2, i1 = v.index;\n\t      });\n\t    } while (i1 !== null);\n\t\n\t    that._found = i0;\n\t\n\t    return radius == null || d2 <= radius * radius ? cell.site : null;\n\t  }\n\t};\n\t\n\tvar voronoi = function() {\n\t  var x$$1 = x$4,\n\t      y$$1 = y$4,\n\t      extent = null;\n\t\n\t  function voronoi(data) {\n\t    return new Diagram(data.map(function(d, i) {\n\t      var s = [Math.round(x$$1(d, i, data) / epsilon$4) * epsilon$4, Math.round(y$$1(d, i, data) / epsilon$4) * epsilon$4];\n\t      s.index = i;\n\t      s.data = d;\n\t      return s;\n\t    }), extent);\n\t  }\n\t\n\t  voronoi.polygons = function(data) {\n\t    return voronoi(data).polygons();\n\t  };\n\t\n\t  voronoi.links = function(data) {\n\t    return voronoi(data).links();\n\t  };\n\t\n\t  voronoi.triangles = function(data) {\n\t    return voronoi(data).triangles();\n\t  };\n\t\n\t  voronoi.x = function(_) {\n\t    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$11(+_), voronoi) : x$$1;\n\t  };\n\t\n\t  voronoi.y = function(_) {\n\t    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$11(+_), voronoi) : y$$1;\n\t  };\n\t\n\t  voronoi.extent = function(_) {\n\t    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n\t  };\n\t\n\t  voronoi.size = function(_) {\n\t    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n\t  };\n\t\n\t  return voronoi;\n\t};\n\t\n\tvar constant$12 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction ZoomEvent(target, type, transform) {\n\t  this.target = target;\n\t  this.type = type;\n\t  this.transform = transform;\n\t}\n\t\n\tfunction Transform(k, x, y) {\n\t  this.k = k;\n\t  this.x = x;\n\t  this.y = y;\n\t}\n\t\n\tTransform.prototype = {\n\t  constructor: Transform,\n\t  scale: function(k) {\n\t    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n\t  },\n\t  translate: function(x, y) {\n\t    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n\t  },\n\t  apply: function(point) {\n\t    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n\t  },\n\t  applyX: function(x) {\n\t    return x * this.k + this.x;\n\t  },\n\t  applyY: function(y) {\n\t    return y * this.k + this.y;\n\t  },\n\t  invert: function(location) {\n\t    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n\t  },\n\t  invertX: function(x) {\n\t    return (x - this.x) / this.k;\n\t  },\n\t  invertY: function(y) {\n\t    return (y - this.y) / this.k;\n\t  },\n\t  rescaleX: function(x) {\n\t    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n\t  },\n\t  rescaleY: function(y) {\n\t    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n\t  },\n\t  toString: function() {\n\t    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n\t  }\n\t};\n\t\n\tvar identity$8 = new Transform(1, 0, 0);\n\t\n\ttransform$1.prototype = Transform.prototype;\n\t\n\tfunction transform$1(node) {\n\t  return node.__zoom || identity$8;\n\t}\n\t\n\tfunction nopropagation$2() {\n\t  exports.event.stopImmediatePropagation();\n\t}\n\t\n\tvar noevent$2 = function() {\n\t  exports.event.preventDefault();\n\t  exports.event.stopImmediatePropagation();\n\t};\n\t\n\t// Ignore right-click, since that should open the context menu.\n\tfunction defaultFilter$2() {\n\t  return !exports.event.button;\n\t}\n\t\n\tfunction defaultExtent$1() {\n\t  var e = this, w, h;\n\t  if (e instanceof SVGElement) {\n\t    e = e.ownerSVGElement || e;\n\t    w = e.width.baseVal.value;\n\t    h = e.height.baseVal.value;\n\t  } else {\n\t    w = e.clientWidth;\n\t    h = e.clientHeight;\n\t  }\n\t  return [[0, 0], [w, h]];\n\t}\n\t\n\tfunction defaultTransform() {\n\t  return this.__zoom || identity$8;\n\t}\n\t\n\tvar zoom = function() {\n\t  var filter = defaultFilter$2,\n\t      extent = defaultExtent$1,\n\t      k0 = 0,\n\t      k1 = Infinity,\n\t      x0 = -k1,\n\t      x1 = k1,\n\t      y0 = x0,\n\t      y1 = x1,\n\t      duration = 250,\n\t      interpolate$$1 = interpolateZoom,\n\t      gestures = [],\n\t      listeners = dispatch(\"start\", \"zoom\", \"end\"),\n\t      touchstarting,\n\t      touchending,\n\t      touchDelay = 500,\n\t      wheelDelay = 150;\n\t\n\t  function zoom(selection$$1) {\n\t    selection$$1\n\t        .on(\"wheel.zoom\", wheeled)\n\t        .on(\"mousedown.zoom\", mousedowned)\n\t        .on(\"dblclick.zoom\", dblclicked)\n\t        .on(\"touchstart.zoom\", touchstarted)\n\t        .on(\"touchmove.zoom\", touchmoved)\n\t        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n\t        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n\t        .property(\"__zoom\", defaultTransform);\n\t  }\n\t\n\t  zoom.transform = function(collection, transform) {\n\t    var selection$$1 = collection.selection ? collection.selection() : collection;\n\t    selection$$1.property(\"__zoom\", defaultTransform);\n\t    if (collection !== selection$$1) {\n\t      schedule(collection, transform);\n\t    } else {\n\t      selection$$1.interrupt().each(function() {\n\t        gesture(this, arguments)\n\t            .start()\n\t            .zoom(null, typeof transform === \"function\" ? transform.apply(this, arguments) : transform)\n\t            .end();\n\t      });\n\t    }\n\t  };\n\t\n\t  zoom.scaleBy = function(selection$$1, k) {\n\t    zoom.scaleTo(selection$$1, function() {\n\t      var k0 = this.__zoom.k,\n\t          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n\t      return k0 * k1;\n\t    });\n\t  };\n\t\n\t  zoom.scaleTo = function(selection$$1, k) {\n\t    zoom.transform(selection$$1, function() {\n\t      var e = extent.apply(this, arguments),\n\t          t0 = this.__zoom,\n\t          p0 = centroid(e),\n\t          p1 = t0.invert(p0),\n\t          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n\t      return constrain(translate(scale(t0, k1), p0, p1), e);\n\t    });\n\t  };\n\t\n\t  zoom.translateBy = function(selection$$1, x, y) {\n\t    zoom.transform(selection$$1, function() {\n\t      return constrain(this.__zoom.translate(\n\t        typeof x === \"function\" ? x.apply(this, arguments) : x,\n\t        typeof y === \"function\" ? y.apply(this, arguments) : y\n\t      ), extent.apply(this, arguments));\n\t    });\n\t  };\n\t\n\t  function scale(transform, k) {\n\t    k = Math.max(k0, Math.min(k1, k));\n\t    return k === transform.k ? transform : new Transform(k, transform.x, transform.y);\n\t  }\n\t\n\t  function translate(transform, p0, p1) {\n\t    var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;\n\t    return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);\n\t  }\n\t\n\t  function constrain(transform, extent) {\n\t    var dx0 = transform.invertX(extent[0][0]) - x0,\n\t        dx1 = transform.invertX(extent[1][0]) - x1,\n\t        dy0 = transform.invertY(extent[0][1]) - y0,\n\t        dy1 = transform.invertY(extent[1][1]) - y1;\n\t    return transform.translate(\n\t      dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1),\n\t      dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1)\n\t    );\n\t  }\n\t\n\t  function centroid(extent) {\n\t    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n\t  }\n\t\n\t  function schedule(transition$$1, transform, center) {\n\t    transition$$1\n\t        .on(\"start.zoom\", function() { gesture(this, arguments).start(); })\n\t        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).end(); })\n\t        .tween(\"zoom\", function() {\n\t          var that = this,\n\t              args = arguments,\n\t              g = gesture(that, args),\n\t              e = extent.apply(that, args),\n\t              p = center || centroid(e),\n\t              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n\t              a = that.__zoom,\n\t              b = typeof transform === \"function\" ? transform.apply(that, args) : transform,\n\t              i = interpolate$$1(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n\t          return function(t) {\n\t            if (t === 1) t = b; // Avoid rounding error on end.\n\t            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n\t            g.zoom(null, t);\n\t          };\n\t        });\n\t  }\n\t\n\t  function gesture(that, args) {\n\t    for (var i = 0, n = gestures.length, g; i < n; ++i) {\n\t      if ((g = gestures[i]).that === that) {\n\t        return g;\n\t      }\n\t    }\n\t    return new Gesture(that, args);\n\t  }\n\t\n\t  function Gesture(that, args) {\n\t    this.that = that;\n\t    this.args = args;\n\t    this.index = -1;\n\t    this.active = 0;\n\t    this.extent = extent.apply(that, args);\n\t  }\n\t\n\t  Gesture.prototype = {\n\t    start: function() {\n\t      if (++this.active === 1) {\n\t        this.index = gestures.push(this) - 1;\n\t        this.emit(\"start\");\n\t      }\n\t      return this;\n\t    },\n\t    zoom: function(key, transform) {\n\t      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform.invert(this.mouse[0]);\n\t      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform.invert(this.touch0[0]);\n\t      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform.invert(this.touch1[0]);\n\t      this.that.__zoom = transform;\n\t      this.emit(\"zoom\");\n\t      return this;\n\t    },\n\t    end: function() {\n\t      if (--this.active === 0) {\n\t        gestures.splice(this.index, 1);\n\t        this.index = -1;\n\t        this.emit(\"end\");\n\t      }\n\t      return this;\n\t    },\n\t    emit: function(type) {\n\t      customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\n\t    }\n\t  };\n\t\n\t  function wheeled() {\n\t    if (!filter.apply(this, arguments)) return;\n\t    var g = gesture(this, arguments),\n\t        t = this.__zoom,\n\t        k = Math.max(k0, Math.min(k1, t.k * Math.pow(2, -exports.event.deltaY * (exports.event.deltaMode ? 120 : 1) / 500))),\n\t        p = mouse(this);\n\t\n\t    // If the mouse is in the same location as before, reuse it.\n\t    // If there were recent wheel events, reset the wheel idle timeout.\n\t    if (g.wheel) {\n\t      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n\t        g.mouse[1] = t.invert(g.mouse[0] = p);\n\t      }\n\t      clearTimeout(g.wheel);\n\t    }\n\t\n\t    // If this wheel event won’t trigger a transform change, ignore it.\n\t    else if (t.k === k) return;\n\t\n\t    // Otherwise, capture the mouse point and location at the start.\n\t    else {\n\t      g.mouse = [p, t.invert(p)];\n\t      interrupt(this);\n\t      g.start();\n\t    }\n\t\n\t    noevent$2();\n\t    g.wheel = setTimeout(wheelidled, wheelDelay);\n\t    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent));\n\t\n\t    function wheelidled() {\n\t      g.wheel = null;\n\t      g.end();\n\t    }\n\t  }\n\t\n\t  function mousedowned() {\n\t    if (touchending || !filter.apply(this, arguments)) return;\n\t    var g = gesture(this, arguments),\n\t        v = select(exports.event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n\t        p = mouse(this);\n\t\n\t    dragDisable(exports.event.view);\n\t    nopropagation$2();\n\t    g.mouse = [p, this.__zoom.invert(p)];\n\t    interrupt(this);\n\t    g.start();\n\t\n\t    function mousemoved() {\n\t      noevent$2();\n\t      g.moved = true;\n\t      g.zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent));\n\t    }\n\t\n\t    function mouseupped() {\n\t      v.on(\"mousemove.zoom mouseup.zoom\", null);\n\t      yesdrag(exports.event.view, g.moved);\n\t      noevent$2();\n\t      g.end();\n\t    }\n\t  }\n\t\n\t  function dblclicked() {\n\t    if (!filter.apply(this, arguments)) return;\n\t    var t0 = this.__zoom,\n\t        p0 = mouse(this),\n\t        p1 = t0.invert(p0),\n\t        k1 = t0.k * (exports.event.shiftKey ? 0.5 : 2),\n\t        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments));\n\t\n\t    noevent$2();\n\t    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);\n\t    else select(this).call(zoom.transform, t1);\n\t  }\n\t\n\t  function touchstarted() {\n\t    if (!filter.apply(this, arguments)) return;\n\t    var g = gesture(this, arguments),\n\t        touches$$1 = exports.event.changedTouches,\n\t        started,\n\t        n = touches$$1.length, i, t, p;\n\t\n\t    nopropagation$2();\n\t    for (i = 0; i < n; ++i) {\n\t      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n\t      p = [p, this.__zoom.invert(p), t.identifier];\n\t      if (!g.touch0) g.touch0 = p, started = true;\n\t      else if (!g.touch1) g.touch1 = p;\n\t    }\n\t\n\t    // If this is a dbltap, reroute to the (optional) dblclick.zoom handler.\n\t    if (touchstarting) {\n\t      touchstarting = clearTimeout(touchstarting);\n\t      if (!g.touch1) {\n\t        g.end();\n\t        p = select(this).on(\"dblclick.zoom\");\n\t        if (p) p.apply(this, arguments);\n\t        return;\n\t      }\n\t    }\n\t\n\t    if (started) {\n\t      touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n\t      interrupt(this);\n\t      g.start();\n\t    }\n\t  }\n\t\n\t  function touchmoved() {\n\t    var g = gesture(this, arguments),\n\t        touches$$1 = exports.event.changedTouches,\n\t        n = touches$$1.length, i, t, p, l;\n\t\n\t    noevent$2();\n\t    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n\t    for (i = 0; i < n; ++i) {\n\t      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n\t      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n\t      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n\t    }\n\t    t = g.that.__zoom;\n\t    if (g.touch1) {\n\t      var p0 = g.touch0[0], l0 = g.touch0[1],\n\t          p1 = g.touch1[0], l1 = g.touch1[1],\n\t          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n\t          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n\t      t = scale(t, Math.sqrt(dp / dl));\n\t      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n\t      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n\t    }\n\t    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n\t    else return;\n\t    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent));\n\t  }\n\t\n\t  function touchended() {\n\t    var g = gesture(this, arguments),\n\t        touches$$1 = exports.event.changedTouches,\n\t        n = touches$$1.length, i, t;\n\t\n\t    nopropagation$2();\n\t    if (touchending) clearTimeout(touchending);\n\t    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n\t    for (i = 0; i < n; ++i) {\n\t      t = touches$$1[i];\n\t      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n\t      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n\t    }\n\t    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n\t    if (g.touch0) g.touch0[1] = this.__zoom.invert(g.touch0[0]);\n\t    else g.end();\n\t  }\n\t\n\t  zoom.filter = function(_) {\n\t    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$12(!!_), zoom) : filter;\n\t  };\n\t\n\t  zoom.extent = function(_) {\n\t    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$12([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n\t  };\n\t\n\t  zoom.scaleExtent = function(_) {\n\t    return arguments.length ? (k0 = +_[0], k1 = +_[1], zoom) : [k0, k1];\n\t  };\n\t\n\t  zoom.translateExtent = function(_) {\n\t    return arguments.length ? (x0 = +_[0][0], x1 = +_[1][0], y0 = +_[0][1], y1 = +_[1][1], zoom) : [[x0, y0], [x1, y1]];\n\t  };\n\t\n\t  zoom.duration = function(_) {\n\t    return arguments.length ? (duration = +_, zoom) : duration;\n\t  };\n\t\n\t  zoom.interpolate = function(_) {\n\t    return arguments.length ? (interpolate$$1 = _, zoom) : interpolate$$1;\n\t  };\n\t\n\t  zoom.on = function() {\n\t    var value = listeners.on.apply(listeners, arguments);\n\t    return value === listeners ? zoom : value;\n\t  };\n\t\n\t  return zoom;\n\t};\n\t\n\texports.version = version;\n\texports.bisect = bisectRight;\n\texports.bisectRight = bisectRight;\n\texports.bisectLeft = bisectLeft;\n\texports.ascending = ascending;\n\texports.bisector = bisector;\n\texports.cross = cross;\n\texports.descending = descending;\n\texports.deviation = deviation;\n\texports.extent = extent;\n\texports.histogram = histogram;\n\texports.thresholdFreedmanDiaconis = freedmanDiaconis;\n\texports.thresholdScott = scott;\n\texports.thresholdSturges = sturges;\n\texports.max = max;\n\texports.mean = mean;\n\texports.median = median;\n\texports.merge = merge;\n\texports.min = min;\n\texports.pairs = pairs;\n\texports.permute = permute;\n\texports.quantile = threshold;\n\texports.range = sequence;\n\texports.scan = scan;\n\texports.shuffle = shuffle;\n\texports.sum = sum;\n\texports.ticks = ticks;\n\texports.tickIncrement = tickIncrement;\n\texports.tickStep = tickStep;\n\texports.transpose = transpose;\n\texports.variance = variance;\n\texports.zip = zip;\n\texports.axisTop = axisTop;\n\texports.axisRight = axisRight;\n\texports.axisBottom = axisBottom;\n\texports.axisLeft = axisLeft;\n\texports.brush = brush;\n\texports.brushX = brushX;\n\texports.brushY = brushY;\n\texports.brushSelection = brushSelection;\n\texports.chord = chord;\n\texports.ribbon = ribbon;\n\texports.nest = nest;\n\texports.set = set$2;\n\texports.map = map$1;\n\texports.keys = keys;\n\texports.values = values;\n\texports.entries = entries;\n\texports.color = color;\n\texports.rgb = rgb;\n\texports.hsl = hsl;\n\texports.lab = lab;\n\texports.hcl = hcl;\n\texports.cubehelix = cubehelix;\n\texports.dispatch = dispatch;\n\texports.drag = drag;\n\texports.dragDisable = dragDisable;\n\texports.dragEnable = yesdrag;\n\texports.dsvFormat = dsv;\n\texports.csvParse = csvParse;\n\texports.csvParseRows = csvParseRows;\n\texports.csvFormat = csvFormat;\n\texports.csvFormatRows = csvFormatRows;\n\texports.tsvParse = tsvParse;\n\texports.tsvParseRows = tsvParseRows;\n\texports.tsvFormat = tsvFormat;\n\texports.tsvFormatRows = tsvFormatRows;\n\texports.easeLinear = linear$1;\n\texports.easeQuad = quadInOut;\n\texports.easeQuadIn = quadIn;\n\texports.easeQuadOut = quadOut;\n\texports.easeQuadInOut = quadInOut;\n\texports.easeCubic = cubicInOut;\n\texports.easeCubicIn = cubicIn;\n\texports.easeCubicOut = cubicOut;\n\texports.easeCubicInOut = cubicInOut;\n\texports.easePoly = polyInOut;\n\texports.easePolyIn = polyIn;\n\texports.easePolyOut = polyOut;\n\texports.easePolyInOut = polyInOut;\n\texports.easeSin = sinInOut;\n\texports.easeSinIn = sinIn;\n\texports.easeSinOut = sinOut;\n\texports.easeSinInOut = sinInOut;\n\texports.easeExp = expInOut;\n\texports.easeExpIn = expIn;\n\texports.easeExpOut = expOut;\n\texports.easeExpInOut = expInOut;\n\texports.easeCircle = circleInOut;\n\texports.easeCircleIn = circleIn;\n\texports.easeCircleOut = circleOut;\n\texports.easeCircleInOut = circleInOut;\n\texports.easeBounce = bounceOut;\n\texports.easeBounceIn = bounceIn;\n\texports.easeBounceOut = bounceOut;\n\texports.easeBounceInOut = bounceInOut;\n\texports.easeBack = backInOut;\n\texports.easeBackIn = backIn;\n\texports.easeBackOut = backOut;\n\texports.easeBackInOut = backInOut;\n\texports.easeElastic = elasticOut;\n\texports.easeElasticIn = elasticIn;\n\texports.easeElasticOut = elasticOut;\n\texports.easeElasticInOut = elasticInOut;\n\texports.forceCenter = center$1;\n\texports.forceCollide = collide;\n\texports.forceLink = link;\n\texports.forceManyBody = manyBody;\n\texports.forceSimulation = simulation;\n\texports.forceX = x$2;\n\texports.forceY = y$2;\n\texports.formatDefaultLocale = defaultLocale;\n\texports.formatLocale = formatLocale;\n\texports.formatSpecifier = formatSpecifier;\n\texports.precisionFixed = precisionFixed;\n\texports.precisionPrefix = precisionPrefix;\n\texports.precisionRound = precisionRound;\n\texports.geoArea = area;\n\texports.geoBounds = bounds;\n\texports.geoCentroid = centroid;\n\texports.geoCircle = circle;\n\texports.geoClipExtent = extent$1;\n\texports.geoContains = contains;\n\texports.geoDistance = distance;\n\texports.geoGraticule = graticule;\n\texports.geoGraticule10 = graticule10;\n\texports.geoInterpolate = interpolate$1;\n\texports.geoLength = length$1;\n\texports.geoPath = index$1;\n\texports.geoAlbers = albers;\n\texports.geoAlbersUsa = albersUsa;\n\texports.geoAzimuthalEqualArea = azimuthalEqualArea;\n\texports.geoAzimuthalEqualAreaRaw = azimuthalEqualAreaRaw;\n\texports.geoAzimuthalEquidistant = azimuthalEquidistant;\n\texports.geoAzimuthalEquidistantRaw = azimuthalEquidistantRaw;\n\texports.geoConicConformal = conicConformal;\n\texports.geoConicConformalRaw = conicConformalRaw;\n\texports.geoConicEqualArea = conicEqualArea;\n\texports.geoConicEqualAreaRaw = conicEqualAreaRaw;\n\texports.geoConicEquidistant = conicEquidistant;\n\texports.geoConicEquidistantRaw = conicEquidistantRaw;\n\texports.geoEquirectangular = equirectangular;\n\texports.geoEquirectangularRaw = equirectangularRaw;\n\texports.geoGnomonic = gnomonic;\n\texports.geoGnomonicRaw = gnomonicRaw;\n\texports.geoIdentity = identity$5;\n\texports.geoProjection = projection;\n\texports.geoProjectionMutator = projectionMutator;\n\texports.geoMercator = mercator;\n\texports.geoMercatorRaw = mercatorRaw;\n\texports.geoOrthographic = orthographic;\n\texports.geoOrthographicRaw = orthographicRaw;\n\texports.geoStereographic = stereographic;\n\texports.geoStereographicRaw = stereographicRaw;\n\texports.geoTransverseMercator = transverseMercator;\n\texports.geoTransverseMercatorRaw = transverseMercatorRaw;\n\texports.geoRotation = rotation;\n\texports.geoStream = geoStream;\n\texports.geoTransform = transform;\n\texports.cluster = cluster;\n\texports.hierarchy = hierarchy;\n\texports.pack = index$2;\n\texports.packSiblings = siblings;\n\texports.packEnclose = enclose;\n\texports.partition = partition;\n\texports.stratify = stratify;\n\texports.tree = tree;\n\texports.treemap = index$3;\n\texports.treemapBinary = binary;\n\texports.treemapDice = treemapDice;\n\texports.treemapSlice = treemapSlice;\n\texports.treemapSliceDice = sliceDice;\n\texports.treemapSquarify = squarify;\n\texports.treemapResquarify = resquarify;\n\texports.interpolate = interpolateValue;\n\texports.interpolateArray = array$1;\n\texports.interpolateBasis = basis$1;\n\texports.interpolateBasisClosed = basisClosed;\n\texports.interpolateDate = date;\n\texports.interpolateNumber = reinterpolate;\n\texports.interpolateObject = object;\n\texports.interpolateRound = interpolateRound;\n\texports.interpolateString = interpolateString;\n\texports.interpolateTransformCss = interpolateTransformCss;\n\texports.interpolateTransformSvg = interpolateTransformSvg;\n\texports.interpolateZoom = interpolateZoom;\n\texports.interpolateRgb = interpolateRgb;\n\texports.interpolateRgbBasis = rgbBasis;\n\texports.interpolateRgbBasisClosed = rgbBasisClosed;\n\texports.interpolateHsl = hsl$2;\n\texports.interpolateHslLong = hslLong;\n\texports.interpolateLab = lab$1;\n\texports.interpolateHcl = hcl$2;\n\texports.interpolateHclLong = hclLong;\n\texports.interpolateCubehelix = cubehelix$2;\n\texports.interpolateCubehelixLong = cubehelixLong;\n\texports.quantize = quantize;\n\texports.path = path;\n\texports.polygonArea = area$1;\n\texports.polygonCentroid = centroid$1;\n\texports.polygonHull = hull;\n\texports.polygonContains = contains$1;\n\texports.polygonLength = length$2;\n\texports.quadtree = quadtree;\n\texports.queue = queue;\n\texports.randomUniform = uniform;\n\texports.randomNormal = normal;\n\texports.randomLogNormal = logNormal;\n\texports.randomBates = bates;\n\texports.randomIrwinHall = irwinHall;\n\texports.randomExponential = exponential$1;\n\texports.request = request;\n\texports.html = html;\n\texports.json = json;\n\texports.text = text;\n\texports.xml = xml;\n\texports.csv = csv$1;\n\texports.tsv = tsv$1;\n\texports.scaleBand = band;\n\texports.scalePoint = point$1;\n\texports.scaleIdentity = identity$6;\n\texports.scaleLinear = linear$2;\n\texports.scaleLog = log$1;\n\texports.scaleOrdinal = ordinal;\n\texports.scaleImplicit = implicit;\n\texports.scalePow = pow$1;\n\texports.scaleSqrt = sqrt$1;\n\texports.scaleQuantile = quantile$$1;\n\texports.scaleQuantize = quantize$1;\n\texports.scaleThreshold = threshold$1;\n\texports.scaleTime = time;\n\texports.scaleUtc = utcTime;\n\texports.schemeCategory10 = category10;\n\texports.schemeCategory20b = category20b;\n\texports.schemeCategory20c = category20c;\n\texports.schemeCategory20 = category20;\n\texports.interpolateCubehelixDefault = cubehelix$3;\n\texports.interpolateRainbow = rainbow$1;\n\texports.interpolateWarm = warm;\n\texports.interpolateCool = cool;\n\texports.interpolateViridis = viridis;\n\texports.interpolateMagma = magma;\n\texports.interpolateInferno = inferno;\n\texports.interpolatePlasma = plasma;\n\texports.scaleSequential = sequential;\n\texports.creator = creator;\n\texports.local = local$1;\n\texports.matcher = matcher$1;\n\texports.mouse = mouse;\n\texports.namespace = namespace;\n\texports.namespaces = namespaces;\n\texports.select = select;\n\texports.selectAll = selectAll;\n\texports.selection = selection;\n\texports.selector = selector;\n\texports.selectorAll = selectorAll;\n\texports.touch = touch;\n\texports.touches = touches;\n\texports.window = window;\n\texports.customEvent = customEvent;\n\texports.arc = arc;\n\texports.area = area$2;\n\texports.line = line;\n\texports.pie = pie;\n\texports.radialArea = radialArea;\n\texports.radialLine = radialLine$1;\n\texports.symbol = symbol;\n\texports.symbols = symbols;\n\texports.symbolCircle = circle$2;\n\texports.symbolCross = cross$2;\n\texports.symbolDiamond = diamond;\n\texports.symbolSquare = square;\n\texports.symbolStar = star;\n\texports.symbolTriangle = triangle;\n\texports.symbolWye = wye;\n\texports.curveBasisClosed = basisClosed$1;\n\texports.curveBasisOpen = basisOpen;\n\texports.curveBasis = basis$2;\n\texports.curveBundle = bundle;\n\texports.curveCardinalClosed = cardinalClosed;\n\texports.curveCardinalOpen = cardinalOpen;\n\texports.curveCardinal = cardinal;\n\texports.curveCatmullRomClosed = catmullRomClosed;\n\texports.curveCatmullRomOpen = catmullRomOpen;\n\texports.curveCatmullRom = catmullRom;\n\texports.curveLinearClosed = linearClosed;\n\texports.curveLinear = curveLinear;\n\texports.curveMonotoneX = monotoneX;\n\texports.curveMonotoneY = monotoneY;\n\texports.curveNatural = natural;\n\texports.curveStep = step;\n\texports.curveStepAfter = stepAfter;\n\texports.curveStepBefore = stepBefore;\n\texports.stack = stack;\n\texports.stackOffsetExpand = expand;\n\texports.stackOffsetNone = none$1;\n\texports.stackOffsetSilhouette = silhouette;\n\texports.stackOffsetWiggle = wiggle;\n\texports.stackOrderAscending = ascending$2;\n\texports.stackOrderDescending = descending$2;\n\texports.stackOrderInsideOut = insideOut;\n\texports.stackOrderNone = none$2;\n\texports.stackOrderReverse = reverse;\n\texports.timeInterval = newInterval;\n\texports.timeMillisecond = millisecond;\n\texports.timeMilliseconds = milliseconds;\n\texports.utcMillisecond = millisecond;\n\texports.utcMilliseconds = milliseconds;\n\texports.timeSecond = second;\n\texports.timeSeconds = seconds;\n\texports.utcSecond = second;\n\texports.utcSeconds = seconds;\n\texports.timeMinute = minute;\n\texports.timeMinutes = minutes;\n\texports.timeHour = hour;\n\texports.timeHours = hours;\n\texports.timeDay = day;\n\texports.timeDays = days;\n\texports.timeWeek = sunday;\n\texports.timeWeeks = sundays;\n\texports.timeSunday = sunday;\n\texports.timeSundays = sundays;\n\texports.timeMonday = monday;\n\texports.timeMondays = mondays;\n\texports.timeTuesday = tuesday;\n\texports.timeTuesdays = tuesdays;\n\texports.timeWednesday = wednesday;\n\texports.timeWednesdays = wednesdays;\n\texports.timeThursday = thursday;\n\texports.timeThursdays = thursdays;\n\texports.timeFriday = friday;\n\texports.timeFridays = fridays;\n\texports.timeSaturday = saturday;\n\texports.timeSaturdays = saturdays;\n\texports.timeMonth = month;\n\texports.timeMonths = months;\n\texports.timeYear = year;\n\texports.timeYears = years;\n\texports.utcMinute = utcMinute;\n\texports.utcMinutes = utcMinutes;\n\texports.utcHour = utcHour;\n\texports.utcHours = utcHours;\n\texports.utcDay = utcDay;\n\texports.utcDays = utcDays;\n\texports.utcWeek = utcSunday;\n\texports.utcWeeks = utcSundays;\n\texports.utcSunday = utcSunday;\n\texports.utcSundays = utcSundays;\n\texports.utcMonday = utcMonday;\n\texports.utcMondays = utcMondays;\n\texports.utcTuesday = utcTuesday;\n\texports.utcTuesdays = utcTuesdays;\n\texports.utcWednesday = utcWednesday;\n\texports.utcWednesdays = utcWednesdays;\n\texports.utcThursday = utcThursday;\n\texports.utcThursdays = utcThursdays;\n\texports.utcFriday = utcFriday;\n\texports.utcFridays = utcFridays;\n\texports.utcSaturday = utcSaturday;\n\texports.utcSaturdays = utcSaturdays;\n\texports.utcMonth = utcMonth;\n\texports.utcMonths = utcMonths;\n\texports.utcYear = utcYear;\n\texports.utcYears = utcYears;\n\texports.timeFormatDefaultLocale = defaultLocale$1;\n\texports.timeFormatLocale = formatLocale$1;\n\texports.isoFormat = formatIso;\n\texports.isoParse = parseIso;\n\texports.now = now;\n\texports.timer = timer;\n\texports.timerFlush = timerFlush;\n\texports.timeout = timeout$1;\n\texports.interval = interval$1;\n\texports.transition = transition;\n\texports.active = active;\n\texports.interrupt = interrupt;\n\texports.voronoi = voronoi;\n\texports.zoom = zoom;\n\texports.zoomTransform = transform$1;\n\texports.zoomIdentity = identity$8;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\t/*\n\tobject-assign\n\t(c) Sindre Sorhus\n\t@license MIT\n\t*/\n\t\n\t'use strict';\n\t/* eslint-disable no-unused-vars */\n\tvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\tvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\t\n\tfunction toObject(val) {\n\t\tif (val === null || val === undefined) {\n\t\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t\t}\n\t\n\t\treturn Object(val);\n\t}\n\t\n\tfunction shouldUseNative() {\n\t\ttry {\n\t\t\tif (!Object.assign) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\t// Detect buggy property enumeration order in older V8 versions.\n\t\n\t\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\t\ttest1[5] = 'de';\n\t\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\t\tvar test2 = {};\n\t\t\tfor (var i = 0; i < 10; i++) {\n\t\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t\t}\n\t\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\t\treturn test2[n];\n\t\t\t});\n\t\t\tif (order2.join('') !== '0123456789') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\t\tvar test3 = {};\n\t\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\t\ttest3[letter] = letter;\n\t\t\t});\n\t\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\treturn true;\n\t\t} catch (err) {\n\t\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\t\tvar from;\n\t\tvar to = toObject(target);\n\t\tvar symbols;\n\t\n\t\tfor (var s = 1; s < arguments.length; s++) {\n\t\t\tfrom = Object(arguments[s]);\n\t\n\t\t\tfor (var key in from) {\n\t\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\t\tto[key] = from[key];\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tif (getOwnPropertySymbols) {\n\t\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\treturn to;\n\t};\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t//This file contains the ES6 extensions to the core Promises/A+ API\n\t\n\tvar Promise = __webpack_require__(1);\n\t\n\tmodule.exports = Promise;\n\t\n\t/* Static Functions */\n\t\n\tvar TRUE = valuePromise(true);\n\tvar FALSE = valuePromise(false);\n\tvar NULL = valuePromise(null);\n\tvar UNDEFINED = valuePromise(undefined);\n\tvar ZERO = valuePromise(0);\n\tvar EMPTYSTRING = valuePromise('');\n\t\n\tfunction valuePromise(value) {\n\t  var p = new Promise(Promise._61);\n\t  p._81 = 1;\n\t  p._65 = value;\n\t  return p;\n\t}\n\tPromise.resolve = function (value) {\n\t  if (value instanceof Promise) return value;\n\t\n\t  if (value === null) return NULL;\n\t  if (value === undefined) return UNDEFINED;\n\t  if (value === true) return TRUE;\n\t  if (value === false) return FALSE;\n\t  if (value === 0) return ZERO;\n\t  if (value === '') return EMPTYSTRING;\n\t\n\t  if (typeof value === 'object' || typeof value === 'function') {\n\t    try {\n\t      var then = value.then;\n\t      if (typeof then === 'function') {\n\t        return new Promise(then.bind(value));\n\t      }\n\t    } catch (ex) {\n\t      return new Promise(function (resolve, reject) {\n\t        reject(ex);\n\t      });\n\t    }\n\t  }\n\t  return valuePromise(value);\n\t};\n\t\n\tPromise.all = function (arr) {\n\t  var args = Array.prototype.slice.call(arr);\n\t\n\t  return new Promise(function (resolve, reject) {\n\t    if (args.length === 0) return resolve([]);\n\t    var remaining = args.length;\n\t    function res(i, val) {\n\t      if (val && (typeof val === 'object' || typeof val === 'function')) {\n\t        if (val instanceof Promise && val.then === Promise.prototype.then) {\n\t          while (val._81 === 3) {\n\t            val = val._65;\n\t          }\n\t          if (val._81 === 1) return res(i, val._65);\n\t          if (val._81 === 2) reject(val._65);\n\t          val.then(function (val) {\n\t            res(i, val);\n\t          }, reject);\n\t          return;\n\t        } else {\n\t          var then = val.then;\n\t          if (typeof then === 'function') {\n\t            var p = new Promise(then.bind(val));\n\t            p.then(function (val) {\n\t              res(i, val);\n\t            }, reject);\n\t            return;\n\t          }\n\t        }\n\t      }\n\t      args[i] = val;\n\t      if (--remaining === 0) {\n\t        resolve(args);\n\t      }\n\t    }\n\t    for (var i = 0; i < args.length; i++) {\n\t      res(i, args[i]);\n\t    }\n\t  });\n\t};\n\t\n\tPromise.reject = function (value) {\n\t  return new Promise(function (resolve, reject) {\n\t    reject(value);\n\t  });\n\t};\n\t\n\tPromise.race = function (values) {\n\t  return new Promise(function (resolve, reject) {\n\t    values.forEach(function(value){\n\t      Promise.resolve(value).then(resolve, reject);\n\t    });\n\t  });\n\t};\n\t\n\t/* Prototype Methods */\n\t\n\tPromise.prototype['catch'] = function (onRejected) {\n\t  return this.then(null, onRejected);\n\t};\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar Promise = __webpack_require__(1);\n\t\n\tvar DEFAULT_WHITELIST = [\n\t  ReferenceError,\n\t  TypeError,\n\t  RangeError\n\t];\n\t\n\tvar enabled = false;\n\texports.disable = disable;\n\tfunction disable() {\n\t  enabled = false;\n\t  Promise._10 = null;\n\t  Promise._97 = null;\n\t}\n\t\n\texports.enable = enable;\n\tfunction enable(options) {\n\t  options = options || {};\n\t  if (enabled) disable();\n\t  enabled = true;\n\t  var id = 0;\n\t  var displayId = 0;\n\t  var rejections = {};\n\t  Promise._10 = function (promise) {\n\t    if (\n\t      promise._81 === 2 && // IS REJECTED\n\t      rejections[promise._72]\n\t    ) {\n\t      if (rejections[promise._72].logged) {\n\t        onHandled(promise._72);\n\t      } else {\n\t        clearTimeout(rejections[promise._72].timeout);\n\t      }\n\t      delete rejections[promise._72];\n\t    }\n\t  };\n\t  Promise._97 = function (promise, err) {\n\t    if (promise._45 === 0) { // not yet handled\n\t      promise._72 = id++;\n\t      rejections[promise._72] = {\n\t        displayId: null,\n\t        error: err,\n\t        timeout: setTimeout(\n\t          onUnhandled.bind(null, promise._72),\n\t          // For reference errors and type errors, this almost always\n\t          // means the programmer made a mistake, so log them after just\n\t          // 100ms\n\t          // otherwise, wait 2 seconds to see if they get handled\n\t          matchWhitelist(err, DEFAULT_WHITELIST)\n\t            ? 100\n\t            : 2000\n\t        ),\n\t        logged: false\n\t      };\n\t    }\n\t  };\n\t  function onUnhandled(id) {\n\t    if (\n\t      options.allRejections ||\n\t      matchWhitelist(\n\t        rejections[id].error,\n\t        options.whitelist || DEFAULT_WHITELIST\n\t      )\n\t    ) {\n\t      rejections[id].displayId = displayId++;\n\t      if (options.onUnhandled) {\n\t        rejections[id].logged = true;\n\t        options.onUnhandled(\n\t          rejections[id].displayId,\n\t          rejections[id].error\n\t        );\n\t      } else {\n\t        rejections[id].logged = true;\n\t        logError(\n\t          rejections[id].displayId,\n\t          rejections[id].error\n\t        );\n\t      }\n\t    }\n\t  }\n\t  function onHandled(id) {\n\t    if (rejections[id].logged) {\n\t      if (options.onHandled) {\n\t        options.onHandled(rejections[id].displayId, rejections[id].error);\n\t      } else if (!rejections[id].onUnhandled) {\n\t        console.warn(\n\t          'Promise Rejection Handled (id: ' + rejections[id].displayId + '):'\n\t        );\n\t        console.warn(\n\t          '  This means you can ignore any previous messages of the form \"Possible Unhandled Promise Rejection\" with id ' +\n\t          rejections[id].displayId + '.'\n\t        );\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\tfunction logError(id, error) {\n\t  console.warn('Possible Unhandled Promise Rejection (id: ' + id + '):');\n\t  var errStr = (error && (error.stack || error)) + '';\n\t  errStr.split('\\n').forEach(function (line) {\n\t    console.warn('  ' + line);\n\t  });\n\t}\n\t\n\tfunction matchWhitelist(error, list) {\n\t  return list.some(function (cls) {\n\t    return error instanceof cls;\n\t  });\n\t}\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// @remove-on-eject-begin\n\t/**\n\t * Copyright (c) 2015-present, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t */\n\t// @remove-on-eject-end\n\t'use strict';\n\t\n\tif (typeof Promise === 'undefined') {\n\t  // Rejection tracking prevents a common issue where React gets into an\n\t  // inconsistent state due to an error, but it gets swallowed by a Promise,\n\t  // and the user has no idea what causes React's erratic future behavior.\n\t  __webpack_require__(8).enable();\n\t  window.Promise = __webpack_require__(7);\n\t}\n\t\n\t// fetch() polyfill for making API calls.\n\t__webpack_require__(10);\n\t\n\t// Object.assign() is commonly used with React.\n\t// It will use the native implementation if it's present and isn't buggy.\n\tObject.assign = __webpack_require__(6);\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\n\t(function(self) {\n\t  'use strict';\n\t\n\t  if (self.fetch) {\n\t    return\n\t  }\n\t\n\t  var support = {\n\t    searchParams: 'URLSearchParams' in self,\n\t    iterable: 'Symbol' in self && 'iterator' in Symbol,\n\t    blob: 'FileReader' in self && 'Blob' in self && (function() {\n\t      try {\n\t        new Blob()\n\t        return true\n\t      } catch(e) {\n\t        return false\n\t      }\n\t    })(),\n\t    formData: 'FormData' in self,\n\t    arrayBuffer: 'ArrayBuffer' in self\n\t  }\n\t\n\t  if (support.arrayBuffer) {\n\t    var viewClasses = [\n\t      '[object Int8Array]',\n\t      '[object Uint8Array]',\n\t      '[object Uint8ClampedArray]',\n\t      '[object Int16Array]',\n\t      '[object Uint16Array]',\n\t      '[object Int32Array]',\n\t      '[object Uint32Array]',\n\t      '[object Float32Array]',\n\t      '[object Float64Array]'\n\t    ]\n\t\n\t    var isDataView = function(obj) {\n\t      return obj && DataView.prototype.isPrototypeOf(obj)\n\t    }\n\t\n\t    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n\t      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n\t    }\n\t  }\n\t\n\t  function normalizeName(name) {\n\t    if (typeof name !== 'string') {\n\t      name = String(name)\n\t    }\n\t    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n\t      throw new TypeError('Invalid character in header field name')\n\t    }\n\t    return name.toLowerCase()\n\t  }\n\t\n\t  function normalizeValue(value) {\n\t    if (typeof value !== 'string') {\n\t      value = String(value)\n\t    }\n\t    return value\n\t  }\n\t\n\t  // Build a destructive iterator for the value list\n\t  function iteratorFor(items) {\n\t    var iterator = {\n\t      next: function() {\n\t        var value = items.shift()\n\t        return {done: value === undefined, value: value}\n\t      }\n\t    }\n\t\n\t    if (support.iterable) {\n\t      iterator[Symbol.iterator] = function() {\n\t        return iterator\n\t      }\n\t    }\n\t\n\t    return iterator\n\t  }\n\t\n\t  function Headers(headers) {\n\t    this.map = {}\n\t\n\t    if (headers instanceof Headers) {\n\t      headers.forEach(function(value, name) {\n\t        this.append(name, value)\n\t      }, this)\n\t\n\t    } else if (headers) {\n\t      Object.getOwnPropertyNames(headers).forEach(function(name) {\n\t        this.append(name, headers[name])\n\t      }, this)\n\t    }\n\t  }\n\t\n\t  Headers.prototype.append = function(name, value) {\n\t    name = normalizeName(name)\n\t    value = normalizeValue(value)\n\t    var oldValue = this.map[name]\n\t    this.map[name] = oldValue ? oldValue+','+value : value\n\t  }\n\t\n\t  Headers.prototype['delete'] = function(name) {\n\t    delete this.map[normalizeName(name)]\n\t  }\n\t\n\t  Headers.prototype.get = function(name) {\n\t    name = normalizeName(name)\n\t    return this.has(name) ? this.map[name] : null\n\t  }\n\t\n\t  Headers.prototype.has = function(name) {\n\t    return this.map.hasOwnProperty(normalizeName(name))\n\t  }\n\t\n\t  Headers.prototype.set = function(name, value) {\n\t    this.map[normalizeName(name)] = normalizeValue(value)\n\t  }\n\t\n\t  Headers.prototype.forEach = function(callback, thisArg) {\n\t    for (var name in this.map) {\n\t      if (this.map.hasOwnProperty(name)) {\n\t        callback.call(thisArg, this.map[name], name, this)\n\t      }\n\t    }\n\t  }\n\t\n\t  Headers.prototype.keys = function() {\n\t    var items = []\n\t    this.forEach(function(value, name) { items.push(name) })\n\t    return iteratorFor(items)\n\t  }\n\t\n\t  Headers.prototype.values = function() {\n\t    var items = []\n\t    this.forEach(function(value) { items.push(value) })\n\t    return iteratorFor(items)\n\t  }\n\t\n\t  Headers.prototype.entries = function() {\n\t    var items = []\n\t    this.forEach(function(value, name) { items.push([name, value]) })\n\t    return iteratorFor(items)\n\t  }\n\t\n\t  if (support.iterable) {\n\t    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n\t  }\n\t\n\t  function consumed(body) {\n\t    if (body.bodyUsed) {\n\t      return Promise.reject(new TypeError('Already read'))\n\t    }\n\t    body.bodyUsed = true\n\t  }\n\t\n\t  function fileReaderReady(reader) {\n\t    return new Promise(function(resolve, reject) {\n\t      reader.onload = function() {\n\t        resolve(reader.result)\n\t      }\n\t      reader.onerror = function() {\n\t        reject(reader.error)\n\t      }\n\t    })\n\t  }\n\t\n\t  function readBlobAsArrayBuffer(blob) {\n\t    var reader = new FileReader()\n\t    var promise = fileReaderReady(reader)\n\t    reader.readAsArrayBuffer(blob)\n\t    return promise\n\t  }\n\t\n\t  function readBlobAsText(blob) {\n\t    var reader = new FileReader()\n\t    var promise = fileReaderReady(reader)\n\t    reader.readAsText(blob)\n\t    return promise\n\t  }\n\t\n\t  function readArrayBufferAsText(buf) {\n\t    var view = new Uint8Array(buf)\n\t    var chars = new Array(view.length)\n\t\n\t    for (var i = 0; i < view.length; i++) {\n\t      chars[i] = String.fromCharCode(view[i])\n\t    }\n\t    return chars.join('')\n\t  }\n\t\n\t  function bufferClone(buf) {\n\t    if (buf.slice) {\n\t      return buf.slice(0)\n\t    } else {\n\t      var view = new Uint8Array(buf.byteLength)\n\t      view.set(new Uint8Array(buf))\n\t      return view.buffer\n\t    }\n\t  }\n\t\n\t  function Body() {\n\t    this.bodyUsed = false\n\t\n\t    this._initBody = function(body) {\n\t      this._bodyInit = body\n\t      if (!body) {\n\t        this._bodyText = ''\n\t      } else if (typeof body === 'string') {\n\t        this._bodyText = body\n\t      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n\t        this._bodyBlob = body\n\t      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n\t        this._bodyFormData = body\n\t      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n\t        this._bodyText = body.toString()\n\t      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n\t        this._bodyArrayBuffer = bufferClone(body.buffer)\n\t        // IE 10-11 can't handle a DataView body.\n\t        this._bodyInit = new Blob([this._bodyArrayBuffer])\n\t      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n\t        this._bodyArrayBuffer = bufferClone(body)\n\t      } else {\n\t        throw new Error('unsupported BodyInit type')\n\t      }\n\t\n\t      if (!this.headers.get('content-type')) {\n\t        if (typeof body === 'string') {\n\t          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n\t        } else if (this._bodyBlob && this._bodyBlob.type) {\n\t          this.headers.set('content-type', this._bodyBlob.type)\n\t        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n\t          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n\t        }\n\t      }\n\t    }\n\t\n\t    if (support.blob) {\n\t      this.blob = function() {\n\t        var rejected = consumed(this)\n\t        if (rejected) {\n\t          return rejected\n\t        }\n\t\n\t        if (this._bodyBlob) {\n\t          return Promise.resolve(this._bodyBlob)\n\t        } else if (this._bodyArrayBuffer) {\n\t          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n\t        } else if (this._bodyFormData) {\n\t          throw new Error('could not read FormData body as blob')\n\t        } else {\n\t          return Promise.resolve(new Blob([this._bodyText]))\n\t        }\n\t      }\n\t\n\t      this.arrayBuffer = function() {\n\t        if (this._bodyArrayBuffer) {\n\t          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n\t        } else {\n\t          return this.blob().then(readBlobAsArrayBuffer)\n\t        }\n\t      }\n\t    }\n\t\n\t    this.text = function() {\n\t      var rejected = consumed(this)\n\t      if (rejected) {\n\t        return rejected\n\t      }\n\t\n\t      if (this._bodyBlob) {\n\t        return readBlobAsText(this._bodyBlob)\n\t      } else if (this._bodyArrayBuffer) {\n\t        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n\t      } else if (this._bodyFormData) {\n\t        throw new Error('could not read FormData body as text')\n\t      } else {\n\t        return Promise.resolve(this._bodyText)\n\t      }\n\t    }\n\t\n\t    if (support.formData) {\n\t      this.formData = function() {\n\t        return this.text().then(decode)\n\t      }\n\t    }\n\t\n\t    this.json = function() {\n\t      return this.text().then(JSON.parse)\n\t    }\n\t\n\t    return this\n\t  }\n\t\n\t  // HTTP methods whose capitalization should be normalized\n\t  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\t\n\t  function normalizeMethod(method) {\n\t    var upcased = method.toUpperCase()\n\t    return (methods.indexOf(upcased) > -1) ? upcased : method\n\t  }\n\t\n\t  function Request(input, options) {\n\t    options = options || {}\n\t    var body = options.body\n\t\n\t    if (input instanceof Request) {\n\t      if (input.bodyUsed) {\n\t        throw new TypeError('Already read')\n\t      }\n\t      this.url = input.url\n\t      this.credentials = input.credentials\n\t      if (!options.headers) {\n\t        this.headers = new Headers(input.headers)\n\t      }\n\t      this.method = input.method\n\t      this.mode = input.mode\n\t      if (!body && input._bodyInit != null) {\n\t        body = input._bodyInit\n\t        input.bodyUsed = true\n\t      }\n\t    } else {\n\t      this.url = String(input)\n\t    }\n\t\n\t    this.credentials = options.credentials || this.credentials || 'omit'\n\t    if (options.headers || !this.headers) {\n\t      this.headers = new Headers(options.headers)\n\t    }\n\t    this.method = normalizeMethod(options.method || this.method || 'GET')\n\t    this.mode = options.mode || this.mode || null\n\t    this.referrer = null\n\t\n\t    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n\t      throw new TypeError('Body not allowed for GET or HEAD requests')\n\t    }\n\t    this._initBody(body)\n\t  }\n\t\n\t  Request.prototype.clone = function() {\n\t    return new Request(this, { body: this._bodyInit })\n\t  }\n\t\n\t  function decode(body) {\n\t    var form = new FormData()\n\t    body.trim().split('&').forEach(function(bytes) {\n\t      if (bytes) {\n\t        var split = bytes.split('=')\n\t        var name = split.shift().replace(/\\+/g, ' ')\n\t        var value = split.join('=').replace(/\\+/g, ' ')\n\t        form.append(decodeURIComponent(name), decodeURIComponent(value))\n\t      }\n\t    })\n\t    return form\n\t  }\n\t\n\t  function parseHeaders(rawHeaders) {\n\t    var headers = new Headers()\n\t    rawHeaders.split(/\\r?\\n/).forEach(function(line) {\n\t      var parts = line.split(':')\n\t      var key = parts.shift().trim()\n\t      if (key) {\n\t        var value = parts.join(':').trim()\n\t        headers.append(key, value)\n\t      }\n\t    })\n\t    return headers\n\t  }\n\t\n\t  Body.call(Request.prototype)\n\t\n\t  function Response(bodyInit, options) {\n\t    if (!options) {\n\t      options = {}\n\t    }\n\t\n\t    this.type = 'default'\n\t    this.status = 'status' in options ? options.status : 200\n\t    this.ok = this.status >= 200 && this.status < 300\n\t    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n\t    this.headers = new Headers(options.headers)\n\t    this.url = options.url || ''\n\t    this._initBody(bodyInit)\n\t  }\n\t\n\t  Body.call(Response.prototype)\n\t\n\t  Response.prototype.clone = function() {\n\t    return new Response(this._bodyInit, {\n\t      status: this.status,\n\t      statusText: this.statusText,\n\t      headers: new Headers(this.headers),\n\t      url: this.url\n\t    })\n\t  }\n\t\n\t  Response.error = function() {\n\t    var response = new Response(null, {status: 0, statusText: ''})\n\t    response.type = 'error'\n\t    return response\n\t  }\n\t\n\t  var redirectStatuses = [301, 302, 303, 307, 308]\n\t\n\t  Response.redirect = function(url, status) {\n\t    if (redirectStatuses.indexOf(status) === -1) {\n\t      throw new RangeError('Invalid status code')\n\t    }\n\t\n\t    return new Response(null, {status: status, headers: {location: url}})\n\t  }\n\t\n\t  self.Headers = Headers\n\t  self.Request = Request\n\t  self.Response = Response\n\t\n\t  self.fetch = function(input, init) {\n\t    return new Promise(function(resolve, reject) {\n\t      var request = new Request(input, init)\n\t      var xhr = new XMLHttpRequest()\n\t\n\t      xhr.onload = function() {\n\t        var options = {\n\t          status: xhr.status,\n\t          statusText: xhr.statusText,\n\t          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n\t        }\n\t        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n\t        var body = 'response' in xhr ? xhr.response : xhr.responseText\n\t        resolve(new Response(body, options))\n\t      }\n\t\n\t      xhr.onerror = function() {\n\t        reject(new TypeError('Network request failed'))\n\t      }\n\t\n\t      xhr.ontimeout = function() {\n\t        reject(new TypeError('Network request failed'))\n\t      }\n\t\n\t      xhr.open(request.method, request.url, true)\n\t\n\t      if (request.credentials === 'include') {\n\t        xhr.withCredentials = true\n\t      }\n\t\n\t      if ('responseType' in xhr && support.blob) {\n\t        xhr.responseType = 'blob'\n\t      }\n\t\n\t      request.headers.forEach(function(value, name) {\n\t        xhr.setRequestHeader(name, value)\n\t      })\n\t\n\t      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n\t    })\n\t  }\n\t  self.fetch.polyfill = true\n\t})(typeof self !== 'undefined' ? self : this);\n\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// static/js/main.1aa46ae1.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/bar-chart-dataviz/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 0bc9a8a61383a479b719","'use strict';\n\nvar asap = require('asap/raw');\n\nfunction noop() {}\n\n// States:\n//\n// 0 - pending\n// 1 - fulfilled with _value\n// 2 - rejected with _value\n// 3 - adopted the state of another promise, _value\n//\n// once the state is no longer pending (0) it is immutable\n\n// All `_` prefixed properties will be reduced to `_{random number}`\n// at build time to obfuscate them and discourage their use.\n// We don't use symbols or Object.defineProperty to fully hide them\n// because the performance isn't good enough.\n\n\n// to avoid using try/catch inside critical functions, we\n// extract them to here.\nvar LAST_ERROR = null;\nvar IS_ERROR = {};\nfunction getThen(obj) {\n  try {\n    return obj.then;\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nfunction tryCallOne(fn, a) {\n  try {\n    return fn(a);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\nfunction tryCallTwo(fn, a, b) {\n  try {\n    fn(a, b);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nmodule.exports = Promise;\n\nfunction Promise(fn) {\n  if (typeof this !== 'object') {\n    throw new TypeError('Promises must be constructed via new');\n  }\n  if (typeof fn !== 'function') {\n    throw new TypeError('not a function');\n  }\n  this._45 = 0;\n  this._81 = 0;\n  this._65 = null;\n  this._54 = null;\n  if (fn === noop) return;\n  doResolve(fn, this);\n}\nPromise._10 = null;\nPromise._97 = null;\nPromise._61 = noop;\n\nPromise.prototype.then = function(onFulfilled, onRejected) {\n  if (this.constructor !== Promise) {\n    return safeThen(this, onFulfilled, onRejected);\n  }\n  var res = new Promise(noop);\n  handle(this, new Handler(onFulfilled, onRejected, res));\n  return res;\n};\n\nfunction safeThen(self, onFulfilled, onRejected) {\n  return new self.constructor(function (resolve, reject) {\n    var res = new Promise(noop);\n    res.then(resolve, reject);\n    handle(self, new Handler(onFulfilled, onRejected, res));\n  });\n};\nfunction handle(self, deferred) {\n  while (self._81 === 3) {\n    self = self._65;\n  }\n  if (Promise._10) {\n    Promise._10(self);\n  }\n  if (self._81 === 0) {\n    if (self._45 === 0) {\n      self._45 = 1;\n      self._54 = deferred;\n      return;\n    }\n    if (self._45 === 1) {\n      self._45 = 2;\n      self._54 = [self._54, deferred];\n      return;\n    }\n    self._54.push(deferred);\n    return;\n  }\n  handleResolved(self, deferred);\n}\n\nfunction handleResolved(self, deferred) {\n  asap(function() {\n    var cb = self._81 === 1 ? deferred.onFulfilled : deferred.onRejected;\n    if (cb === null) {\n      if (self._81 === 1) {\n        resolve(deferred.promise, self._65);\n      } else {\n        reject(deferred.promise, self._65);\n      }\n      return;\n    }\n    var ret = tryCallOne(cb, self._65);\n    if (ret === IS_ERROR) {\n      reject(deferred.promise, LAST_ERROR);\n    } else {\n      resolve(deferred.promise, ret);\n    }\n  });\n}\nfunction resolve(self, newValue) {\n  // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n  if (newValue === self) {\n    return reject(\n      self,\n      new TypeError('A promise cannot be resolved with itself.')\n    );\n  }\n  if (\n    newValue &&\n    (typeof newValue === 'object' || typeof newValue === 'function')\n  ) {\n    var then = getThen(newValue);\n    if (then === IS_ERROR) {\n      return reject(self, LAST_ERROR);\n    }\n    if (\n      then === self.then &&\n      newValue instanceof Promise\n    ) {\n      self._81 = 3;\n      self._65 = newValue;\n      finale(self);\n      return;\n    } else if (typeof then === 'function') {\n      doResolve(then.bind(newValue), self);\n      return;\n    }\n  }\n  self._81 = 1;\n  self._65 = newValue;\n  finale(self);\n}\n\nfunction reject(self, newValue) {\n  self._81 = 2;\n  self._65 = newValue;\n  if (Promise._97) {\n    Promise._97(self, newValue);\n  }\n  finale(self);\n}\nfunction finale(self) {\n  if (self._45 === 1) {\n    handle(self, self._54);\n    self._54 = null;\n  }\n  if (self._45 === 2) {\n    for (var i = 0; i < self._54.length; i++) {\n      handle(self, self._54[i]);\n    }\n    self._54 = null;\n  }\n}\n\nfunction Handler(onFulfilled, onRejected, promise){\n  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n  this.promise = promise;\n}\n\n/**\n * Take a potentially misbehaving resolver function and make sure\n * onFulfilled and onRejected are only called once.\n *\n * Makes no guarantees about asynchrony.\n */\nfunction doResolve(fn, promise) {\n  var done = false;\n  var res = tryCallTwo(fn, function (value) {\n    if (done) return;\n    done = true;\n    resolve(promise, value);\n  }, function (reason) {\n    if (done) return;\n    done = true;\n    reject(promise, reason);\n  })\n  if (!done && res === IS_ERROR) {\n    done = true;\n    reject(promise, LAST_ERROR);\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/promise/lib/core.js\n// module id = 1\n// module chunks = 0","\"use strict\";\n\n// Use the fastest means possible to execute a task in its own turn, with\n// priority over other events including IO, animation, reflow, and redraw\n// events in browsers.\n//\n// An exception thrown by a task will permanently interrupt the processing of\n// subsequent tasks. The higher level `asap` function ensures that if an\n// exception is thrown by a task, that the task queue will continue flushing as\n// soon as possible, but if you use `rawAsap` directly, you are responsible to\n// either ensure that no exceptions are thrown from your task, or to manually\n// call `rawAsap.requestFlush` if an exception is thrown.\nmodule.exports = rawAsap;\nfunction rawAsap(task) {\n    if (!queue.length) {\n        requestFlush();\n        flushing = true;\n    }\n    // Equivalent to push, but avoids a function call.\n    queue[queue.length] = task;\n}\n\nvar queue = [];\n// Once a flush has been requested, no further calls to `requestFlush` are\n// necessary until the next `flush` completes.\nvar flushing = false;\n// `requestFlush` is an implementation-specific method that attempts to kick\n// off a `flush` event as quickly as possible. `flush` will attempt to exhaust\n// the event queue before yielding to the browser's own event loop.\nvar requestFlush;\n// The position of the next task to execute in the task queue. This is\n// preserved between calls to `flush` so that it can be resumed if\n// a task throws an exception.\nvar index = 0;\n// If a task schedules additional tasks recursively, the task queue can grow\n// unbounded. To prevent memory exhaustion, the task queue will periodically\n// truncate already-completed tasks.\nvar capacity = 1024;\n\n// The flush function processes all tasks that have been scheduled with\n// `rawAsap` unless and until one of those tasks throws an exception.\n// If a task throws an exception, `flush` ensures that its state will remain\n// consistent and will resume where it left off when called again.\n// However, `flush` does not make any arrangements to be called again if an\n// exception is thrown.\nfunction flush() {\n    while (index < queue.length) {\n        var currentIndex = index;\n        // Advance the index before calling the task. This ensures that we will\n        // begin flushing on the next task the task throws an error.\n        index = index + 1;\n        queue[currentIndex].call();\n        // Prevent leaking memory for long chains of recursive calls to `asap`.\n        // If we call `asap` within tasks scheduled by `asap`, the queue will\n        // grow, but to avoid an O(n) walk for every task we execute, we don't\n        // shift tasks off the queue after they have been executed.\n        // Instead, we periodically shift 1024 tasks off the queue.\n        if (index > capacity) {\n            // Manually shift all values starting at the index back to the\n            // beginning of the queue.\n            for (var scan = 0, newLength = queue.length - index; scan < newLength; scan++) {\n                queue[scan] = queue[scan + index];\n            }\n            queue.length -= index;\n            index = 0;\n        }\n    }\n    queue.length = 0;\n    index = 0;\n    flushing = false;\n}\n\n// `requestFlush` is implemented using a strategy based on data collected from\n// every available SauceLabs Selenium web driver worker at time of writing.\n// https://docs.google.com/spreadsheets/d/1mG-5UYGup5qxGdEMWkhP6BWCz053NUb2E1QoUTU16uA/edit#gid=783724593\n\n// Safari 6 and 6.1 for desktop, iPad, and iPhone are the only browsers that\n// have WebKitMutationObserver but not un-prefixed MutationObserver.\n// Must use `global` or `self` instead of `window` to work in both frames and web\n// workers. `global` is a provision of Browserify, Mr, Mrs, or Mop.\n\n/* globals self */\nvar scope = typeof global !== \"undefined\" ? global : self;\nvar BrowserMutationObserver = scope.MutationObserver || scope.WebKitMutationObserver;\n\n// MutationObservers are desirable because they have high priority and work\n// reliably everywhere they are implemented.\n// They are implemented in all modern browsers.\n//\n// - Android 4-4.3\n// - Chrome 26-34\n// - Firefox 14-29\n// - Internet Explorer 11\n// - iPad Safari 6-7.1\n// - iPhone Safari 7-7.1\n// - Safari 6-7\nif (typeof BrowserMutationObserver === \"function\") {\n    requestFlush = makeRequestCallFromMutationObserver(flush);\n\n// MessageChannels are desirable because they give direct access to the HTML\n// task queue, are implemented in Internet Explorer 10, Safari 5.0-1, and Opera\n// 11-12, and in web workers in many engines.\n// Although message channels yield to any queued rendering and IO tasks, they\n// would be better than imposing the 4ms delay of timers.\n// However, they do not work reliably in Internet Explorer or Safari.\n\n// Internet Explorer 10 is the only browser that has setImmediate but does\n// not have MutationObservers.\n// Although setImmediate yields to the browser's renderer, it would be\n// preferrable to falling back to setTimeout since it does not have\n// the minimum 4ms penalty.\n// Unfortunately there appears to be a bug in Internet Explorer 10 Mobile (and\n// Desktop to a lesser extent) that renders both setImmediate and\n// MessageChannel useless for the purposes of ASAP.\n// https://github.com/kriskowal/q/issues/396\n\n// Timers are implemented universally.\n// We fall back to timers in workers in most engines, and in foreground\n// contexts in the following browsers.\n// However, note that even this simple case requires nuances to operate in a\n// broad spectrum of browsers.\n//\n// - Firefox 3-13\n// - Internet Explorer 6-9\n// - iPad Safari 4.3\n// - Lynx 2.8.7\n} else {\n    requestFlush = makeRequestCallFromTimer(flush);\n}\n\n// `requestFlush` requests that the high priority event queue be flushed as\n// soon as possible.\n// This is useful to prevent an error thrown in a task from stalling the event\n// queue if the exception handled by Node.js’s\n// `process.on(\"uncaughtException\")` or by a domain.\nrawAsap.requestFlush = requestFlush;\n\n// To request a high priority event, we induce a mutation observer by toggling\n// the text of a text node between \"1\" and \"-1\".\nfunction makeRequestCallFromMutationObserver(callback) {\n    var toggle = 1;\n    var observer = new BrowserMutationObserver(callback);\n    var node = document.createTextNode(\"\");\n    observer.observe(node, {characterData: true});\n    return function requestCall() {\n        toggle = -toggle;\n        node.data = toggle;\n    };\n}\n\n// The message channel technique was discovered by Malte Ubl and was the\n// original foundation for this library.\n// http://www.nonblocking.io/2011/06/windownexttick.html\n\n// Safari 6.0.5 (at least) intermittently fails to create message ports on a\n// page's first load. Thankfully, this version of Safari supports\n// MutationObservers, so we don't need to fall back in that case.\n\n// function makeRequestCallFromMessageChannel(callback) {\n//     var channel = new MessageChannel();\n//     channel.port1.onmessage = callback;\n//     return function requestCall() {\n//         channel.port2.postMessage(0);\n//     };\n// }\n\n// For reasons explained above, we are also unable to use `setImmediate`\n// under any circumstances.\n// Even if we were, there is another bug in Internet Explorer 10.\n// It is not sufficient to assign `setImmediate` to `requestFlush` because\n// `setImmediate` must be called *by name* and therefore must be wrapped in a\n// closure.\n// Never forget.\n\n// function makeRequestCallFromSetImmediate(callback) {\n//     return function requestCall() {\n//         setImmediate(callback);\n//     };\n// }\n\n// Safari 6.0 has a problem where timers will get lost while the user is\n// scrolling. This problem does not impact ASAP because Safari 6.0 supports\n// mutation observers, so that implementation is used instead.\n// However, if we ever elect to use timers in Safari, the prevalent work-around\n// is to add a scroll event listener that calls for a flush.\n\n// `setTimeout` does not call the passed callback if the delay is less than\n// approximately 7 in web workers in Firefox 8 through 18, and sometimes not\n// even then.\n\nfunction makeRequestCallFromTimer(callback) {\n    return function requestCall() {\n        // We dispatch a timeout with a specified delay of 0 for engines that\n        // can reliably accommodate that request. This will usually be snapped\n        // to a 4 milisecond delay, but once we're flushing, there's no delay\n        // between events.\n        var timeoutHandle = setTimeout(handleTimer, 0);\n        // However, since this timer gets frequently dropped in Firefox\n        // workers, we enlist an interval handle that will try to fire\n        // an event 20 times per second until it succeeds.\n        var intervalHandle = setInterval(handleTimer, 50);\n\n        function handleTimer() {\n            // Whichever timer succeeds will cancel both timers and\n            // execute the callback.\n            clearTimeout(timeoutHandle);\n            clearInterval(intervalHandle);\n            callback();\n        }\n    };\n}\n\n// This is for `asap.js` only.\n// Its name will be periodically randomized to break any code that depends on\n// its existence.\nrawAsap.makeRequestCallFromTimer = makeRequestCallFromTimer;\n\n// ASAP was originally a nextTick shim included in Q. This was factored out\n// into this ASAP package. It was later adapted to RSVP which made further\n// amendments. These decisions, particularly to marginalize MessageChannel and\n// to capture the MutationObserver implementation in a closure, were integrated\n// back into ASAP proper.\n// https://github.com/tildeio/rsvp.js/blob/cddf7232546a9cf858524b75cde6f9edf72620a7/lib/rsvp/asap.js\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/asap/browser-raw.js\n// module id = 2\n// module chunks = 0","import './index.css';\nimport * as d3 from 'd3';\n\nconst url = 'https://raw.githubusercontent.com/FreeCodeCamp/ProjectReferenceData/master/GDP-data.json';\n\nlet data;\nlet formatTime = d3.timeFormat(\"%e %b %Y\");\nlet formatValue = d3.format(\"$,.2f\");\n\nconst margin = {\n        top: 40,\n        right: 20,\n        bottom: 40,\n        left: 60\n      },\n      width = 1000 - margin.left - margin.right,\n      height = 600 - margin.top - margin.bottom;\n\nlet svg = d3.select(\".chart\").append(\"svg\")\n            .attr(\"width\", width + margin.left + margin.right)\n            .attr(\"height\", height + margin.top + margin.bottom)\n            .append(\"g\")\n            .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nfetch(url)\n  .then((response) => response.json())\n  .then((json) => {\n    data = json;\n    buildSVG();\n  });\n\nfunction buildSVG() {\n  let minDate = new Date(data.data[0][0]);\n  let maxDate = new Date(data.data[data.data.length - 1][0]);\n  let x = d3.scaleTime().range([0, width]);\n  let y = d3.scaleLinear().range([height, 0]);\n  let barWidth = Math.ceil(width/data.data.length);\n\n  x.domain([minDate, maxDate]);\n  x.ticks(d3.timeYear.every(1));\n  y.domain([0, d3.max(data.data, (d) => d[1])]);\n\n  let div = d3.select(\"body\").append(\"div\")\n    .attr(\"class\", \"tooltip\")\n    .style(\"opacity\", 0);\n  let title = d3.select(\".title\").html(data.name);\n  svg.selectAll(\".bar\")\n    .data(data.data)\n    .enter().append(\"rect\")\n      .attr(\"class\", \"bar\")\n      .attr(\"x\", (d) => x(new Date(d[0])))\n      .attr(\"width\", barWidth)\n      .attr(\"y\", (d) => y(d[1]))\n      .attr(\"height\", (d) => height - y(d[1]))\n      .on(\"mouseover\", function(d) {\n       div.transition()\n         .duration(200)\n         .style(\"opacity\", .9);\n       div.html(formatTime(new Date(d[0])) + \"<br/>\" + formatValue(d[1]))\n         .style(\"left\", (d3.event.pageX) + \"px\")\n         .style(\"top\", (d3.event.pageY - 28) + \"px\");\n       })\n     .on(\"mouseout\", function(d) {\n       div.transition()\n         .duration(500)\n         .style(\"opacity\", 0);\n       });\n\n  svg.append(\"g\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(d3.axisBottom(x));\n\n  svg.append(\"g\")\n      .call(d3.axisLeft(y));\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","// https://d3js.org Version 4.8.0. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar version = \"4.8.0\";\n\nvar ascending = function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n};\n\nvar bisector = function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n};\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n\nvar ascendingBisect = bisector(ascending);\nvar bisectRight = ascendingBisect.right;\nvar bisectLeft = ascendingBisect.left;\n\nvar pairs = function(array, f) {\n  if (f == null) f = pair;\n  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n  while (i < n) pairs[i] = f(p, p = array[++i]);\n  return pairs;\n};\n\nfunction pair(a, b) {\n  return [a, b];\n}\n\nvar cross = function(values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n};\n\nvar descending = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar number = function(x) {\n  return x === null ? NaN : +x;\n};\n\nvar variance = function(values, valueof) {\n  var n = values.length,\n      m = 0,\n      i = -1,\n      mean = 0,\n      value,\n      delta,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  if (m > 1) return sum / (m - 1);\n};\n\nvar deviation = function(array, f) {\n  var v = variance(array, f);\n  return v ? Math.sqrt(v) : v;\n};\n\nvar extent = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return [min, max];\n};\n\nvar array = Array.prototype;\n\nvar slice = array.slice;\nvar map = array.map;\n\nvar constant = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar identity = function(x) {\n  return x;\n};\n\nvar sequence = function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n};\n\nvar e10 = Math.sqrt(50);\nvar e5 = Math.sqrt(10);\nvar e2 = Math.sqrt(2);\n\nvar ticks = function(start, stop, count) {\n  var reverse = stop < start,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  if (reverse) n = start, start = stop, stop = n;\n\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n};\n\nfunction tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nfunction tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n\nvar sturges = function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n};\n\nvar histogram = function() {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      tz = tickStep(x0, x1, tz);\n      tz = sequence(Math.ceil(x0 / tz) * tz, Math.floor(x1 / tz) * tz, tz); // exclusive\n    }\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] > x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n  };\n\n  return histogram;\n};\n\nvar threshold = function(values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n};\n\nvar freedmanDiaconis = function(values, min, max) {\n  values = map.call(values, number).sort(ascending);\n  return Math.ceil((max - min) / (2 * (threshold(values, 0.75) - threshold(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n};\n\nvar scott = function(values, min, max) {\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n};\n\nvar max = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return max;\n};\n\nvar mean = function(values, valueof) {\n  var n = values.length,\n      m = n,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) sum += value;\n      else --m;\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) sum += value;\n      else --m;\n    }\n  }\n\n  if (m) return sum / m;\n};\n\nvar median = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      numbers = [];\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  return threshold(numbers.sort(ascending), 0.5);\n};\n\nvar merge = function(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n};\n\nvar min = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  return min;\n};\n\nvar permute = function(array, indexes) {\n  var i = indexes.length, permutes = new Array(i);\n  while (i--) permutes[i] = array[indexes[i]];\n  return permutes;\n};\n\nvar scan = function(values, compare) {\n  if (!(n = values.length)) return;\n  var n,\n      i = 0,\n      j = 0,\n      xi,\n      xj = values[j];\n\n  if (compare == null) compare = ascending;\n\n  while (++i < n) {\n    if (compare(xi = values[i], xj) < 0 || compare(xj, xj) !== 0) {\n      xj = xi, j = i;\n    }\n  }\n\n  if (compare(xj, xj) === 0) return j;\n};\n\nvar shuffle = function(array, i0, i1) {\n  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m + i0];\n    array[m + i0] = array[i + i0];\n    array[i + i0] = t;\n  }\n\n  return array;\n};\n\nvar sum = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (value = +values[i]) sum += value; // Note: zero and null are equivalent.\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (value = +valueof(values[i], i, values)) sum += value;\n    }\n  }\n\n  return sum;\n};\n\nvar transpose = function(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n};\n\nfunction length(d) {\n  return d.length;\n}\n\nvar zip = function() {\n  return transpose(arguments);\n};\n\nvar slice$1 = Array.prototype.slice;\n\nvar identity$1 = function(x) {\n  return x;\n};\n\nvar top = 1;\nvar right = 2;\nvar bottom = 3;\nvar left = 4;\nvar epsilon = 1e-6;\n\nfunction translateX(x) {\n  return \"translate(\" + x + \",0)\";\n}\n\nfunction translateY(y) {\n  return \"translate(0,\" + y + \")\";\n}\n\nfunction center(scale) {\n  var offset = scale.bandwidth() / 2;\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3,\n      k = orient === top || orient === left ? -1 : 1,\n      x, y = orient === left || orient === right ? (x = \"x\", \"y\") : (x = \"y\", \"x\"),\n      transform = orient === top || orient === bottom ? translateX : translateY;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity$1) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        range = scale.range(),\n        range0 = range[0] + 0.5,\n        range1 = range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : identity$1)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"#000\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"#000\")\n        .attr(x + \"2\", k * tickSizeInner)\n        .attr(y + \"1\", 0.5)\n        .attr(y + \"2\", 0.5));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"#000\")\n        .attr(x, k * spacing)\n        .attr(y, 0.5)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position(d)); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice$1.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice$1.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice$1.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nfunction axisTop(scale) {\n  return axis(top, scale);\n}\n\nfunction axisRight(scale) {\n  return axis(right, scale);\n}\n\nfunction axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nfunction axisLeft(scale) {\n  return axis(left, scale);\n}\n\nvar noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nvar xhtml = \"http://www.w3.org/1999/xhtml\";\n\nvar namespaces = {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n\nvar namespace = function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n};\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nvar creator = function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n};\n\nvar nextId = 0;\n\nfunction local$1() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local$1.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nvar matcher = function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n};\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!element.matches) {\n    var vendorMatches = element.webkitMatchesSelector\n        || element.msMatchesSelector\n        || element.mozMatchesSelector\n        || element.oMatchesSelector;\n    matcher = function(selector) {\n      return function() {\n        return vendorMatches.call(this, selector);\n      };\n    };\n  }\n}\n\nvar matcher$1 = matcher;\n\nvar filterEvents = {};\n\nexports.event = null;\n\nif (typeof document !== \"undefined\") {\n  var element$1 = document.documentElement;\n  if (!(\"onmouseenter\" in element$1)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = exports.event; // Events can be reentrant (e.g., focus).\n    exports.event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      exports.event = event0;\n    }\n  };\n}\n\nfunction parseTypenames$1(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nvar selection_on = function(typename, value, capture) {\n  var typenames = parseTypenames$1(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n};\n\nfunction customEvent(event1, listener, that, args) {\n  var event0 = exports.event;\n  event1.sourceEvent = exports.event;\n  exports.event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    exports.event = event0;\n  }\n}\n\nvar sourceEvent = function() {\n  var current = exports.event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n};\n\nvar point = function(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n};\n\nvar mouse = function(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point(node, event);\n};\n\nfunction none() {}\n\nvar selector = function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n};\n\nvar selection_select = function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n};\n\nfunction empty$1() {\n  return [];\n}\n\nvar selectorAll = function(selector) {\n  return selector == null ? empty$1 : function() {\n    return this.querySelectorAll(selector);\n  };\n};\n\nvar selection_selectAll = function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n};\n\nvar selection_filter = function(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n};\n\nvar sparse = function(update) {\n  return new Array(update.length);\n};\n\nvar selection_enter = function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n};\n\nfunction EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n\nvar constant$1 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nvar selection_data = function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant$1(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n};\n\nvar selection_exit = function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n};\n\nvar selection_merge = function(selection) {\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n};\n\nvar selection_order = function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n};\n\nvar selection_sort = function(compare) {\n  if (!compare) compare = ascending$1;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n};\n\nfunction ascending$1(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n\nvar selection_call = function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n};\n\nvar selection_nodes = function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n};\n\nvar selection_node = function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n};\n\nvar selection_size = function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n};\n\nvar selection_empty = function() {\n  return !this.node();\n};\n\nvar selection_each = function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n};\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nvar selection_attr = function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n};\n\nvar window = function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n};\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nvar selection_style = function(name, value, priority) {\n  var node;\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : window(node = this.node())\n          .getComputedStyle(node, null)\n          .getPropertyValue(name);\n};\n\nfunction propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nvar selection_property = function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n};\n\nfunction classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nvar selection_classed = function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n};\n\nfunction textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nvar selection_text = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n};\n\nfunction htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nvar selection_html = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n};\n\nfunction raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nvar selection_raise = function() {\n  return this.each(raise);\n};\n\nfunction lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nvar selection_lower = function() {\n  return this.each(lower);\n};\n\nvar selection_append = function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n};\n\nfunction constantNull() {\n  return null;\n}\n\nvar selection_insert = function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n};\n\nfunction remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nvar selection_remove = function() {\n  return this.each(remove);\n};\n\nvar selection_datum = function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n};\n\nfunction dispatchEvent(node, type, params) {\n  var window$$1 = window(node),\n      event = window$$1.CustomEvent;\n\n  if (event) {\n    event = new event(type, params);\n  } else {\n    event = window$$1.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nvar selection_dispatch = function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n};\n\nvar root = [null];\n\nfunction Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nvar select = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n};\n\nvar selectAll = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n      : new Selection([selector == null ? [] : selector], root);\n};\n\nvar touch = function(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point(node, touch);\n    }\n  }\n\n  return null;\n};\n\nvar touches = function(node, touches) {\n  if (touches == null) touches = sourceEvent().touches;\n\n  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n    points[i] = point(node, touches[i]);\n  }\n\n  return points;\n};\n\nfunction nopropagation() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\nvar dragDisable = function(view) {\n  var root = view.document.documentElement,\n      selection$$1 = select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection$$1.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n};\n\nfunction yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection$$1 = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection$$1.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection$$1.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection$$1.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n\nvar constant$2 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$1() {\n  return !exports.event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: exports.event.x, y: exports.event.y} : d;\n}\n\nvar drag = function() {\n  var filter = defaultFilter$1,\n      container = defaultContainer,\n      subject = defaultSubject,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousemoving,\n      touchending;\n\n  function drag(selection$$1) {\n    selection$$1\n        .on(\"mousedown.drag\", mousedowned)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(exports.event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    dragDisable(exports.event.view);\n    nopropagation();\n    mousemoving = false;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    mousemoving = true;\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(exports.event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(exports.event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches$$1 = exports.event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches$$1.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches$$1[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches$$1[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches$$1[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((exports.event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$2(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant$2(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant$2(_), drag) : subject;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  return drag;\n};\n\nvar define = function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n};\n\nfunction extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n\nfunction Color() {}\n\nvar darker = 0.7;\nvar brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\";\nvar reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\";\nvar reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\";\nvar reHex3 = /^#([0-9a-f]{3})$/;\nvar reHex6 = /^#([0-9a-f]{6})$/;\nvar reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\");\nvar reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\");\nvar reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\");\nvar reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\");\nvar reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\");\nvar reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nfunction color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nfunction rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nfunction rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nfunction Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nfunction hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nfunction hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n\nvar deg2rad = Math.PI / 180;\nvar rad2deg = 180 / Math.PI;\n\nvar Kn = 18;\nvar Xn = 0.950470;\nvar Yn = 1;\nvar Zn = 1.088830;\nvar t0 = 4 / 29;\nvar t1 = 6 / 29;\nvar t2 = 3 * t1 * t1;\nvar t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var b = rgb2xyz(o.r),\n      a = rgb2xyz(o.g),\n      l = rgb2xyz(o.b),\n      x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n      y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n      z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nfunction lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nfunction Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    y = Yn * lab2xyz(y);\n    x = Xn * lab2xyz(x);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n      xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n      xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction xyz2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2xyz(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nfunction hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n\nvar A = -0.14861;\nvar B = +1.78277;\nvar C = -0.29227;\nvar D = -0.90649;\nvar E = +1.97294;\nvar ED = E * D;\nvar EB = E * B;\nvar BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nfunction cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n\nfunction basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nvar basis$1 = function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n};\n\nvar basisClosed = function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n};\n\nvar constant$3 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nfunction hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant$3(isNaN(a) ? b : a);\n}\n\nfunction gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant$3(isNaN(a) ? b : a);\n  };\n}\n\nfunction nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant$3(isNaN(a) ? b : a);\n}\n\nvar interpolateRgb = ((function rgbGamma(y) {\n  var color$$1 = gamma(y);\n\n  function rgb$$1(start, end) {\n    var r = color$$1((start = rgb(start)).r, (end = rgb(end)).r),\n        g = color$$1(start.g, end.g),\n        b = color$$1(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb$$1.gamma = rgbGamma;\n\n  return rgb$$1;\n}))(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color$$1;\n    for (i = 0; i < n; ++i) {\n      color$$1 = rgb(colors[i]);\n      r[i] = color$$1.r || 0;\n      g[i] = color$$1.g || 0;\n      b[i] = color$$1.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color$$1.opacity = 1;\n    return function(t) {\n      color$$1.r = r(t);\n      color$$1.g = g(t);\n      color$$1.b = b(t);\n      return color$$1 + \"\";\n    };\n  };\n}\n\nvar rgbBasis = rgbSpline(basis$1);\nvar rgbBasisClosed = rgbSpline(basisClosed);\n\nvar array$1 = function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(nb),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = interpolateValue(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n};\n\nvar date = function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n};\n\nvar reinterpolate = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n};\n\nvar object = function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = interpolateValue(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n};\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\nvar reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nvar interpolateString = function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: reinterpolate(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n};\n\nvar interpolateValue = function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant$3(b)\n      : (t === \"number\" ? reinterpolate\n      : t === \"string\" ? ((c = color(b)) ? (b = c, interpolateRgb) : interpolateString)\n      : b instanceof color ? interpolateRgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array$1\n      : isNaN(b) ? object\n      : reinterpolate)(a, b);\n};\n\nvar interpolateRound = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n};\n\nvar degrees = 180 / Math.PI;\n\nvar identity$2 = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nvar decompose = function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n};\n\nvar cssNode;\nvar cssRoot;\nvar cssView;\nvar svgNode;\n\nfunction parseCss(value) {\n  if (value === \"none\") return identity$2;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nfunction parseSvg(value) {\n  if (value == null) return identity$2;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity$2;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: reinterpolate(xa, xb)}, {i: i - 2, x: reinterpolate(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: reinterpolate(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: reinterpolate(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: reinterpolate(xa, xb)}, {i: i - 2, x: reinterpolate(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nvar interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nvar interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n\nvar rho = Math.SQRT2;\nvar rho2 = 2;\nvar rho4 = 4;\nvar epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nvar interpolateZoom = function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    };\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    };\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n};\n\nfunction hsl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hsl(start)).h, (end = hsl(end)).h),\n        s = nogamma(start.s, end.s),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hsl$2 = hsl$1(hue);\nvar hslLong = hsl$1(nogamma);\n\nfunction lab$1(start, end) {\n  var l = nogamma((start = lab(start)).l, (end = lab(end)).l),\n      a = nogamma(start.a, end.a),\n      b = nogamma(start.b, end.b),\n      opacity = nogamma(start.opacity, end.opacity);\n  return function(t) {\n    start.l = l(t);\n    start.a = a(t);\n    start.b = b(t);\n    start.opacity = opacity(t);\n    return start + \"\";\n  };\n}\n\nfunction hcl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hcl(start)).h, (end = hcl(end)).h),\n        c = nogamma(start.c, end.c),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hcl$2 = hcl$1(hue);\nvar hclLong = hcl$1(nogamma);\n\nfunction cubehelix$1(hue$$1) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix$$1(start, end) {\n      var h = hue$$1((start = cubehelix(start)).h, (end = cubehelix(end)).h),\n          s = nogamma(start.s, end.s),\n          l = nogamma(start.l, end.l),\n          opacity = nogamma(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix$$1.gamma = cubehelixGamma;\n\n    return cubehelix$$1;\n  })(1);\n}\n\nvar cubehelix$2 = cubehelix$1(hue);\nvar cubehelixLong = cubehelix$1(nogamma);\n\nvar quantize = function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n};\n\nvar frame = 0;\nvar timeout = 0;\nvar interval = 0;\nvar pokeDelay = 1000;\nvar taskHead;\nvar taskTail;\nvar clockLast = 0;\nvar clockNow = 0;\nvar clockSkew = 0;\nvar clock = typeof performance === \"object\" && performance.now ? performance : Date;\nvar setFrame = typeof requestAnimationFrame === \"function\" ? requestAnimationFrame : function(f) { setTimeout(f, 17); };\n\nfunction now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nfunction Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nfunction timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nfunction timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow;\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, delay);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clockNow, interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n\nvar timeout$1 = function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n};\n\nvar interval$1 = function(callback, delay, time) {\n  var t = new Timer, total = delay;\n  if (delay == null) return t.restart(callback, delay, time), t;\n  delay = +delay, time = time == null ? now() : +time;\n  t.restart(function tick(elapsed) {\n    elapsed += total;\n    t.restart(tick, total += delay, time);\n    callback(elapsed);\n  }, delay, time);\n  return t;\n};\n\nvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\nvar emptyTween = [];\n\nvar CREATED = 0;\nvar SCHEDULED = 1;\nvar STARTING = 2;\nvar STARTED = 3;\nvar RUNNING = 4;\nvar ENDING = 5;\nvar ENDED = 6;\n\nvar schedule = function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n};\n\nfunction init(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > CREATED) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction set$1(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > STARTING) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction get$1(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout$1(start);\n\n      // Interrupt the active transition, if any.\n      // Dispatch the interrupt event.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions. No interrupt event is dispatched\n      // because the cancelled transitions never started. Note that this also\n      // removes this transition from the pending list!\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout$1(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(null, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n\nvar interrupt = function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n};\n\nvar selection_interrupt = function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n};\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set$1(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set$1(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nvar transition_tween = function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get$1(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n};\n\nfunction tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set$1(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get$1(node, id).value[name];\n  };\n}\n\nvar interpolate$$1 = function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? reinterpolate\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n};\n\nfunction attrRemove$1(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS$1(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant$1(name, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrConstantNS$1(fullname, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrFunction$1(name, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttribute(name);\n    value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nfunction attrFunctionNS$1(fullname, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nvar transition_attr = function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransformSvg : interpolate$$1;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS$1 : attrFunction$1)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS$1 : attrRemove$1)(fullname)\n      : (fullname.local ? attrConstantNS$1 : attrConstant$1)(fullname, i, value + \"\"));\n};\n\nfunction attrTweenNS(fullname, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttributeNS(fullname.space, fullname.local, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttribute(name, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nvar transition_attrTween = function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n};\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nvar transition_delay = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get$1(this.node(), id).delay;\n};\n\nfunction durationFunction(id, value) {\n  return function() {\n    set$1(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set$1(this, id).duration = value;\n  };\n}\n\nvar transition_duration = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get$1(this.node(), id).duration;\n};\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set$1(this, id).ease = value;\n  };\n}\n\nvar transition_ease = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get$1(this.node(), id).ease;\n};\n\nvar transition_filter = function(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n};\n\nvar transition_merge = function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n};\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set$1;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nvar transition_on = function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get$1(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n};\n\nfunction removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nvar transition_remove = function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n};\n\nvar transition_select = function(select$$1) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select$$1 !== \"function\") select$$1 = selector(select$$1);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select$$1.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get$1(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n};\n\nvar transition_selectAll = function(select$$1) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select$$1 !== \"function\") select$$1 = selectorAll(select$$1);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select$$1.call(node, node.__data__, i, group), child, inherit = get$1(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n};\n\nvar Selection$1 = selection.prototype.constructor;\n\nvar transition_selection = function() {\n  return new Selection$1(this._groups, this._parents);\n};\n\nfunction styleRemove$1(name, interpolate$$2) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var style = window(this).getComputedStyle(this, null),\n        value0 = style.getPropertyValue(name),\n        value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$2(value00 = value0, value10 = value1);\n  };\n}\n\nfunction styleRemoveEnd(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant$1(name, interpolate$$2, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = window(this).getComputedStyle(this, null).getPropertyValue(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$2(value00 = value0, value1);\n  };\n}\n\nfunction styleFunction$1(name, interpolate$$2, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var style = window(this).getComputedStyle(this, null),\n        value0 = style.getPropertyValue(name),\n        value1 = value(this);\n    if (value1 == null) value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$2(value00 = value0, value10 = value1);\n  };\n}\n\nvar transition_style = function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransformCss : interpolate$$1;\n  return value == null ? this\n          .styleTween(name, styleRemove$1(name, i))\n          .on(\"end.style.\" + name, styleRemoveEnd(name))\n      : this.styleTween(name, typeof value === \"function\"\n          ? styleFunction$1(name, i, tweenValue(this, \"style.\" + name, value))\n          : styleConstant$1(name, i, value + \"\"), priority);\n};\n\nfunction styleTween(name, value, priority) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.style.setProperty(name, i(t), priority);\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nvar transition_styleTween = function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n};\n\nfunction textConstant$1(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction$1(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nvar transition_text = function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction$1(tweenValue(this, \"text\", value))\n      : textConstant$1(value == null ? \"\" : value + \"\"));\n};\n\nvar transition_transition = function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get$1(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n};\n\nvar id = 0;\n\nfunction Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nfunction transition(name) {\n  return selection().transition(name);\n}\n\nfunction newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease\n};\n\nfunction linear$1(t) {\n  return +t;\n}\n\nfunction quadIn(t) {\n  return t * t;\n}\n\nfunction quadOut(t) {\n  return t * (2 - t);\n}\n\nfunction quadInOut(t) {\n  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n}\n\nfunction cubicIn(t) {\n  return t * t * t;\n}\n\nfunction cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nfunction cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n\nvar exponent = 3;\n\nvar polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nvar polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nvar polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n\nvar pi = Math.PI;\nvar halfPi = pi / 2;\n\nfunction sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nfunction sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nfunction sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n\nfunction expIn(t) {\n  return Math.pow(2, 10 * t - 10);\n}\n\nfunction expOut(t) {\n  return 1 - Math.pow(2, -10 * t);\n}\n\nfunction expInOut(t) {\n  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n}\n\nfunction circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nfunction circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nfunction circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n\nvar b1 = 4 / 11;\nvar b2 = 6 / 11;\nvar b3 = 8 / 11;\nvar b4 = 3 / 4;\nvar b5 = 9 / 11;\nvar b6 = 10 / 11;\nvar b7 = 15 / 16;\nvar b8 = 21 / 22;\nvar b9 = 63 / 64;\nvar b0 = 1 / b1 / b1;\n\nfunction bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nfunction bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nfunction bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n\nvar overshoot = 1.70158;\n\nvar backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nvar backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nvar backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n\nvar tau = 2 * Math.PI;\nvar amplitude = 1;\nvar period = 0.3;\n\nvar elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nvar elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nvar elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: cubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nvar selection_transition = function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n};\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n\nvar root$1 = [null];\n\nvar active = function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      i;\n\n  if (schedules) {\n    name = name == null ? null : name + \"\";\n    for (i in schedules) {\n      if ((schedule = schedules[i]).state > SCHEDULED && schedule.name === name) {\n        return new Transition([[node]], root$1, name, +i);\n      }\n    }\n  }\n\n  return null;\n};\n\nvar constant$4 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar BrushEvent = function(target, type, selection) {\n  this.target = target;\n  this.type = type;\n  this.selection = selection;\n};\n\nfunction nopropagation$1() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent$1 = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\nvar MODE_DRAG = {name: \"drag\"};\nvar MODE_SPACE = {name: \"space\"};\nvar MODE_HANDLE = {name: \"handle\"};\nvar MODE_CENTER = {name: \"center\"};\n\nvar X = {\n  name: \"x\",\n  handles: [\"e\", \"w\"].map(type),\n  input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n};\n\nvar Y = {\n  name: \"y\",\n  handles: [\"n\", \"s\"].map(type),\n  input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n};\n\nvar XY = {\n  name: \"xy\",\n  handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type),\n  input: function(xy) { return xy; },\n  output: function(xy) { return xy; }\n};\n\nvar cursors = {\n  overlay: \"crosshair\",\n  selection: \"move\",\n  n: \"ns-resize\",\n  e: \"ew-resize\",\n  s: \"ns-resize\",\n  w: \"ew-resize\",\n  nw: \"nwse-resize\",\n  ne: \"nesw-resize\",\n  se: \"nwse-resize\",\n  sw: \"nesw-resize\"\n};\n\nvar flipX = {\n  e: \"w\",\n  w: \"e\",\n  nw: \"ne\",\n  ne: \"nw\",\n  se: \"sw\",\n  sw: \"se\"\n};\n\nvar flipY = {\n  n: \"s\",\n  s: \"n\",\n  nw: \"sw\",\n  ne: \"se\",\n  se: \"ne\",\n  sw: \"nw\"\n};\n\nvar signsX = {\n  overlay: +1,\n  selection: +1,\n  n: null,\n  e: +1,\n  s: null,\n  w: -1,\n  nw: -1,\n  ne: +1,\n  se: +1,\n  sw: -1\n};\n\nvar signsY = {\n  overlay: +1,\n  selection: +1,\n  n: -1,\n  e: null,\n  s: +1,\n  w: null,\n  nw: -1,\n  ne: -1,\n  se: +1,\n  sw: +1\n};\n\nfunction type(t) {\n  return {type: t};\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent() {\n  var svg = this.ownerSVGElement || this;\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n}\n\n// Like d3.local, but with the name “__brush” rather than auto-generated.\nfunction local$$1(node) {\n  while (!node.__brush) if (!(node = node.parentNode)) return;\n  return node.__brush;\n}\n\nfunction empty(extent) {\n  return extent[0][0] === extent[1][0]\n      || extent[0][1] === extent[1][1];\n}\n\nfunction brushSelection(node) {\n  var state = node.__brush;\n  return state ? state.dim.output(state.selection) : null;\n}\n\nfunction brushX() {\n  return brush$1(X);\n}\n\nfunction brushY() {\n  return brush$1(Y);\n}\n\nvar brush = function() {\n  return brush$1(XY);\n};\n\nfunction brush$1(dim) {\n  var extent = defaultExtent,\n      filter = defaultFilter,\n      listeners = dispatch(brush, \"start\", \"brush\", \"end\"),\n      handleSize = 6,\n      touchending;\n\n  function brush(group) {\n    var overlay = group\n        .property(\"__brush\", initialize)\n      .selectAll(\".overlay\")\n      .data([type(\"overlay\")]);\n\n    overlay.enter().append(\"rect\")\n        .attr(\"class\", \"overlay\")\n        .attr(\"pointer-events\", \"all\")\n        .attr(\"cursor\", cursors.overlay)\n      .merge(overlay)\n        .each(function() {\n          var extent = local$$1(this).extent;\n          select(this)\n              .attr(\"x\", extent[0][0])\n              .attr(\"y\", extent[0][1])\n              .attr(\"width\", extent[1][0] - extent[0][0])\n              .attr(\"height\", extent[1][1] - extent[0][1]);\n        });\n\n    group.selectAll(\".selection\")\n      .data([type(\"selection\")])\n      .enter().append(\"rect\")\n        .attr(\"class\", \"selection\")\n        .attr(\"cursor\", cursors.selection)\n        .attr(\"fill\", \"#777\")\n        .attr(\"fill-opacity\", 0.3)\n        .attr(\"stroke\", \"#fff\")\n        .attr(\"shape-rendering\", \"crispEdges\");\n\n    var handle = group.selectAll(\".handle\")\n      .data(dim.handles, function(d) { return d.type; });\n\n    handle.exit().remove();\n\n    handle.enter().append(\"rect\")\n        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\n    group\n        .each(redraw)\n        .attr(\"fill\", \"none\")\n        .attr(\"pointer-events\", \"all\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .on(\"mousedown.brush touchstart.brush\", started);\n  }\n\n  brush.move = function(group, selection$$1) {\n    if (group.selection) {\n      group\n          .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n          .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n          .tween(\"brush\", function() {\n            var that = this,\n                state = that.__brush,\n                emit = emitter(that, arguments),\n                selection0 = state.selection,\n                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(this, arguments) : selection$$1, state.extent),\n                i = interpolateValue(selection0, selection1);\n\n            function tween(t) {\n              state.selection = t === 1 && empty(selection1) ? null : i(t);\n              redraw.call(that);\n              emit.brush();\n            }\n\n            return selection0 && selection1 ? tween : tween(1);\n          });\n    } else {\n      group\n          .each(function() {\n            var that = this,\n                args = arguments,\n                state = that.__brush,\n                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(that, args) : selection$$1, state.extent),\n                emit = emitter(that, args).beforestart();\n\n            interrupt(that);\n            state.selection = selection1 == null || empty(selection1) ? null : selection1;\n            redraw.call(that);\n            emit.start().brush().end();\n          });\n    }\n  };\n\n  function redraw() {\n    var group = select(this),\n        selection$$1 = local$$1(this).selection;\n\n    if (selection$$1) {\n      group.selectAll(\".selection\")\n          .style(\"display\", null)\n          .attr(\"x\", selection$$1[0][0])\n          .attr(\"y\", selection$$1[0][1])\n          .attr(\"width\", selection$$1[1][0] - selection$$1[0][0])\n          .attr(\"height\", selection$$1[1][1] - selection$$1[0][1]);\n\n      group.selectAll(\".handle\")\n          .style(\"display\", null)\n          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection$$1[1][0] - handleSize / 2 : selection$$1[0][0] - handleSize / 2; })\n          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection$$1[1][1] - handleSize / 2 : selection$$1[0][1] - handleSize / 2; })\n          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection$$1[1][0] - selection$$1[0][0] + handleSize : handleSize; })\n          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection$$1[1][1] - selection$$1[0][1] + handleSize : handleSize; });\n    }\n\n    else {\n      group.selectAll(\".selection,.handle\")\n          .style(\"display\", \"none\")\n          .attr(\"x\", null)\n          .attr(\"y\", null)\n          .attr(\"width\", null)\n          .attr(\"height\", null);\n    }\n  }\n\n  function emitter(that, args) {\n    return that.__brush.emitter || new Emitter(that, args);\n  }\n\n  function Emitter(that, args) {\n    this.that = that;\n    this.args = args;\n    this.state = that.__brush;\n    this.active = 0;\n  }\n\n  Emitter.prototype = {\n    beforestart: function() {\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n      return this;\n    },\n    start: function() {\n      if (this.starting) this.starting = false, this.emit(\"start\");\n      return this;\n    },\n    brush: function() {\n      this.emit(\"brush\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function started() {\n    if (exports.event.touches) { if (exports.event.changedTouches.length < exports.event.touches.length) return noevent$1(); }\n    else if (touchending) return;\n    if (!filter.apply(this, arguments)) return;\n\n    var that = this,\n        type = exports.event.target.__data__.type,\n        mode = (exports.event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (exports.event.altKey ? MODE_CENTER : MODE_HANDLE),\n        signX = dim === Y ? null : signsX[type],\n        signY = dim === X ? null : signsY[type],\n        state = local$$1(that),\n        extent = state.extent,\n        selection$$1 = state.selection,\n        W = extent[0][0], w0, w1,\n        N = extent[0][1], n0, n1,\n        E = extent[1][0], e0, e1,\n        S = extent[1][1], s0, s1,\n        dx,\n        dy,\n        moving,\n        shifting = signX && signY && exports.event.shiftKey,\n        lockX,\n        lockY,\n        point0 = mouse(that),\n        point = point0,\n        emit = emitter(that, arguments).beforestart();\n\n    if (type === \"overlay\") {\n      state.selection = selection$$1 = [\n        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n      ];\n    } else {\n      w0 = selection$$1[0][0];\n      n0 = selection$$1[0][1];\n      e0 = selection$$1[1][0];\n      s0 = selection$$1[1][1];\n    }\n\n    w1 = w0;\n    n1 = n0;\n    e1 = e0;\n    s1 = s0;\n\n    var group = select(that)\n        .attr(\"pointer-events\", \"none\");\n\n    var overlay = group.selectAll(\".overlay\")\n        .attr(\"cursor\", cursors[type]);\n\n    if (exports.event.touches) {\n      group\n          .on(\"touchmove.brush\", moved, true)\n          .on(\"touchend.brush touchcancel.brush\", ended, true);\n    } else {\n      var view = select(exports.event.view)\n          .on(\"keydown.brush\", keydowned, true)\n          .on(\"keyup.brush\", keyupped, true)\n          .on(\"mousemove.brush\", moved, true)\n          .on(\"mouseup.brush\", ended, true);\n\n      dragDisable(exports.event.view);\n    }\n\n    nopropagation$1();\n    interrupt(that);\n    redraw.call(that);\n    emit.start();\n\n    function moved() {\n      var point1 = mouse(that);\n      if (shifting && !lockX && !lockY) {\n        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n        else lockX = true;\n      }\n      point = point1;\n      moving = true;\n      noevent$1();\n      move();\n    }\n\n    function move() {\n      var t;\n\n      dx = point[0] - point0[0];\n      dy = point[1] - point0[1];\n\n      switch (mode) {\n        case MODE_SPACE:\n        case MODE_DRAG: {\n          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n          break;\n        }\n        case MODE_HANDLE: {\n          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n          break;\n        }\n        case MODE_CENTER: {\n          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n          break;\n        }\n      }\n\n      if (e1 < w1) {\n        signX *= -1;\n        t = w0, w0 = e0, e0 = t;\n        t = w1, w1 = e1, e1 = t;\n        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n      }\n\n      if (s1 < n1) {\n        signY *= -1;\n        t = n0, n0 = s0, s0 = t;\n        t = n1, n1 = s1, s1 = t;\n        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n      }\n\n      if (state.selection) selection$$1 = state.selection; // May be set by brush.move!\n      if (lockX) w1 = selection$$1[0][0], e1 = selection$$1[1][0];\n      if (lockY) n1 = selection$$1[0][1], s1 = selection$$1[1][1];\n\n      if (selection$$1[0][0] !== w1\n          || selection$$1[0][1] !== n1\n          || selection$$1[1][0] !== e1\n          || selection$$1[1][1] !== s1) {\n        state.selection = [[w1, n1], [e1, s1]];\n        redraw.call(that);\n        emit.brush();\n      }\n    }\n\n    function ended() {\n      nopropagation$1();\n      if (exports.event.touches) {\n        if (exports.event.touches.length) return;\n        if (touchending) clearTimeout(touchending);\n        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n        group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n      } else {\n        yesdrag(exports.event.view, moving);\n        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n      }\n      group.attr(\"pointer-events\", \"all\");\n      overlay.attr(\"cursor\", cursors.overlay);\n      if (state.selection) selection$$1 = state.selection; // May be set by brush.move (on start)!\n      if (empty(selection$$1)) state.selection = null, redraw.call(that);\n      emit.end();\n    }\n\n    function keydowned() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          shifting = signX && signY;\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_HANDLE) {\n            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n            mode = MODE_CENTER;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE; takes priority over ALT\n          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n            mode = MODE_SPACE;\n            overlay.attr(\"cursor\", cursors.selection);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$1();\n    }\n\n    function keyupped() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          if (shifting) {\n            lockX = lockY = shifting = false;\n            move();\n          }\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n            mode = MODE_HANDLE;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE\n          if (mode === MODE_SPACE) {\n            if (exports.event.altKey) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n            } else {\n              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n            }\n            overlay.attr(\"cursor\", cursors[type]);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$1();\n    }\n  }\n\n  function initialize() {\n    var state = this.__brush || {selection: null};\n    state.extent = extent.apply(this, arguments);\n    state.dim = dim;\n    return state;\n  }\n\n  brush.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$4([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n  };\n\n  brush.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$4(!!_), brush) : filter;\n  };\n\n  brush.handleSize = function(_) {\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\n  };\n\n  brush.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? brush : value;\n  };\n\n  return brush;\n}\n\nvar cos = Math.cos;\nvar sin = Math.sin;\nvar pi$1 = Math.PI;\nvar halfPi$1 = pi$1 / 2;\nvar tau$1 = pi$1 * 2;\nvar max$1 = Math.max;\n\nfunction compareValue(compare) {\n  return function(a, b) {\n    return compare(\n      a.source.value + a.target.value,\n      b.source.value + b.target.value\n    );\n  };\n}\n\nvar chord = function() {\n  var padAngle = 0,\n      sortGroups = null,\n      sortSubgroups = null,\n      sortChords = null;\n\n  function chord(matrix) {\n    var n = matrix.length,\n        groupSums = [],\n        groupIndex = sequence(n),\n        subgroupIndex = [],\n        chords = [],\n        groups = chords.groups = new Array(n),\n        subgroups = new Array(n * n),\n        k,\n        x,\n        x0,\n        dx,\n        i,\n        j;\n\n    // Compute the sum.\n    k = 0, i = -1; while (++i < n) {\n      x = 0, j = -1; while (++j < n) {\n        x += matrix[i][j];\n      }\n      groupSums.push(x);\n      subgroupIndex.push(sequence(n));\n      k += x;\n    }\n\n    // Sort groups…\n    if (sortGroups) groupIndex.sort(function(a, b) {\n      return sortGroups(groupSums[a], groupSums[b]);\n    });\n\n    // Sort subgroups…\n    if (sortSubgroups) subgroupIndex.forEach(function(d, i) {\n      d.sort(function(a, b) {\n        return sortSubgroups(matrix[i][a], matrix[i][b]);\n      });\n    });\n\n    // Convert the sum to scaling factor for [0, 2pi].\n    // TODO Allow start and end angle to be specified?\n    // TODO Allow padding to be specified as percentage?\n    k = max$1(0, tau$1 - padAngle * n) / k;\n    dx = k ? padAngle : tau$1 / n;\n\n    // Compute the start and end angle for each group and subgroup.\n    // Note: Opera has a bug reordering object literal properties!\n    x = 0, i = -1; while (++i < n) {\n      x0 = x, j = -1; while (++j < n) {\n        var di = groupIndex[i],\n            dj = subgroupIndex[di][j],\n            v = matrix[di][dj],\n            a0 = x,\n            a1 = x += v * k;\n        subgroups[dj * n + di] = {\n          index: di,\n          subindex: dj,\n          startAngle: a0,\n          endAngle: a1,\n          value: v\n        };\n      }\n      groups[di] = {\n        index: di,\n        startAngle: x0,\n        endAngle: x,\n        value: groupSums[di]\n      };\n      x += dx;\n    }\n\n    // Generate chords for each (non-empty) subgroup-subgroup link.\n    i = -1; while (++i < n) {\n      j = i - 1; while (++j < n) {\n        var source = subgroups[j * n + i],\n            target = subgroups[i * n + j];\n        if (source.value || target.value) {\n          chords.push(source.value < target.value\n              ? {source: target, target: source}\n              : {source: source, target: target});\n        }\n      }\n    }\n\n    return sortChords ? chords.sort(sortChords) : chords;\n  }\n\n  chord.padAngle = function(_) {\n    return arguments.length ? (padAngle = max$1(0, _), chord) : padAngle;\n  };\n\n  chord.sortGroups = function(_) {\n    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n  };\n\n  chord.sortSubgroups = function(_) {\n    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n  };\n\n  chord.sortChords = function(_) {\n    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n  };\n\n  return chord;\n};\n\nvar slice$2 = Array.prototype.slice;\n\nvar constant$5 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar pi$2 = Math.PI;\nvar tau$2 = 2 * pi$2;\nvar epsilon$1 = 1e-6;\nvar tauEpsilon = tau$2 - epsilon$1;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon$1)) {}\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon$1) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi$2 - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon$1) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon$1 || Math.abs(this._y1 - y0) > epsilon$1) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau$2 + tau$2;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon$1) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi$2)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nfunction defaultSource(d) {\n  return d.source;\n}\n\nfunction defaultTarget(d) {\n  return d.target;\n}\n\nfunction defaultRadius(d) {\n  return d.radius;\n}\n\nfunction defaultStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction defaultEndAngle(d) {\n  return d.endAngle;\n}\n\nvar ribbon = function() {\n  var source = defaultSource,\n      target = defaultTarget,\n      radius = defaultRadius,\n      startAngle = defaultStartAngle,\n      endAngle = defaultEndAngle,\n      context = null;\n\n  function ribbon() {\n    var buffer,\n        argv = slice$2.call(arguments),\n        s = source.apply(this, argv),\n        t = target.apply(this, argv),\n        sr = +radius.apply(this, (argv[0] = s, argv)),\n        sa0 = startAngle.apply(this, argv) - halfPi$1,\n        sa1 = endAngle.apply(this, argv) - halfPi$1,\n        sx0 = sr * cos(sa0),\n        sy0 = sr * sin(sa0),\n        tr = +radius.apply(this, (argv[0] = t, argv)),\n        ta0 = startAngle.apply(this, argv) - halfPi$1,\n        ta1 = endAngle.apply(this, argv) - halfPi$1;\n\n    if (!context) context = buffer = path();\n\n    context.moveTo(sx0, sy0);\n    context.arc(0, 0, sr, sa0, sa1);\n    if (sa0 !== ta0 || sa1 !== ta1) { // TODO sr !== tr?\n      context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n      context.arc(0, 0, tr, ta0, ta1);\n    }\n    context.quadraticCurveTo(0, 0, sx0, sy0);\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  ribbon.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : radius;\n  };\n\n  ribbon.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : startAngle;\n  };\n\n  ribbon.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : endAngle;\n  };\n\n  ribbon.source = function(_) {\n    return arguments.length ? (source = _, ribbon) : source;\n  };\n\n  ribbon.target = function(_) {\n    return arguments.length ? (target = _, ribbon) : target;\n  };\n\n  ribbon.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;\n  };\n\n  return ribbon;\n};\n\nvar prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map$1.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map$1(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nvar nest = function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) return rollup != null\n        ? rollup(array) : (sortValues != null\n        ? array.sort(sortValues)\n        : array);\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map$1(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n};\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map$1();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n\nfunction Set() {}\n\nvar proto = map$1.prototype;\n\nSet.prototype = set$2.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set$2(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nvar keys = function(map) {\n  var keys = [];\n  for (var key in map) keys.push(key);\n  return keys;\n};\n\nvar values = function(map) {\n  var values = [];\n  for (var key in map) values.push(map[key]);\n  return values;\n};\n\nvar entries = function(map) {\n  var entries = [];\n  for (var key in map) entries.push({key: key, value: map[key]});\n  return entries;\n};\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nvar dsv = function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      delimiterCode = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns;\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var EOL = {}, // sentinel value for end-of-line\n        EOF = {}, // sentinel value for end-of-file\n        rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // the current line number\n        t, // the current token\n        eol; // is the current token followed by EOL?\n\n    function token() {\n      if (I >= N) return EOF; // special case: end of file\n      if (eol) return eol = false, EOL; // special case: end of line\n\n      // special case: quotes\n      var j = I, c;\n      if (text.charCodeAt(j) === 34) {\n        var i = j;\n        while (i++ < N) {\n          if (text.charCodeAt(i) === 34) {\n            if (text.charCodeAt(i + 1) !== 34) break;\n            ++i;\n          }\n        }\n        I = i + 2;\n        c = text.charCodeAt(i + 1);\n        if (c === 13) {\n          eol = true;\n          if (text.charCodeAt(i + 2) === 10) ++I;\n        } else if (c === 10) {\n          eol = true;\n        }\n        return text.slice(j + 1, i).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // common case: find next delimiter or newline\n      while (I < N) {\n        var k = 1;\n        c = text.charCodeAt(I++);\n        if (c === 10) eol = true; // \\n\n        else if (c === 13) { eol = true; if (text.charCodeAt(I) === 10) ++I, ++k; } // \\r|\\r\\n\n        else if (c !== delimiterCode) continue;\n        return text.slice(j, I - k);\n      }\n\n      // special case: last token before EOF\n      return text.slice(j);\n    }\n\n    while ((t = token()) !== EOF) {\n      var a = [];\n      while (t !== EOL && t !== EOF) {\n        a.push(t);\n        t = token();\n      }\n      if (f && (a = f(a, n++)) == null) continue;\n      rows.push(a);\n    }\n\n    return rows;\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    })).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(text) {\n    return text == null ? \"\"\n        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\\\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : text;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatRows: formatRows\n  };\n};\n\nvar csv = dsv(\",\");\n\nvar csvParse = csv.parse;\nvar csvParseRows = csv.parseRows;\nvar csvFormat = csv.format;\nvar csvFormatRows = csv.formatRows;\n\nvar tsv = dsv(\"\\t\");\n\nvar tsvParse = tsv.parse;\nvar tsvParseRows = tsv.parseRows;\nvar tsvFormat = tsv.format;\nvar tsvFormatRows = tsv.formatRows;\n\nvar center$1 = function(x, y) {\n  var nodes;\n\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force() {\n    var i,\n        n = nodes.length,\n        node,\n        sx = 0,\n        sy = 0;\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], sx += node.x, sy += node.y;\n    }\n\n    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\n      node = nodes[i], node.x -= sx, node.y -= sy;\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n};\n\nvar constant$6 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar jiggle = function() {\n  return (Math.random() - 0.5) * 1e-6;\n};\n\nvar tree_add = function(d) {\n  var x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n};\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nfunction addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, inherit the existing extent.\n  if (x1 < x0) x0 = this._x0, x1 = this._x1;\n  if (y1 < y0) y0 = this._y0, y1 = this._y1;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n\nvar tree_cover = function(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else if (x0 > x || x > x1 || y0 > y || y > y1) {\n    var z = x1 - x0,\n        node = this._root,\n        parent,\n        i;\n\n    switch (i = (y < (y0 + y1) / 2) << 1 | (x < (x0 + x1) / 2)) {\n      case 0: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y1 = y0 + z, x > x1 || y > y1);\n        break;\n      }\n      case 1: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y1 = y0 + z, x0 > x || y > y1);\n        break;\n      }\n      case 2: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y0 = y1 - z, x > x1 || y0 > y);\n        break;\n      }\n      case 3: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y0 = y1 - z, x0 > x || y0 > y);\n        break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  // If the quadtree covers the point already, just return.\n  else return this;\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n};\n\nvar tree_data = function() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n};\n\nvar tree_extent = function(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n};\n\nvar Quad = function(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n};\n\nvar tree_find = function(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n};\n\nvar tree_remove = function(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n};\n\nfunction removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n\nvar tree_root = function() {\n  return this._root;\n};\n\nvar tree_size = function() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n};\n\nvar tree_visit = function(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n};\n\nvar tree_visitAfter = function(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n};\n\nfunction defaultX(d) {\n  return d[0];\n}\n\nvar tree_x = function(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n};\n\nfunction defaultY(d) {\n  return d[1];\n}\n\nvar tree_y = function(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n};\n\nfunction quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n\nfunction x(d) {\n  return d.x + d.vx;\n}\n\nfunction y(d) {\n  return d.y + d.vy;\n}\n\nvar collide = function(radius) {\n  var nodes,\n      radii,\n      strength = 1,\n      iterations = 1;\n\n  if (typeof radius !== \"function\") radius = constant$6(radius == null ? 1 : +radius);\n\n  function force() {\n    var i, n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = quadtree(nodes, x, y).visitAfter(prepare);\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[node.index], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data, rj = quad.r, r = ri + rj;\n      if (data) {\n        if (data.index > node.index) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n          if (l < r * r) {\n            if (x === 0) x = jiggle(), l += x * x;\n            if (y === 0) y = jiggle(), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n        return;\n      }\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    radii = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : radius;\n  };\n\n  return force;\n};\n\nfunction index(d) {\n  return d.index;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"missing: \" + nodeId);\n  return node;\n}\n\nvar link = function(links) {\n  var id = index,\n      strength = defaultStrength,\n      strengths,\n      distance = constant$6(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      iterations = 1;\n\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle();\n        y = target.y + target.vy - source.y - source.vy || jiggle();\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = map$1(nodes, id),\n        link;\n\n    for (i = 0, count = new Array(n); i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.links = function(_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function(_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function(_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant$6(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n};\n\nfunction x$1(d) {\n  return d.x;\n}\n\nfunction y$1(d) {\n  return d.y;\n}\n\nvar initialRadius = 10;\nvar initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nvar simulation = function(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = map$1(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\");\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick() {\n    var i, n = nodes.length, node;\n\n    alpha += (alphaTarget - alpha) * alphaDecay;\n\n    forces.each(function(force) {\n      force(alpha);\n    });\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i];\n      if (node.fx == null) node.x += node.vx *= velocityDecay;\n      else node.x = node.fx, node.vx = 0;\n      if (node.fy == null) node.y += node.vy *= velocityDecay;\n      else node.y = node.fy, node.vy = 0;\n    }\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? ((_ == null ? forces.remove(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n};\n\nvar manyBody = function() {\n  var nodes,\n      node,\n      alpha,\n      strength = constant$6(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i, n = nodes.length, tree = quadtree(nodes, x$1, y$1).visitAfter(accumulate);\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    strengths = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n  }\n\n  function accumulate(quad) {\n    var strength = 0, q, c, x$$1, y$$1, i;\n\n    // For internal nodes, accumulate forces from child quadrants.\n    if (quad.length) {\n      for (x$$1 = y$$1 = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = q.value)) {\n          strength += c, x$$1 += c * q.x, y$$1 += c * q.y;\n        }\n      }\n      quad.x = x$$1 / strength;\n      quad.y = y$$1 / strength;\n    }\n\n    // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n      do strength += strengths[q.data.index];\n      while (q = q.next);\n    }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n\n    var x$$1 = quad.x - node.x,\n        y$$1 = quad.y - node.y,\n        w = x2 - x1,\n        l = x$$1 * x$$1 + y$$1 * y$$1;\n\n    // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n        if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x$$1 * quad.value * alpha / l;\n        node.vy += y$$1 * quad.value * alpha / l;\n      }\n      return true;\n    }\n\n    // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return;\n\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (quad.data !== node || quad.next) {\n      if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n      if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do if (quad.data !== node) {\n      w = strengths[quad.data.index] * alpha / l;\n      node.vx += x$$1 * w;\n      node.vy += y$$1 * w;\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function(_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function(_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function(_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n};\n\nvar x$2 = function(x) {\n  var strength = constant$6(0.1),\n      nodes,\n      strengths,\n      xz;\n\n  if (typeof x !== \"function\") x = constant$6(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : x;\n  };\n\n  return force;\n};\n\nvar y$2 = function(y) {\n  var strength = constant$6(0.1),\n      nodes,\n      strengths,\n      yz;\n\n  if (typeof y !== \"function\") y = constant$6(y == null ? 0 : +y);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : y;\n  };\n\n  return force;\n};\n\n// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nvar formatDecimal = function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n};\n\nvar exponent$1 = function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n};\n\nvar formatGroup = function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n};\n\nvar formatNumerals = function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n};\n\nvar formatDefault = function(x, p) {\n  x = x.toPrecision(p);\n\n  out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (x[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      case \"e\": break out;\n      default: if (i0 > 0) i0 = 0; break;\n    }\n  }\n\n  return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n};\n\nvar prefixExponent;\n\nvar formatPrefixAuto = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n};\n\nvar formatRounded = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n};\n\nvar formatTypes = {\n  \"\": formatDefault,\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n\n// [[fill]align][sign][symbol][0][width][,][.precision][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\nfunction formatSpecifier(specifier) {\n  return new FormatSpecifier(specifier);\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\n  var match,\n      fill = match[1] || \" \",\n      align = match[2] || \">\",\n      sign = match[3] || \"-\",\n      symbol = match[4] || \"\",\n      zero = !!match[5],\n      width = match[6] && +match[6],\n      comma = !!match[7],\n      precision = match[8] && +match[8].slice(1),\n      type = match[9] || \"\";\n\n  // The \"n\" type is an alias for \",g\".\n  if (type === \"n\") comma = true, type = \"g\";\n\n  // Map invalid types to the default format.\n  else if (!formatTypes[type]) type = \"\";\n\n  // If zero fill is specified, padding goes after sign and before digits.\n  if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n  this.fill = fill;\n  this.align = align;\n  this.sign = sign;\n  this.symbol = symbol;\n  this.zero = zero;\n  this.width = width;\n  this.comma = comma;\n  this.precision = precision;\n  this.type = type;\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + this.type;\n};\n\nvar identity$3 = function(x) {\n  return x;\n};\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"\\xB5\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nvar formatLocale = function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity$3,\n      currency = locale.currency,\n      decimal = locale.decimal,\n      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity$3,\n      percent = locale.percent || \"%\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        type = specifier.type;\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = !type || /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? (type ? 6 : 12)\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Perform the initial formatting.\n        var valueNegative = value < 0;\n        value = formatType(Math.abs(value), precision);\n\n        // If a negative value rounds to zero during formatting, treat as positive.\n        if (valueNegative && +value === 0) valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = valueSuffix + (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n};\n\nvar locale$1;\n\n\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nfunction defaultLocale(definition) {\n  locale$1 = formatLocale(definition);\n  exports.format = locale$1.format;\n  exports.formatPrefix = locale$1.formatPrefix;\n  return locale$1;\n}\n\nvar precisionFixed = function(step) {\n  return Math.max(0, -exponent$1(Math.abs(step)));\n};\n\nvar precisionPrefix = function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3 - exponent$1(Math.abs(step)));\n};\n\nvar precisionRound = function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent$1(max) - exponent$1(step)) + 1;\n};\n\n// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\n\nvar adder = function() {\n  return new Adder;\n};\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function(y) {\n    add$1(temp, y, this.t);\n    add$1(this, temp.s, this.s);\n    if (this.s) this.t += temp.t;\n    else this.s = temp.t;\n  },\n  valueOf: function() {\n    return this.s;\n  }\n};\n\nvar temp = new Adder;\n\nfunction add$1(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = (a - av) + (b - bv);\n}\n\nvar epsilon$2 = 1e-6;\nvar epsilon2$1 = 1e-12;\nvar pi$3 = Math.PI;\nvar halfPi$2 = pi$3 / 2;\nvar quarterPi = pi$3 / 4;\nvar tau$3 = pi$3 * 2;\n\nvar degrees$1 = 180 / pi$3;\nvar radians = pi$3 / 180;\n\nvar abs = Math.abs;\nvar atan = Math.atan;\nvar atan2 = Math.atan2;\nvar cos$1 = Math.cos;\nvar ceil = Math.ceil;\nvar exp = Math.exp;\n\nvar log = Math.log;\nvar pow = Math.pow;\nvar sin$1 = Math.sin;\nvar sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nvar sqrt = Math.sqrt;\nvar tan = Math.tan;\n\nfunction acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi$3 : Math.acos(x);\n}\n\nfunction asin(x) {\n  return x > 1 ? halfPi$2 : x < -1 ? -halfPi$2 : Math.asin(x);\n}\n\nfunction haversin(x) {\n  return (x = sin$1(x / 2)) * x;\n}\n\nfunction noop$1() {}\n\nfunction streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nvar geoStream = function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n};\n\nvar areaRingSum = adder();\n\nvar areaSum = adder();\nvar lambda00;\nvar phi00;\nvar lambda0;\nvar cosPhi0;\nvar sinPhi0;\n\nvar areaStream = {\n  point: noop$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: function() {\n    areaRingSum.reset();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau$3 + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop$1;\n  },\n  sphere: function() {\n    areaSum.add(tau$3);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos$1(phi = phi / 2 + quarterPi), sinPhi0 = sin$1(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos$1(phi),\n      sinPhi = sin$1(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos$1(adLambda),\n      v = k * sdLambda * sin$1(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nvar area = function(object) {\n  areaSum.reset();\n  geoStream(object, areaStream);\n  return areaSum * 2;\n};\n\nfunction spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nfunction cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos$1(phi);\n  return [cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi)];\n}\n\nfunction cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nfunction cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nfunction cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nfunction cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nfunction cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n\nvar lambda0$1;\nvar phi0;\nvar lambda1;\nvar phi1;\nvar lambda2;\nvar lambda00$1;\nvar phi00$1;\nvar p0;\nvar deltaSum = adder();\nvar ranges;\nvar range;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum.reset();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon$2) phi1 = 90;\n    else if (deltaSum < -epsilon$2) phi0 = -90;\n    range[0] = lambda0$1, range[1] = lambda1;\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign$$1 = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees$1 * sign$$1,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = inflection[1] * degrees$1;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = -inflection[1] * degrees$1;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0$1) {\n        if (lambda < lambda0$1) lambda0$1 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n  }\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0$1, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00$1 = lambda, phi00$1 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00$1, phi00$1);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon$2) lambda0$1 = -(lambda1 = 180);\n  range[0] = lambda0$1, range[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nvar bounds = function(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0$1 = phi0 = Infinity);\n  ranges = [];\n  geoStream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0$1 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n\n  return lambda0$1 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0$1, phi0], [lambda1, phi1]];\n};\n\nvar W0;\nvar W1;\nvar X0;\nvar Y0;\nvar Z0;\nvar X1;\nvar Y1;\nvar Z1;\nvar X2;\nvar Y2;\nvar Z2;\nvar lambda00$2;\nvar phi00$2;\nvar x0;\nvar y0;\nvar z0; // previous point\n\nvar centroidStream = {\n  sphere: noop$1,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n};\n\n// Arithmetic mean of Cartesian vectors.\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  centroidPointCartesian(cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00$2, phi00$2);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00$2 = lambda, phi00$2 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = sqrt(cx * cx + cy * cy + cz * cz),\n      w = asin(m), // line weight = angle\n      v = m && -w / m; // area weight multiplier\n  X2 += v * cx;\n  Y2 += v * cy;\n  Z2 += v * cz;\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nvar centroid = function(object) {\n  W0 = W1 =\n  X0 = Y0 = Z0 =\n  X1 = Y1 = Z1 =\n  X2 = Y2 = Z2 = 0;\n  geoStream(object, centroidStream);\n\n  var x = X2,\n      y = Y2,\n      z = Z2,\n      m = x * x + y * y + z * z;\n\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n  if (m < epsilon2$1) {\n    x = X1, y = Y1, z = Z1;\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n    if (W1 < epsilon$2) x = X0, y = Y0, z = Z0;\n    m = x * x + y * y + z * z;\n    // If the feature still has an undefined ccentroid, then return.\n    if (m < epsilon2$1) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees$1, asin(z / sqrt(m)) * degrees$1];\n};\n\nvar constant$7 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar compose = function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n};\n\nfunction rotationIdentity(lambda, phi) {\n  return [lambda > pi$3 ? lambda - tau$3 : lambda < -pi$3 ? lambda + tau$3 : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nfunction rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau$3) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi$3 ? lambda - tau$3 : lambda < -pi$3 ? lambda + tau$3 : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos$1(deltaPhi),\n      sinDeltaPhi = sin$1(deltaPhi),\n      cosDeltaGamma = cos$1(deltaGamma),\n      sinDeltaGamma = sin$1(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nvar rotation = function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  };\n\n  return forward;\n};\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nfunction circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos$1(radius),\n      sinRadius = sin$1(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau$3;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau$3;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos$1(t), -sinRadius * sin$1(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau$3 - epsilon$2) % tau$3;\n}\n\nvar circle = function() {\n  var center = constant$7([0, 0]),\n      radius = constant$7(90),\n      precision = constant$7(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees$1, x[1] *= degrees$1;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant$7([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$7(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant$7(+_), circle) : precision;\n  };\n\n  return circle;\n};\n\nvar clipBuffer = function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y) {\n      line.push([x, y]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop$1,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n};\n\nvar clipLine = function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n};\n\nvar pointEqual = function(a, b) {\n  return abs(a[0] - b[0]) < epsilon$2 && abs(a[1] - b[1]) < epsilon$2;\n};\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nvar clipPolygon = function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    // If the first and last points of a segment are coincident, then treat as a\n    // closed ring. TODO if all rings are closed, then the winding order of the\n    // exterior ring should be checked.\n    if (pointEqual(p0, p1)) {\n      stream.lineStart();\n      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n      stream.lineEnd();\n      return;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link$1(subject);\n  link$1(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n};\n\nfunction link$1(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n\nvar clipMax = 1e9;\nvar clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nfunction clipExtent(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon$2 ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon$2 ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon$2 ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipPolygon(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n\nvar extent$1 = function() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 960,\n      y1 = 500,\n      cache,\n      cacheStream,\n      clip;\n\n  return clip = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = clipExtent(x0, y0, x1, y1)(cacheStream = stream);\n    },\n    extent: function(_) {\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n    }\n  };\n};\n\nvar sum$1 = adder();\n\nvar polygonContains = function(polygon, point) {\n  var lambda = point[0],\n      phi = point[1],\n      normal = [sin$1(lambda), -cos$1(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  sum$1.reset();\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = point0[0],\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin$1(phi0),\n        cosPhi0 = cos$1(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = point1[0],\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin$1(phi1),\n          cosPhi1 = cos$1(phi1),\n          delta = lambda1 - lambda0,\n          sign$$1 = delta >= 0 ? 1 : -1,\n          absDelta = sign$$1 * delta,\n          antimeridian = absDelta > pi$3,\n          k = sinPhi0 * sinPhi1;\n\n      sum$1.add(atan2(k * sign$$1 * sin$1(absDelta), cosPhi0 * cosPhi1 + k * cos$1(absDelta)));\n      angle += antimeridian ? delta + sign$$1 * tau$3 : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon$2 || angle < epsilon$2 && sum$1 < -epsilon$2) ^ (winding & 1);\n};\n\nvar lengthSum = adder();\nvar lambda0$2;\nvar sinPhi0$1;\nvar cosPhi0$1;\n\nvar lengthStream = {\n  sphere: noop$1,\n  point: noop$1,\n  lineStart: lengthLineStart,\n  lineEnd: noop$1,\n  polygonStart: noop$1,\n  polygonEnd: noop$1\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop$1;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0$2 = lambda, sinPhi0$1 = sin$1(phi), cosPhi0$1 = cos$1(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin$1(phi),\n      cosPhi = cos$1(phi),\n      delta = abs(lambda - lambda0$2),\n      cosDelta = cos$1(delta),\n      sinDelta = sin$1(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0$1 * sinPhi - sinPhi0$1 * cosPhi * cosDelta,\n      z = sinPhi0$1 * sinPhi + cosPhi0$1 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0$2 = lambda, sinPhi0$1 = sinPhi, cosPhi0$1 = cosPhi;\n}\n\nvar length$1 = function(object) {\n  lengthSum.reset();\n  geoStream(object, lengthStream);\n  return +lengthSum;\n};\n\nvar coordinates = [null, null];\nvar object$1 = {type: \"LineString\", coordinates: coordinates};\n\nvar distance = function(a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length$1(object$1);\n};\n\nvar containsObjectType = {\n  Feature: function(object, point) {\n    return containsGeometry(object.geometry, point);\n  },\n  FeatureCollection: function(object, point) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;\n    return false;\n  }\n};\n\nvar containsGeometryType = {\n  Sphere: function() {\n    return true;\n  },\n  Point: function(object, point) {\n    return containsPoint(object.coordinates, point);\n  },\n  MultiPoint: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPoint(coordinates[i], point)) return true;\n    return false;\n  },\n  LineString: function(object, point) {\n    return containsLine(object.coordinates, point);\n  },\n  MultiLineString: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsLine(coordinates[i], point)) return true;\n    return false;\n  },\n  Polygon: function(object, point) {\n    return containsPolygon(object.coordinates, point);\n  },\n  MultiPolygon: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;\n    return false;\n  },\n  GeometryCollection: function(object, point) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) if (containsGeometry(geometries[i], point)) return true;\n    return false;\n  }\n};\n\nfunction containsGeometry(geometry, point) {\n  return geometry && containsGeometryType.hasOwnProperty(geometry.type)\n      ? containsGeometryType[geometry.type](geometry, point)\n      : false;\n}\n\nfunction containsPoint(coordinates, point) {\n  return distance(coordinates, point) === 0;\n}\n\nfunction containsLine(coordinates, point) {\n  var ab = distance(coordinates[0], coordinates[1]),\n      ao = distance(coordinates[0], point),\n      ob = distance(point, coordinates[1]);\n  return ao + ob <= ab + epsilon$2;\n}\n\nfunction containsPolygon(coordinates, point) {\n  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\n}\n\nfunction ringRadians(ring) {\n  return ring = ring.map(pointRadians), ring.pop(), ring;\n}\n\nfunction pointRadians(point) {\n  return [point[0] * radians, point[1] * radians];\n}\n\nvar contains = function(object, point) {\n  return (object && containsObjectType.hasOwnProperty(object.type)\n      ? containsObjectType[object.type]\n      : containsGeometry)(object, point);\n};\n\nfunction graticuleX(y0, y1, dy) {\n  var y = sequence(y0, y1 - epsilon$2, dy).concat(y1);\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = sequence(x0, x1 - epsilon$2, dx).concat(x1);\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\n}\n\nfunction graticule() {\n  var x1, x0, X1, X0,\n      y1, y0, Y1, Y0,\n      dx = 10, dy = dx, DX = 90, DY = 360,\n      x, y, X, Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {type: \"MultiLineString\", coordinates: lines()};\n  }\n\n  function lines() {\n    return sequence(ceil(X0 / DX) * DX, X1, DX).map(X)\n        .concat(sequence(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n        .concat(sequence(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon$2; }).map(x))\n        .concat(sequence(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon$2; }).map(y));\n  }\n\n  graticule.lines = function() {\n    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n  };\n\n  graticule.outline = function() {\n    return {\n      type: \"Polygon\",\n      coordinates: [\n        X(X0).concat(\n        Y(Y1).slice(1),\n        X(X1).reverse().slice(1),\n        Y(Y0).reverse().slice(1))\n      ]\n    };\n  };\n\n  graticule.extent = function(_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function(_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function(_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function(_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function(_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function(_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function(_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule\n      .extentMajor([[-180, -90 + epsilon$2], [180, 90 - epsilon$2]])\n      .extentMinor([[-180, -80 - epsilon$2], [180, 80 + epsilon$2]]);\n}\n\nfunction graticule10() {\n  return graticule()();\n}\n\nvar interpolate$1 = function(a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos$1(y0),\n      sy0 = sin$1(y0),\n      cy1 = cos$1(y1),\n      sy1 = sin$1(y1),\n      kx0 = cy0 * cos$1(x0),\n      ky0 = cy0 * sin$1(x0),\n      kx1 = cy1 * cos$1(x1),\n      ky1 = cy1 * sin$1(x1),\n      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin$1(d);\n\n  var interpolate = d ? function(t) {\n    var B = sin$1(t *= d) / k,\n        A = sin$1(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [\n      atan2(y, x) * degrees$1,\n      atan2(z, sqrt(x * x + y * y)) * degrees$1\n    ];\n  } : function() {\n    return [x0 * degrees$1, y0 * degrees$1];\n  };\n\n  interpolate.distance = d;\n\n  return interpolate;\n};\n\nvar identity$4 = function(x) {\n  return x;\n};\n\nvar areaSum$1 = adder();\nvar areaRingSum$1 = adder();\nvar x00;\nvar y00;\nvar x0$1;\nvar y0$1;\n\nvar areaStream$1 = {\n  point: noop$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: function() {\n    areaStream$1.lineStart = areaRingStart$1;\n    areaStream$1.lineEnd = areaRingEnd$1;\n  },\n  polygonEnd: function() {\n    areaStream$1.lineStart = areaStream$1.lineEnd = areaStream$1.point = noop$1;\n    areaSum$1.add(abs(areaRingSum$1));\n    areaRingSum$1.reset();\n  },\n  result: function() {\n    var area = areaSum$1 / 2;\n    areaSum$1.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart$1() {\n  areaStream$1.point = areaPointFirst$1;\n}\n\nfunction areaPointFirst$1(x, y) {\n  areaStream$1.point = areaPoint$1;\n  x00 = x0$1 = x, y00 = y0$1 = y;\n}\n\nfunction areaPoint$1(x, y) {\n  areaRingSum$1.add(y0$1 * x - x0$1 * y);\n  x0$1 = x, y0$1 = y;\n}\n\nfunction areaRingEnd$1() {\n  areaPoint$1(x00, y00);\n}\n\nvar x0$2 = Infinity;\nvar y0$2 = x0$2;\nvar x1 = -x0$2;\nvar y1 = x1;\n\nvar boundsStream$1 = {\n  point: boundsPoint$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: noop$1,\n  polygonEnd: noop$1,\n  result: function() {\n    var bounds = [[x0$2, y0$2], [x1, y1]];\n    x1 = y1 = -(y0$2 = x0$2 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint$1(x, y) {\n  if (x < x0$2) x0$2 = x;\n  if (x > x1) x1 = x;\n  if (y < y0$2) y0$2 = y;\n  if (y > y1) y1 = y;\n}\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0$1 = 0;\nvar Y0$1 = 0;\nvar Z0$1 = 0;\nvar X1$1 = 0;\nvar Y1$1 = 0;\nvar Z1$1 = 0;\nvar X2$1 = 0;\nvar Y2$1 = 0;\nvar Z2$1 = 0;\nvar x00$1;\nvar y00$1;\nvar x0$3;\nvar y0$3;\n\nvar centroidStream$1 = {\n  point: centroidPoint$1,\n  lineStart: centroidLineStart$1,\n  lineEnd: centroidLineEnd$1,\n  polygonStart: function() {\n    centroidStream$1.lineStart = centroidRingStart$1;\n    centroidStream$1.lineEnd = centroidRingEnd$1;\n  },\n  polygonEnd: function() {\n    centroidStream$1.point = centroidPoint$1;\n    centroidStream$1.lineStart = centroidLineStart$1;\n    centroidStream$1.lineEnd = centroidLineEnd$1;\n  },\n  result: function() {\n    var centroid = Z2$1 ? [X2$1 / Z2$1, Y2$1 / Z2$1]\n        : Z1$1 ? [X1$1 / Z1$1, Y1$1 / Z1$1]\n        : Z0$1 ? [X0$1 / Z0$1, Y0$1 / Z0$1]\n        : [NaN, NaN];\n    X0$1 = Y0$1 = Z0$1 =\n    X1$1 = Y1$1 = Z1$1 =\n    X2$1 = Y2$1 = Z2$1 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint$1(x, y) {\n  X0$1 += x;\n  Y0$1 += y;\n  ++Z0$1;\n}\n\nfunction centroidLineStart$1() {\n  centroidStream$1.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream$1.point = centroidPointLine;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0$3, dy = y - y0$3, z = sqrt(dx * dx + dy * dy);\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidLineEnd$1() {\n  centroidStream$1.point = centroidPoint$1;\n}\n\nfunction centroidRingStart$1() {\n  centroidStream$1.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd$1() {\n  centroidPointRing(x00$1, y00$1);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream$1.point = centroidPointRing;\n  centroidPoint$1(x00$1 = x0$3 = x, y00$1 = y0$3 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0$3,\n      dy = y - y0$3,\n      z = sqrt(dx * dx + dy * dy);\n\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n\n  z = y0$3 * x - x0$3 * y;\n  X2$1 += z * (x0$3 + x);\n  Y2$1 += z * (y0$3 + y);\n  Z2$1 += z * 3;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau$3);\n        break;\n      }\n    }\n  },\n  result: noop$1\n};\n\nvar lengthSum$1 = adder();\nvar lengthRing;\nvar x00$2;\nvar y00$2;\nvar x0$4;\nvar y0$4;\n\nvar lengthStream$1 = {\n  point: noop$1,\n  lineStart: function() {\n    lengthStream$1.point = lengthPointFirst$1;\n  },\n  lineEnd: function() {\n    if (lengthRing) lengthPoint$1(x00$2, y00$2);\n    lengthStream$1.point = noop$1;\n  },\n  polygonStart: function() {\n    lengthRing = true;\n  },\n  polygonEnd: function() {\n    lengthRing = null;\n  },\n  result: function() {\n    var length = +lengthSum$1;\n    lengthSum$1.reset();\n    return length;\n  }\n};\n\nfunction lengthPointFirst$1(x, y) {\n  lengthStream$1.point = lengthPoint$1;\n  x00$2 = x0$4 = x, y00$2 = y0$4 = y;\n}\n\nfunction lengthPoint$1(x, y) {\n  x0$4 -= x, y0$4 -= y;\n  lengthSum$1.add(sqrt(x0$4 * x0$4 + y0$4 * y0$4));\n  x0$4 = x, y0$4 = y;\n}\n\nfunction PathString() {\n  this._string = [];\n}\n\nPathString.prototype = {\n  _circle: circle$1(4.5),\n  pointRadius: function(_) {\n    return this._circle = circle$1(_), this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._string.push(\"M\", x, \",\", y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._string.push(\"L\", x, \",\", y);\n        break;\n      }\n      default: {\n        this._string.push(\"M\", x, \",\", y, this._circle);\n        break;\n      }\n    }\n  },\n  result: function() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n      this._string = [];\n      return result;\n    }\n  }\n};\n\nfunction circle$1(radius) {\n  return \"m0,\" + radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n      + \"z\";\n}\n\nvar index$1 = function(projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      geoStream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    geoStream(object, projectionStream(areaStream$1));\n    return areaStream$1.result();\n  };\n\n  path.measure = function(object) {\n    geoStream(object, projectionStream(lengthStream$1));\n    return lengthStream$1.result();\n  };\n\n  path.bounds = function(object) {\n    geoStream(object, projectionStream(boundsStream$1));\n    return boundsStream$1.result();\n  };\n\n  path.centroid = function(object) {\n    geoStream(object, projectionStream(centroidStream$1));\n    return centroidStream$1.result();\n  };\n\n  path.projection = function(_) {\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity$4) : (projection = _).stream, path) : projection;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n};\n\nvar clip = function(pointVisible, clipLine, interpolate, start) {\n  return function(rotate, sink) {\n    var line = clipLine(sink),\n        rotatedStart = rotate.invert(start[0], start[1]),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, rotatedStart);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipPolygon(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      var point = rotate(lambda, phi);\n      if (pointVisible(lambda = point[0], phi = point[1])) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      var point = rotate(lambda, phi);\n      line.point(point[0], point[1]);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      var point = rotate(lambda, phi);\n      ringSink.point(point[0], point[1]);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n};\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi$2 - epsilon$2 : halfPi$2 - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi$2 - epsilon$2 : halfPi$2 - b[1]);\n}\n\nvar clipAntimeridian = clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi$3, -halfPi$2]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi$3 : -pi$3,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi$3) < epsilon$2) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi$2 : -halfPi$2);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi$3) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon$2) lambda0 -= sign0 * epsilon$2; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon$2) lambda1 -= sign1 * epsilon$2;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin$1(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon$2\n      ? atan((sin$1(phi0) * (cosPhi1 = cos$1(phi1)) * sin$1(lambda1)\n          - sin$1(phi1) * (cosPhi0 = cos$1(phi0)) * sin$1(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi$2;\n    stream.point(-pi$3, phi);\n    stream.point(0, phi);\n    stream.point(pi$3, phi);\n    stream.point(pi$3, 0);\n    stream.point(pi$3, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi$3, -phi);\n    stream.point(-pi$3, 0);\n    stream.point(-pi$3, phi);\n  } else if (abs(from[0] - to[0]) > epsilon$2) {\n    var lambda = from[0] < to[0] ? pi$3 : -pi$3;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n\nvar clipCircle = function(radius, delta) {\n  var cr = cos$1(radius),\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon$2; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos$1(lambda) * cos$1(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi$3 : -pi$3), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        // Handle degeneracies.\n        // TODO ignore if not clipping polygons.\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (pointEqual(point0, point2) || pointEqual(point1, point2)) {\n            point1[0] += epsilon$2;\n            point1[1] += epsilon$2;\n            v = visible(point1[0], point1[1]);\n          }\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1]);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi$3) < epsilon$2,\n        meridian = polar || delta < epsilon$2;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon$2 ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi$3 ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi$3 - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi$3, radius - pi$3]);\n};\n\nvar transform = function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n};\n\nfunction transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n\nfunction fitExtent(projection, extent, object) {\n  var w = extent[1][0] - extent[0][0],\n      h = extent[1][1] - extent[0][1],\n      clip = projection.clipExtent && projection.clipExtent();\n\n  projection\n      .scale(150)\n      .translate([0, 0]);\n\n  if (clip != null) projection.clipExtent(null);\n\n  geoStream(object, projection.stream(boundsStream$1));\n\n  var b = boundsStream$1.result(),\n      k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n      x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n      y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n\n  if (clip != null) projection.clipExtent(clip);\n\n  return projection\n      .scale(k * 150)\n      .translate([x, y]);\n}\n\nfunction fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nvar maxDepth = 16;\nvar cosMinDistance = cos$1(30 * radians); // cos(minimum angular distance)\n\nvar resample = function(project, delta2) {\n  return +delta2 ? resample$1(project, delta2) : resampleNone(project);\n};\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample$1(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon$2 || abs(lambda0 - lambda1) < epsilon$2 ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nfunction projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      dx, dy, lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, projectRotate, // rotate\n      theta = null, preclip = clipAntimeridian, // clip angle\n      x0 = null, y0, x1, y1, postclip = identity$4, // clip extent\n      delta2 = 0.5, projectResample = resample(projectTransform, delta2), // precision\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    point = projectRotate(point[0] * radians, point[1] * radians);\n    return [point[0] * k + dx, dy - point[1] * k];\n  }\n\n  function invert(point) {\n    point = projectRotate.invert((point[0] - dx) / k, (dy - point[1]) / k);\n    return point && [point[0] * degrees$1, point[1] * degrees$1];\n  }\n\n  function projectTransform(x, y) {\n    return x = project(x, y), [x[0] * k + dx, dy - x[1] * k];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(preclip(rotate, projectResample(postclip(cacheStream = stream))));\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians, 6 * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees$1;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$4) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees$1, phi * degrees$1];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees$1, deltaPhi * degrees$1, deltaGamma * degrees$1];\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  function recenter() {\n    projectRotate = compose(rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma), project);\n    var center = project(lambda, phi);\n    dx = x - center[0] * k;\n    dy = y + center[1] * k;\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n\nfunction conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = pi$3 / 3,\n      m = projectionMutator(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function(_) {\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees$1, phi1 * degrees$1];\n  };\n\n  return p;\n}\n\nfunction cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos$1(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin$1(phi) / cosPhi0];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, asin(y * cosPhi0)];\n  };\n\n  return forward;\n}\n\nfunction conicEqualAreaRaw(y0, y1) {\n  var sy0 = sin$1(y0), n = (sy0 + sin$1(y1)) / 2;\n\n  // Are the parallels symmetrical around the Equator?\n  if (abs(n) < epsilon$2) return cylindricalEqualAreaRaw(y0);\n\n  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;\n\n  function project(x, y) {\n    var r = sqrt(c - 2 * n * sin$1(y)) / n;\n    return [r * sin$1(x *= n), r0 - r * cos$1(x)];\n  }\n\n  project.invert = function(x, y) {\n    var r0y = r0 - y;\n    return [atan2(x, abs(r0y)) / n * sign(r0y), asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n\n  return project;\n}\n\nvar conicEqualArea = function() {\n  return conicProjection(conicEqualAreaRaw)\n      .scale(155.424)\n      .center([0, 33.6442]);\n};\n\nvar albers = function() {\n  return conicEqualArea()\n      .parallels([29.5, 45.5])\n      .scale(1070)\n      .translate([480, 250])\n      .rotate([96, 0])\n      .center([-0.6, 38.7]);\n};\n\n// The projections must have mutually exclusive clip regions on the sphere,\n// as this will avoid emitting interleaving lines and polygons.\nfunction multiplex(streams) {\n  var n = streams.length;\n  return {\n    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n  };\n}\n\n// A composite projection for the United States, configured by default for\n// 960×500. The projection also works quite well at 960×600 if you change the\n// scale to 1285 and adjust the translate accordingly. The set of standard\n// parallels for each region comes from USGS, which is published here:\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\nvar albersUsa = function() {\n  var cache,\n      cacheStream,\n      lower48 = albers(), lower48Point,\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\n  function albersUsa(coordinates) {\n    var x = coordinates[0], y = coordinates[1];\n    return point = null,\n        (lower48Point.point(x, y), point)\n        || (alaskaPoint.point(x, y), point)\n        || (hawaiiPoint.point(x, y), point);\n  }\n\n  albersUsa.invert = function(coordinates) {\n    var k = lower48.scale(),\n        t = lower48.translate(),\n        x = (coordinates[0] - t[0]) / k,\n        y = (coordinates[1] - t[1]) / k;\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n        : lower48).invert(coordinates);\n  };\n\n  albersUsa.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n  };\n\n  albersUsa.precision = function(_) {\n    if (!arguments.length) return lower48.precision();\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n    return reset();\n  };\n\n  albersUsa.scale = function(_) {\n    if (!arguments.length) return lower48.scale();\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n    return albersUsa.translate(lower48.translate());\n  };\n\n  albersUsa.translate = function(_) {\n    if (!arguments.length) return lower48.translate();\n    var k = lower48.scale(), x = +_[0], y = +_[1];\n\n    lower48Point = lower48\n        .translate(_)\n        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n        .stream(pointStream);\n\n    alaskaPoint = alaska\n        .translate([x - 0.307 * k, y + 0.201 * k])\n        .clipExtent([[x - 0.425 * k + epsilon$2, y + 0.120 * k + epsilon$2], [x - 0.214 * k - epsilon$2, y + 0.234 * k - epsilon$2]])\n        .stream(pointStream);\n\n    hawaiiPoint = hawaii\n        .translate([x - 0.205 * k, y + 0.212 * k])\n        .clipExtent([[x - 0.214 * k + epsilon$2, y + 0.166 * k + epsilon$2], [x - 0.115 * k - epsilon$2, y + 0.234 * k - epsilon$2]])\n        .stream(pointStream);\n\n    return reset();\n  };\n\n  albersUsa.fitExtent = function(extent, object) {\n    return fitExtent(albersUsa, extent, object);\n  };\n\n  albersUsa.fitSize = function(size, object) {\n    return fitSize(albersUsa, size, object);\n  };\n\n  function reset() {\n    cache = cacheStream = null;\n    return albersUsa;\n  }\n\n  return albersUsa.scale(1070);\n};\n\nfunction azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos$1(x),\n        cy = cos$1(y),\n        k = scale(cx * cy);\n    return [\n      k * cy * sin$1(x),\n      k * sin$1(y)\n    ];\n  }\n}\n\nfunction azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin$1(c),\n        cc = cos$1(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin(z && y * sc / z)\n    ];\n  }\n}\n\nvar azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n  return 2 * asin(z / 2);\n});\n\nvar azimuthalEqualArea = function() {\n  return projection(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n};\n\nvar azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n  return (c = acos(c)) && c / sin$1(c);\n});\n\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n  return z;\n});\n\nvar azimuthalEquidistant = function() {\n  return projection(azimuthalEquidistantRaw)\n      .scale(79.4188)\n      .clipAngle(180 - 1e-3);\n};\n\nfunction mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi$2 + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi$2];\n};\n\nvar mercator = function() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau$3);\n};\n\nfunction mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null, y0, x1, y1; // clip extent\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function(_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function(_) {\n    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi$3 * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null\n        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\n        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\n        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}\n\nfunction tany(y) {\n  return tan((halfPi$2 + y) / 2);\n}\n\nfunction conicConformalRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : log(cy0 / cos$1(y1)) / log(tany(y1) / tany(y0)),\n      f = cy0 * pow(tany(y0), n) / n;\n\n  if (!n) return mercatorRaw;\n\n  function project(x, y) {\n    if (f > 0) { if (y < -halfPi$2 + epsilon$2) y = -halfPi$2 + epsilon$2; }\n    else { if (y > halfPi$2 - epsilon$2) y = halfPi$2 - epsilon$2; }\n    var r = f / pow(tany(y), n);\n    return [r * sin$1(n * x), f - r * cos$1(n * x)];\n  }\n\n  project.invert = function(x, y) {\n    var fy = f - y, r = sign(n) * sqrt(x * x + fy * fy);\n    return [atan2(x, abs(fy)) / n * sign(fy), 2 * atan(pow(f / r, 1 / n)) - halfPi$2];\n  };\n\n  return project;\n}\n\nvar conicConformal = function() {\n  return conicProjection(conicConformalRaw)\n      .scale(109.5)\n      .parallels([30, 30]);\n};\n\nfunction equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nvar equirectangular = function() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n};\n\nfunction conicEquidistantRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : (cy0 - cos$1(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n\n  if (abs(n) < epsilon$2) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y, nx = n * x;\n    return [gy * sin$1(nx), g - gy * cos$1(nx)];\n  }\n\n  project.invert = function(x, y) {\n    var gy = g - y;\n    return [atan2(x, abs(gy)) / n * sign(gy), g - sign(n) * sqrt(x * x + gy * gy)];\n  };\n\n  return project;\n}\n\nvar conicEquidistant = function() {\n  return conicProjection(conicEquidistantRaw)\n      .scale(131.154)\n      .center([0, 13.9389]);\n};\n\nfunction gnomonicRaw(x, y) {\n  var cy = cos$1(y), k = cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\ngnomonicRaw.invert = azimuthalInvert(atan);\n\nvar gnomonic = function() {\n  return projection(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n};\n\nfunction scaleTranslate(kx, ky, tx, ty) {\n  return kx === 1 && ky === 1 && tx === 0 && ty === 0 ? identity$4 : transformer({\n    point: function(x, y) {\n      this.stream.point(x * kx + tx, y * ky + ty);\n    }\n  });\n}\n\nvar identity$5 = function() {\n  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, transform = identity$4, // scale, translate and reflect\n      x0 = null, y0, x1, y1, clip = identity$4, // clip extent\n      cache,\n      cacheStream,\n      projection;\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return projection = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = transform(clip(cacheStream = stream));\n    },\n    clipExtent: function(_) {\n      return arguments.length ? (clip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$4) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n    },\n    scale: function(_) {\n      return arguments.length ? (transform = scaleTranslate((k = +_) * sx, k * sy, tx, ty), reset()) : k;\n    },\n    translate: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * sy, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];\n    },\n    reflectX: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * (sx = _ ? -1 : 1), k * sy, tx, ty), reset()) : sx < 0;\n    },\n    reflectY: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * (sy = _ ? -1 : 1), tx, ty), reset()) : sy < 0;\n    },\n    fitExtent: function(extent, object) {\n      return fitExtent(projection, extent, object);\n    },\n    fitSize: function(size, object) {\n      return fitSize(projection, size, object);\n    }\n  };\n};\n\nfunction orthographicRaw(x, y) {\n  return [cos$1(y) * sin$1(x), sin$1(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin);\n\nvar orthographic = function() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon$2);\n};\n\nfunction stereographicRaw(x, y) {\n  var cy = cos$1(y), k = 1 + cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\nstereographicRaw.invert = azimuthalInvert(function(z) {\n  return 2 * atan(z);\n});\n\nvar stereographic = function() {\n  return projection(stereographicRaw)\n      .scale(250)\n      .clipAngle(142);\n};\n\nfunction transverseMercatorRaw(lambda, phi) {\n  return [log(tan((halfPi$2 + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function(x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi$2];\n};\n\nvar transverseMercator = function() {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function(_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function(_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90])\n      .scale(159.155);\n};\n\nfunction defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\nfunction meanX(children) {\n  return children.reduce(meanXReduce, 0) / children.length;\n}\n\nfunction meanXReduce(x, c) {\n  return x + c.x;\n}\n\nfunction maxY(children) {\n  return 1 + children.reduce(maxYReduce, 0);\n}\n\nfunction maxYReduce(y, c) {\n  return Math.max(y, c.y);\n}\n\nfunction leafLeft(node) {\n  var children;\n  while (children = node.children) node = children[0];\n  return node;\n}\n\nfunction leafRight(node) {\n  var children;\n  while (children = node.children) node = children[children.length - 1];\n  return node;\n}\n\nvar cluster = function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = false;\n\n  function cluster(root) {\n    var previousNode,\n        x = 0;\n\n    // First walk, computing the initial x & y values.\n    root.eachAfter(function(node) {\n      var children = node.children;\n      if (children) {\n        node.x = meanX(children);\n        node.y = maxY(children);\n      } else {\n        node.x = previousNode ? x += separation(node, previousNode) : 0;\n        node.y = 0;\n        previousNode = node;\n      }\n    });\n\n    var left = leafLeft(root),\n        right = leafRight(root),\n        x0 = left.x - separation(left, right) / 2,\n        x1 = right.x + separation(right, left) / 2;\n\n    // Second walk, normalizing x & y to the desired size.\n    return root.eachAfter(nodeSize ? function(node) {\n      node.x = (node.x - root.x) * dx;\n      node.y = (root.y - node.y) * dy;\n    } : function(node) {\n      node.x = (node.x - x0) / (x1 - x0) * dx;\n      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n    });\n  }\n\n  cluster.separation = function(x) {\n    return arguments.length ? (separation = x, cluster) : separation;\n  };\n\n  cluster.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n  };\n\n  cluster.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return cluster;\n};\n\nfunction count(node) {\n  var sum = 0,\n      children = node.children,\n      i = children && children.length;\n  if (!i) sum = 1;\n  else while (--i >= 0) sum += children[i].value;\n  node.value = sum;\n}\n\nvar node_count = function() {\n  return this.eachAfter(count);\n};\n\nvar node_each = function(callback) {\n  var node = this, current, next = [node], children, i, n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      callback(node), children = node.children;\n      if (children) for (i = 0, n = children.length; i < n; ++i) {\n        next.push(children[i]);\n      }\n    }\n  } while (next.length);\n  return this;\n};\n\nvar node_eachBefore = function(callback) {\n  var node = this, nodes = [node], children, i;\n  while (node = nodes.pop()) {\n    callback(node), children = node.children;\n    if (children) for (i = children.length - 1; i >= 0; --i) {\n      nodes.push(children[i]);\n    }\n  }\n  return this;\n};\n\nvar node_eachAfter = function(callback) {\n  var node = this, nodes = [node], next = [], children, i, n;\n  while (node = nodes.pop()) {\n    next.push(node), children = node.children;\n    if (children) for (i = 0, n = children.length; i < n; ++i) {\n      nodes.push(children[i]);\n    }\n  }\n  while (node = next.pop()) {\n    callback(node);\n  }\n  return this;\n};\n\nvar node_sum = function(value) {\n  return this.eachAfter(function(node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n    while (--i >= 0) sum += children[i].value;\n    node.value = sum;\n  });\n};\n\nvar node_sort = function(compare) {\n  return this.eachBefore(function(node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n};\n\nvar node_path = function(end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n  var k = nodes.length;\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n  return nodes;\n};\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}\n\nvar node_ancestors = function() {\n  var node = this, nodes = [node];\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n  return nodes;\n};\n\nvar node_descendants = function() {\n  var nodes = [];\n  this.each(function(node) {\n    nodes.push(node);\n  });\n  return nodes;\n};\n\nvar node_leaves = function() {\n  var leaves = [];\n  this.eachBefore(function(node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n};\n\nvar node_links = function() {\n  var root = this, links = [];\n  root.each(function(node) {\n    if (node !== root) { // Don’t include the root’s parent, if any.\n      links.push({source: node.parent, target: node});\n    }\n  });\n  return links;\n};\n\nfunction hierarchy(data, children) {\n  var root = new Node(data),\n      valued = +data.value && (root.value = data.value),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  if (children == null) children = defaultChildren;\n\n  while (node = nodes.pop()) {\n    if (valued) node.value = +node.data.value;\n    if ((childs = children(node.data)) && (n = childs.length)) {\n      node.children = new Array(n);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction defaultChildren(d) {\n  return d.children;\n}\n\nfunction copyData(node) {\n  node.data = node.data.data;\n}\n\nfunction computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nfunction Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  count: node_count,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy\n};\n\nfunction Node$2(value) {\n  this._ = value;\n  this.next = null;\n}\n\nvar shuffle$1 = function(array) {\n  var i,\n      n = (array = array.slice()).length,\n      head = null,\n      node = head;\n\n  while (n) {\n    var next = new Node$2(array[n - 1]);\n    if (node) node = node.next = next;\n    else node = head = next;\n    array[i] = array[--n];\n  }\n\n  return {\n    head: head,\n    tail: node\n  };\n};\n\nvar enclose = function(circles) {\n  return encloseN(shuffle$1(circles), []);\n};\n\nfunction encloses(a, b) {\n  var dx = b.x - a.x,\n      dy = b.y - a.y,\n      dr = a.r - b.r;\n  return dr * dr + 1e-6 > dx * dx + dy * dy;\n}\n\n// Returns the smallest circle that contains circles L and intersects circles B.\nfunction encloseN(L, B) {\n  var circle,\n      l0 = null,\n      l1 = L.head,\n      l2,\n      p1;\n\n  switch (B.length) {\n    case 1: circle = enclose1(B[0]); break;\n    case 2: circle = enclose2(B[0], B[1]); break;\n    case 3: circle = enclose3(B[0], B[1], B[2]); break;\n  }\n\n  while (l1) {\n    p1 = l1._, l2 = l1.next;\n    if (!circle || !encloses(circle, p1)) {\n\n      // Temporarily truncate L before l1.\n      if (l0) L.tail = l0, l0.next = null;\n      else L.head = L.tail = null;\n\n      B.push(p1);\n      circle = encloseN(L, B); // Note: reorders L!\n      B.pop();\n\n      // Move l1 to the front of L and reconnect the truncated list L.\n      if (L.head) l1.next = L.head, L.head = l1;\n      else l1.next = null, L.head = L.tail = l1;\n      l0 = L.tail, l0.next = l2;\n\n    } else {\n      l0 = l1;\n    }\n    l1 = l2;\n  }\n\n  L.tail = l0;\n  return circle;\n}\n\nfunction enclose1(a) {\n  return {\n    x: a.x,\n    y: a.y,\n    r: a.r\n  };\n}\n\nfunction enclose2(a, b) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n      l = Math.sqrt(x21 * x21 + y21 * y21);\n  return {\n    x: (x1 + x2 + x21 / l * r21) / 2,\n    y: (y1 + y2 + y21 / l * r21) / 2,\n    r: (l + r1 + r2) / 2\n  };\n}\n\nfunction enclose3(a, b, c) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x3 = c.x, y3 = c.y, r3 = c.r,\n      a2 = 2 * (x1 - x2),\n      b2 = 2 * (y1 - y2),\n      c2 = 2 * (r2 - r1),\n      d2 = x1 * x1 + y1 * y1 - r1 * r1 - x2 * x2 - y2 * y2 + r2 * r2,\n      a3 = 2 * (x1 - x3),\n      b3 = 2 * (y1 - y3),\n      c3 = 2 * (r3 - r1),\n      d3 = x1 * x1 + y1 * y1 - r1 * r1 - x3 * x3 - y3 * y3 + r3 * r3,\n      ab = a3 * b2 - a2 * b3,\n      xa = (b2 * d3 - b3 * d2) / ab - x1,\n      xb = (b3 * c2 - b2 * c3) / ab,\n      ya = (a3 * d2 - a2 * d3) / ab - y1,\n      yb = (a2 * c3 - a3 * c2) / ab,\n      A = xb * xb + yb * yb - 1,\n      B = 2 * (xa * xb + ya * yb + r1),\n      C = xa * xa + ya * ya - r1 * r1,\n      r = (-B - Math.sqrt(B * B - 4 * A * C)) / (2 * A);\n  return {\n    x: xa + xb * r + x1,\n    y: ya + yb * r + y1,\n    r: r\n  };\n}\n\nfunction place(a, b, c) {\n  var ax = a.x,\n      ay = a.y,\n      da = b.r + c.r,\n      db = a.r + c.r,\n      dx = b.x - ax,\n      dy = b.y - ay,\n      dc = dx * dx + dy * dy;\n  if (dc) {\n    var x = 0.5 + ((db *= db) - (da *= da)) / (2 * dc),\n        y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n    c.x = ax + x * dx + y * dy;\n    c.y = ay + x * dy - y * dx;\n  } else {\n    c.x = ax + db;\n    c.y = ay;\n  }\n}\n\nfunction intersects(a, b) {\n  var dx = b.x - a.x,\n      dy = b.y - a.y,\n      dr = a.r + b.r;\n  return dr * dr - 1e-6 > dx * dx + dy * dy;\n}\n\nfunction distance2(node, x, y) {\n  var a = node._,\n      b = node.next._,\n      ab = a.r + b.r,\n      dx = (a.x * b.r + b.x * a.r) / ab - x,\n      dy = (a.y * b.r + b.y * a.r) / ab - y;\n  return dx * dx + dy * dy;\n}\n\nfunction Node$1(circle) {\n  this._ = circle;\n  this.next = null;\n  this.previous = null;\n}\n\nfunction packEnclose(circles) {\n  if (!(n = circles.length)) return 0;\n\n  var a, b, c, n;\n\n  // Place the first circle.\n  a = circles[0], a.x = 0, a.y = 0;\n  if (!(n > 1)) return a.r;\n\n  // Place the second circle.\n  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n  if (!(n > 2)) return a.r + b.r;\n\n  // Place the third circle.\n  place(b, a, c = circles[2]);\n\n  // Initialize the weighted centroid.\n  var aa = a.r * a.r,\n      ba = b.r * b.r,\n      ca = c.r * c.r,\n      oa = aa + ba + ca,\n      ox = aa * a.x + ba * b.x + ca * c.x,\n      oy = aa * a.y + ba * b.y + ca * c.y,\n      cx, cy, i, j, k, sj, sk;\n\n  // Initialize the front-chain using the first three circles a, b and c.\n  a = new Node$1(a), b = new Node$1(b), c = new Node$1(c);\n  a.next = c.previous = b;\n  b.next = a.previous = c;\n  c.next = b.previous = a;\n\n  // Attempt to place each remaining circle…\n  pack: for (i = 3; i < n; ++i) {\n    place(a._, b._, c = circles[i]), c = new Node$1(c);\n\n    // Find the closest intersecting circle on the front-chain, if any.\n    // “Closeness” is determined by linear distance along the front-chain.\n    // “Ahead” or “behind” is likewise determined by linear distance.\n    j = b.next, k = a.previous, sj = b._.r, sk = a._.r;\n    do {\n      if (sj <= sk) {\n        if (intersects(j._, c._)) {\n          b = j, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sj += j._.r, j = j.next;\n      } else {\n        if (intersects(k._, c._)) {\n          a = k, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sk += k._.r, k = k.previous;\n      }\n    } while (j !== k.next);\n\n    // Success! Insert the new circle c between a and b.\n    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\n    // Update the weighted centroid.\n    oa += ca = c._.r * c._.r;\n    ox += ca * c._.x;\n    oy += ca * c._.y;\n\n    // Compute the new closest circle pair to the centroid.\n    aa = distance2(a, cx = ox / oa, cy = oy / oa);\n    while ((c = c.next) !== b) {\n      if ((ca = distance2(c, cx, cy)) < aa) {\n        a = c, aa = ca;\n      }\n    }\n    b = a.next;\n  }\n\n  // Compute the enclosing circle of the front chain.\n  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\n  // Translate the circles to put the enclosing circle around the origin.\n  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\n  return c.r;\n}\n\nvar siblings = function(circles) {\n  packEnclose(circles);\n  return circles;\n};\n\nfunction optional(f) {\n  return f == null ? null : required(f);\n}\n\nfunction required(f) {\n  if (typeof f !== \"function\") throw new Error;\n  return f;\n}\n\nfunction constantZero() {\n  return 0;\n}\n\nvar constant$8 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction defaultRadius$1(d) {\n  return Math.sqrt(d.value);\n}\n\nvar index$2 = function() {\n  var radius = null,\n      dx = 1,\n      dy = 1,\n      padding = constantZero;\n\n  function pack(root) {\n    root.x = dx / 2, root.y = dy / 2;\n    if (radius) {\n      root.eachBefore(radiusLeaf(radius))\n          .eachAfter(packChildren(padding, 0.5))\n          .eachBefore(translateChild(1));\n    } else {\n      root.eachBefore(radiusLeaf(defaultRadius$1))\n          .eachAfter(packChildren(constantZero, 1))\n          .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n    }\n    return root;\n  }\n\n  pack.radius = function(x) {\n    return arguments.length ? (radius = optional(x), pack) : radius;\n  };\n\n  pack.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n  };\n\n  pack.padding = function(x) {\n    return arguments.length ? (padding = typeof x === \"function\" ? x : constant$8(+x), pack) : padding;\n  };\n\n  return pack;\n};\n\nfunction radiusLeaf(radius) {\n  return function(node) {\n    if (!node.children) {\n      node.r = Math.max(0, +radius(node) || 0);\n    }\n  };\n}\n\nfunction packChildren(padding, k) {\n  return function(node) {\n    if (children = node.children) {\n      var children,\n          i,\n          n = children.length,\n          r = padding(node) * k || 0,\n          e;\n\n      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n      e = packEnclose(children);\n      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n      node.r = e + r;\n    }\n  };\n}\n\nfunction translateChild(k) {\n  return function(node) {\n    var parent = node.parent;\n    node.r *= k;\n    if (parent) {\n      node.x = parent.x + k * node.x;\n      node.y = parent.y + k * node.y;\n    }\n  };\n}\n\nvar roundNode = function(node) {\n  node.x0 = Math.round(node.x0);\n  node.y0 = Math.round(node.y0);\n  node.x1 = Math.round(node.x1);\n  node.y1 = Math.round(node.y1);\n};\n\nvar treemapDice = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (x1 - x0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.y0 = y0, node.y1 = y1;\n    node.x0 = x0, node.x1 = x0 += node.value * k;\n  }\n};\n\nvar partition = function() {\n  var dx = 1,\n      dy = 1,\n      padding = 0,\n      round = false;\n\n  function partition(root) {\n    var n = root.height + 1;\n    root.x0 =\n    root.y0 = padding;\n    root.x1 = dx;\n    root.y1 = dy / n;\n    root.eachBefore(positionNode(dy, n));\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(dy, n) {\n    return function(node) {\n      if (node.children) {\n        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n      }\n      var x0 = node.x0,\n          y0 = node.y0,\n          x1 = node.x1 - padding,\n          y1 = node.y1 - padding;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      node.x0 = x0;\n      node.y0 = y0;\n      node.x1 = x1;\n      node.y1 = y1;\n    };\n  }\n\n  partition.round = function(x) {\n    return arguments.length ? (round = !!x, partition) : round;\n  };\n\n  partition.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n  };\n\n  partition.padding = function(x) {\n    return arguments.length ? (padding = +x, partition) : padding;\n  };\n\n  return partition;\n};\n\nvar keyPrefix$1 = \"$\";\nvar preroot = {depth: -1};\nvar ambiguous = {};\n\nfunction defaultId(d) {\n  return d.id;\n}\n\nfunction defaultParentId(d) {\n  return d.parentId;\n}\n\nvar stratify = function() {\n  var id = defaultId,\n      parentId = defaultParentId;\n\n  function stratify(data) {\n    var d,\n        i,\n        n = data.length,\n        root,\n        parent,\n        node,\n        nodes = new Array(n),\n        nodeId,\n        nodeKey,\n        nodeByKey = {};\n\n    for (i = 0; i < n; ++i) {\n      d = data[i], node = nodes[i] = new Node(d);\n      if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n        nodeKey = keyPrefix$1 + (node.id = nodeId);\n        nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;\n      }\n    }\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], nodeId = parentId(data[i], i, data);\n      if (nodeId == null || !(nodeId += \"\")) {\n        if (root) throw new Error(\"multiple roots\");\n        root = node;\n      } else {\n        parent = nodeByKey[keyPrefix$1 + nodeId];\n        if (!parent) throw new Error(\"missing: \" + nodeId);\n        if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n        if (parent.children) parent.children.push(node);\n        else parent.children = [node];\n        node.parent = parent;\n      }\n    }\n\n    if (!root) throw new Error(\"no root\");\n    root.parent = preroot;\n    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n    root.parent = null;\n    if (n > 0) throw new Error(\"cycle\");\n\n    return root;\n  }\n\n  stratify.id = function(x) {\n    return arguments.length ? (id = required(x), stratify) : id;\n  };\n\n  stratify.parentId = function(x) {\n    return arguments.length ? (parentId = required(x), stratify) : parentId;\n  };\n\n  return stratify;\n};\n\nfunction defaultSeparation$1(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\n// function radialSeparation(a, b) {\n//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n// }\n\n// This function is used to traverse the left contour of a subtree (or\n// subforest). It returns the successor of v on this contour. This successor is\n// either given by the leftmost child of v or by the thread of v. The function\n// returns null if and only if v is on the highest level of its subtree.\nfunction nextLeft(v) {\n  var children = v.children;\n  return children ? children[0] : v.t;\n}\n\n// This function works analogously to nextLeft.\nfunction nextRight(v) {\n  var children = v.children;\n  return children ? children[children.length - 1] : v.t;\n}\n\n// Shifts the current subtree rooted at w+. This is done by increasing\n// prelim(w+) and mod(w+) by shift.\nfunction moveSubtree(wm, wp, shift) {\n  var change = shift / (wp.i - wm.i);\n  wp.c -= change;\n  wp.s += shift;\n  wm.c += change;\n  wp.z += shift;\n  wp.m += shift;\n}\n\n// All other shifts, applied to the smaller subtrees between w- and w+, are\n// performed by this function. To prepare the shifts, we have to adjust\n// change(w+), shift(w+), and change(w-).\nfunction executeShifts(v) {\n  var shift = 0,\n      change = 0,\n      children = v.children,\n      i = children.length,\n      w;\n  while (--i >= 0) {\n    w = children[i];\n    w.z += shift;\n    w.m += shift;\n    shift += w.s + (change += w.c);\n  }\n}\n\n// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n// returns the specified (default) ancestor.\nfunction nextAncestor(vim, v, ancestor) {\n  return vim.a.parent === v.parent ? vim.a : ancestor;\n}\n\nfunction TreeNode(node, i) {\n  this._ = node;\n  this.parent = null;\n  this.children = null;\n  this.A = null; // default ancestor\n  this.a = this; // ancestor\n  this.z = 0; // prelim\n  this.m = 0; // mod\n  this.c = 0; // change\n  this.s = 0; // shift\n  this.t = null; // thread\n  this.i = i; // number\n}\n\nTreeNode.prototype = Object.create(Node.prototype);\n\nfunction treeRoot(root) {\n  var tree = new TreeNode(root, 0),\n      node,\n      nodes = [tree],\n      child,\n      children,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if (children = node._.children) {\n      node.children = new Array(n = children.length);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n        child.parent = node;\n      }\n    }\n  }\n\n  (tree.parent = new TreeNode(null, 0)).children = [tree];\n  return tree;\n}\n\n// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\nvar tree = function() {\n  var separation = defaultSeparation$1,\n      dx = 1,\n      dy = 1,\n      nodeSize = null;\n\n  function tree(root) {\n    var t = treeRoot(root);\n\n    // Compute the layout using Buchheim et al.’s algorithm.\n    t.eachAfter(firstWalk), t.parent.m = -t.z;\n    t.eachBefore(secondWalk);\n\n    // If a fixed node size is specified, scale x and y.\n    if (nodeSize) root.eachBefore(sizeNode);\n\n    // If a fixed tree size is specified, scale x and y based on the extent.\n    // Compute the left-most, right-most, and depth-most nodes for extents.\n    else {\n      var left = root,\n          right = root,\n          bottom = root;\n      root.eachBefore(function(node) {\n        if (node.x < left.x) left = node;\n        if (node.x > right.x) right = node;\n        if (node.depth > bottom.depth) bottom = node;\n      });\n      var s = left === right ? 1 : separation(left, right) / 2,\n          tx = s - left.x,\n          kx = dx / (right.x + s + tx),\n          ky = dy / (bottom.depth || 1);\n      root.eachBefore(function(node) {\n        node.x = (node.x + tx) * kx;\n        node.y = node.depth * ky;\n      });\n    }\n\n    return root;\n  }\n\n  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n  // applied recursively to the children of v, as well as the function\n  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n  // node v is placed to the midpoint of its outermost children.\n  function firstWalk(v) {\n    var children = v.children,\n        siblings = v.parent.children,\n        w = v.i ? siblings[v.i - 1] : null;\n    if (children) {\n      executeShifts(v);\n      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n      if (w) {\n        v.z = w.z + separation(v._, w._);\n        v.m = v.z - midpoint;\n      } else {\n        v.z = midpoint;\n      }\n    } else if (w) {\n      v.z = w.z + separation(v._, w._);\n    }\n    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n  }\n\n  // Computes all real x-coordinates by summing up the modifiers recursively.\n  function secondWalk(v) {\n    v._.x = v.z + v.parent.m;\n    v.m += v.parent.m;\n  }\n\n  // The core of the algorithm. Here, a new subtree is combined with the\n  // previous subtrees. Threads are used to traverse the inside and outside\n  // contours of the left and right subtree up to the highest common level. The\n  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n  // superscript o means outside and i means inside, the subscript - means left\n  // subtree and + means right subtree. For summing up the modifiers along the\n  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n  // nodes of the inside contours conflict, we compute the left one of the\n  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n  // Finally, we add a new thread (if necessary).\n  function apportion(v, w, ancestor) {\n    if (w) {\n      var vip = v,\n          vop = v,\n          vim = w,\n          vom = vip.parent.children[0],\n          sip = vip.m,\n          sop = vop.m,\n          sim = vim.m,\n          som = vom.m,\n          shift;\n      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n        vom = nextLeft(vom);\n        vop = nextRight(vop);\n        vop.a = v;\n        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n        if (shift > 0) {\n          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n          sip += shift;\n          sop += shift;\n        }\n        sim += vim.m;\n        sip += vip.m;\n        som += vom.m;\n        sop += vop.m;\n      }\n      if (vim && !nextRight(vop)) {\n        vop.t = vim;\n        vop.m += sim - sop;\n      }\n      if (vip && !nextLeft(vom)) {\n        vom.t = vip;\n        vom.m += sip - som;\n        ancestor = v;\n      }\n    }\n    return ancestor;\n  }\n\n  function sizeNode(node) {\n    node.x *= dx;\n    node.y = node.depth * dy;\n  }\n\n  tree.separation = function(x) {\n    return arguments.length ? (separation = x, tree) : separation;\n  };\n\n  tree.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n  };\n\n  tree.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return tree;\n};\n\nvar treemapSlice = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (y1 - y0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.x0 = x0, node.x1 = x1;\n    node.y0 = y0, node.y1 = y0 += node.value * k;\n  }\n};\n\nvar phi = (1 + Math.sqrt(5)) / 2;\n\nfunction squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n  var rows = [],\n      nodes = parent.children,\n      row,\n      nodeValue,\n      i0 = 0,\n      i1 = 0,\n      n = nodes.length,\n      dx, dy,\n      value = parent.value,\n      sumValue,\n      minValue,\n      maxValue,\n      newRatio,\n      minRatio,\n      alpha,\n      beta;\n\n  while (i0 < n) {\n    dx = x1 - x0, dy = y1 - y0;\n\n    // Find the next non-empty node.\n    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\n    minValue = maxValue = sumValue;\n    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n    beta = sumValue * sumValue * alpha;\n    minRatio = Math.max(maxValue / beta, beta / minValue);\n\n    // Keep adding nodes while the aspect ratio maintains or improves.\n    for (; i1 < n; ++i1) {\n      sumValue += nodeValue = nodes[i1].value;\n      if (nodeValue < minValue) minValue = nodeValue;\n      if (nodeValue > maxValue) maxValue = nodeValue;\n      beta = sumValue * sumValue * alpha;\n      newRatio = Math.max(maxValue / beta, beta / minValue);\n      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n      minRatio = newRatio;\n    }\n\n    // Position and record the row orientation.\n    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n    value -= sumValue, i0 = i1;\n  }\n\n  return rows;\n}\n\nvar squarify = ((function custom(ratio) {\n\n  function squarify(parent, x0, y0, x1, y1) {\n    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n  }\n\n  squarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return squarify;\n}))(phi);\n\nvar index$3 = function() {\n  var tile = squarify,\n      round = false,\n      dx = 1,\n      dy = 1,\n      paddingStack = [0],\n      paddingInner = constantZero,\n      paddingTop = constantZero,\n      paddingRight = constantZero,\n      paddingBottom = constantZero,\n      paddingLeft = constantZero;\n\n  function treemap(root) {\n    root.x0 =\n    root.y0 = 0;\n    root.x1 = dx;\n    root.y1 = dy;\n    root.eachBefore(positionNode);\n    paddingStack = [0];\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(node) {\n    var p = paddingStack[node.depth],\n        x0 = node.x0 + p,\n        y0 = node.y0 + p,\n        x1 = node.x1 - p,\n        y1 = node.y1 - p;\n    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n    node.x0 = x0;\n    node.y0 = y0;\n    node.x1 = x1;\n    node.y1 = y1;\n    if (node.children) {\n      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n      x0 += paddingLeft(node) - p;\n      y0 += paddingTop(node) - p;\n      x1 -= paddingRight(node) - p;\n      y1 -= paddingBottom(node) - p;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      tile(node, x0, y0, x1, y1);\n    }\n  }\n\n  treemap.round = function(x) {\n    return arguments.length ? (round = !!x, treemap) : round;\n  };\n\n  treemap.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n  };\n\n  treemap.tile = function(x) {\n    return arguments.length ? (tile = required(x), treemap) : tile;\n  };\n\n  treemap.padding = function(x) {\n    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n  };\n\n  treemap.paddingInner = function(x) {\n    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingInner;\n  };\n\n  treemap.paddingOuter = function(x) {\n    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n  };\n\n  treemap.paddingTop = function(x) {\n    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingTop;\n  };\n\n  treemap.paddingRight = function(x) {\n    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingRight;\n  };\n\n  treemap.paddingBottom = function(x) {\n    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingBottom;\n  };\n\n  treemap.paddingLeft = function(x) {\n    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingLeft;\n  };\n\n  return treemap;\n};\n\nvar binary = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      i, n = nodes.length,\n      sum, sums = new Array(n + 1);\n\n  for (sums[0] = sum = i = 0; i < n; ++i) {\n    sums[i + 1] = sum += nodes[i].value;\n  }\n\n  partition(0, n, parent.value, x0, y0, x1, y1);\n\n  function partition(i, j, value, x0, y0, x1, y1) {\n    if (i >= j - 1) {\n      var node = nodes[i];\n      node.x0 = x0, node.y0 = y0;\n      node.x1 = x1, node.y1 = y1;\n      return;\n    }\n\n    var valueOffset = sums[i],\n        valueTarget = (value / 2) + valueOffset,\n        k = i + 1,\n        hi = j - 1;\n\n    while (k < hi) {\n      var mid = k + hi >>> 1;\n      if (sums[mid] < valueTarget) k = mid + 1;\n      else hi = mid;\n    }\n\n    if ((valueTarget - sums[k - 1]) < (sums[k] - valueTarget) && i + 1 < k) --k;\n\n    var valueLeft = sums[k] - valueOffset,\n        valueRight = value - valueLeft;\n\n    if ((x1 - x0) > (y1 - y0)) {\n      var xk = (x0 * valueRight + x1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, xk, y1);\n      partition(k, j, valueRight, xk, y0, x1, y1);\n    } else {\n      var yk = (y0 * valueRight + y1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, x1, yk);\n      partition(k, j, valueRight, x0, yk, x1, y1);\n    }\n  }\n};\n\nvar sliceDice = function(parent, x0, y0, x1, y1) {\n  (parent.depth & 1 ? treemapSlice : treemapDice)(parent, x0, y0, x1, y1);\n};\n\nvar resquarify = ((function custom(ratio) {\n\n  function resquarify(parent, x0, y0, x1, y1) {\n    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n      var rows,\n          row,\n          nodes,\n          i,\n          j = -1,\n          n,\n          m = rows.length,\n          value = parent.value;\n\n      while (++j < m) {\n        row = rows[j], nodes = row.children;\n        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n        if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);\n        else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n        value -= row.value;\n      }\n    } else {\n      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n      rows.ratio = ratio;\n    }\n  }\n\n  resquarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return resquarify;\n}))(phi);\n\nvar area$1 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      a,\n      b = polygon[n - 1],\n      area = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    area += a[1] * b[0] - a[0] * b[1];\n  }\n\n  return area / 2;\n};\n\nvar centroid$1 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      x = 0,\n      y = 0,\n      a,\n      b = polygon[n - 1],\n      c,\n      k = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    k += c = a[0] * b[1] - b[0] * a[1];\n    x += (a[0] + b[0]) * c;\n    y += (a[1] + b[1]) * c;\n  }\n\n  return k *= 3, [x / k, y / k];\n};\n\n// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n// the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n// right, +y is up). Returns a positive value if ABC is counter-clockwise,\n// negative if clockwise, and zero if the points are collinear.\nvar cross$1 = function(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n};\n\nfunction lexicographicOrder(a, b) {\n  return a[0] - b[0] || a[1] - b[1];\n}\n\n// Computes the upper convex hull per the monotone chain algorithm.\n// Assumes points.length >= 3, is sorted by x, unique in y.\n// Returns an array of indices into points in left-to-right order.\nfunction computeUpperHullIndexes(points) {\n  var n = points.length,\n      indexes = [0, 1],\n      size = 2;\n\n  for (var i = 2; i < n; ++i) {\n    while (size > 1 && cross$1(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n    indexes[size++] = i;\n  }\n\n  return indexes.slice(0, size); // remove popped points\n}\n\nvar hull = function(points) {\n  if ((n = points.length) < 3) return null;\n\n  var i,\n      n,\n      sortedPoints = new Array(n),\n      flippedPoints = new Array(n);\n\n  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n  sortedPoints.sort(lexicographicOrder);\n  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\n  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n      lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\n  // Construct the hull polygon, removing possible duplicate endpoints.\n  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n      hull = [];\n\n  // Add upper hull in right-to-l order.\n  // Then add lower hull in left-to-right order.\n  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\n  return hull;\n};\n\nvar contains$1 = function(polygon, point) {\n  var n = polygon.length,\n      p = polygon[n - 1],\n      x = point[0], y = point[1],\n      x0 = p[0], y0 = p[1],\n      x1, y1,\n      inside = false;\n\n  for (var i = 0; i < n; ++i) {\n    p = polygon[i], x1 = p[0], y1 = p[1];\n    if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;\n    x0 = x1, y0 = y1;\n  }\n\n  return inside;\n};\n\nvar length$2 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      b = polygon[n - 1],\n      xa,\n      ya,\n      xb = b[0],\n      yb = b[1],\n      perimeter = 0;\n\n  while (++i < n) {\n    xa = xb;\n    ya = yb;\n    b = polygon[i];\n    xb = b[0];\n    yb = b[1];\n    xa -= xb;\n    ya -= yb;\n    perimeter += Math.sqrt(xa * xa + ya * ya);\n  }\n\n  return perimeter;\n};\n\nvar slice$3 = [].slice;\n\nvar noabort = {};\n\nfunction Queue(size) {\n  if (!(size >= 1)) throw new Error;\n  this._size = size;\n  this._call =\n  this._error = null;\n  this._tasks = [];\n  this._data = [];\n  this._waiting =\n  this._active =\n  this._ended =\n  this._start = 0; // inside a synchronous task callback?\n}\n\nQueue.prototype = queue.prototype = {\n  constructor: Queue,\n  defer: function(callback) {\n    if (typeof callback !== \"function\" || this._call) throw new Error;\n    if (this._error != null) return this;\n    var t = slice$3.call(arguments, 1);\n    t.push(callback);\n    ++this._waiting, this._tasks.push(t);\n    poke$1(this);\n    return this;\n  },\n  abort: function() {\n    if (this._error == null) abort(this, new Error(\"abort\"));\n    return this;\n  },\n  await: function(callback) {\n    if (typeof callback !== \"function\" || this._call) throw new Error;\n    this._call = function(error, results) { callback.apply(null, [error].concat(results)); };\n    maybeNotify(this);\n    return this;\n  },\n  awaitAll: function(callback) {\n    if (typeof callback !== \"function\" || this._call) throw new Error;\n    this._call = callback;\n    maybeNotify(this);\n    return this;\n  }\n};\n\nfunction poke$1(q) {\n  if (!q._start) {\n    try { start$1(q); } // let the current task complete\n    catch (e) {\n      if (q._tasks[q._ended + q._active - 1]) abort(q, e); // task errored synchronously\n      else if (!q._data) throw e; // await callback errored synchronously\n    }\n  }\n}\n\nfunction start$1(q) {\n  while (q._start = q._waiting && q._active < q._size) {\n    var i = q._ended + q._active,\n        t = q._tasks[i],\n        j = t.length - 1,\n        c = t[j];\n    t[j] = end(q, i);\n    --q._waiting, ++q._active;\n    t = c.apply(null, t);\n    if (!q._tasks[i]) continue; // task finished synchronously\n    q._tasks[i] = t || noabort;\n  }\n}\n\nfunction end(q, i) {\n  return function(e, r) {\n    if (!q._tasks[i]) return; // ignore multiple callbacks\n    --q._active, ++q._ended;\n    q._tasks[i] = null;\n    if (q._error != null) return; // ignore secondary errors\n    if (e != null) {\n      abort(q, e);\n    } else {\n      q._data[i] = r;\n      if (q._waiting) poke$1(q);\n      else maybeNotify(q);\n    }\n  };\n}\n\nfunction abort(q, e) {\n  var i = q._tasks.length, t;\n  q._error = e; // ignore active callbacks\n  q._data = undefined; // allow gc\n  q._waiting = NaN; // prevent starting\n\n  while (--i >= 0) {\n    if (t = q._tasks[i]) {\n      q._tasks[i] = null;\n      if (t.abort) {\n        try { t.abort(); }\n        catch (e) { /* ignore */ }\n      }\n    }\n  }\n\n  q._active = NaN; // allow notification\n  maybeNotify(q);\n}\n\nfunction maybeNotify(q) {\n  if (!q._active && q._call) {\n    var d = q._data;\n    q._data = undefined; // allow gc\n    q._call(q._error, d);\n  }\n}\n\nfunction queue(concurrency) {\n  return new Queue(arguments.length ? +concurrency : Infinity);\n}\n\nvar uniform = function(min, max) {\n  min = min == null ? 0 : +min;\n  max = max == null ? 1 : +max;\n  if (arguments.length === 1) max = min, min = 0;\n  else max -= min;\n  return function() {\n    return Math.random() * max + min;\n  };\n};\n\nvar normal = function(mu, sigma) {\n  var x, r;\n  mu = mu == null ? 0 : +mu;\n  sigma = sigma == null ? 1 : +sigma;\n  return function() {\n    var y;\n\n    // If available, use the second previously-generated uniform random.\n    if (x != null) y = x, x = null;\n\n    // Otherwise, generate a new x and y.\n    else do {\n      x = Math.random() * 2 - 1;\n      y = Math.random() * 2 - 1;\n      r = x * x + y * y;\n    } while (!r || r > 1);\n\n    return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n  };\n};\n\nvar logNormal = function() {\n  var randomNormal = normal.apply(this, arguments);\n  return function() {\n    return Math.exp(randomNormal());\n  };\n};\n\nvar irwinHall = function(n) {\n  return function() {\n    for (var sum = 0, i = 0; i < n; ++i) sum += Math.random();\n    return sum;\n  };\n};\n\nvar bates = function(n) {\n  var randomIrwinHall = irwinHall(n);\n  return function() {\n    return randomIrwinHall() / n;\n  };\n};\n\nvar exponential$1 = function(lambda) {\n  return function() {\n    return -Math.log(1 - Math.random()) / lambda;\n  };\n};\n\nvar request = function(url, callback) {\n  var request,\n      event = dispatch(\"beforesend\", \"progress\", \"load\", \"error\"),\n      mimeType,\n      headers = map$1(),\n      xhr = new XMLHttpRequest,\n      user = null,\n      password = null,\n      response,\n      responseType,\n      timeout = 0;\n\n  // If IE does not support CORS, use XDomainRequest.\n  if (typeof XDomainRequest !== \"undefined\"\n      && !(\"withCredentials\" in xhr)\n      && /^(http(s)?:)?\\/\\//.test(url)) xhr = new XDomainRequest;\n\n  \"onload\" in xhr\n      ? xhr.onload = xhr.onerror = xhr.ontimeout = respond\n      : xhr.onreadystatechange = function(o) { xhr.readyState > 3 && respond(o); };\n\n  function respond(o) {\n    var status = xhr.status, result;\n    if (!status && hasResponse(xhr)\n        || status >= 200 && status < 300\n        || status === 304) {\n      if (response) {\n        try {\n          result = response.call(request, xhr);\n        } catch (e) {\n          event.call(\"error\", request, e);\n          return;\n        }\n      } else {\n        result = xhr;\n      }\n      event.call(\"load\", request, result);\n    } else {\n      event.call(\"error\", request, o);\n    }\n  }\n\n  xhr.onprogress = function(e) {\n    event.call(\"progress\", request, e);\n  };\n\n  request = {\n    header: function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers.get(name);\n      if (value == null) headers.remove(name);\n      else headers.set(name, value + \"\");\n      return request;\n    },\n\n    // If mimeType is non-null and no Accept header is set, a default is used.\n    mimeType: function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return request;\n    },\n\n    // Specifies what type the response value should take;\n    // for instance, arraybuffer, blob, document, or text.\n    responseType: function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return request;\n    },\n\n    timeout: function(value) {\n      if (!arguments.length) return timeout;\n      timeout = +value;\n      return request;\n    },\n\n    user: function(value) {\n      return arguments.length < 1 ? user : (user = value == null ? null : value + \"\", request);\n    },\n\n    password: function(value) {\n      return arguments.length < 1 ? password : (password = value == null ? null : value + \"\", request);\n    },\n\n    // Specify how to convert the response content to a specific type;\n    // changes the callback value on \"load\" events.\n    response: function(value) {\n      response = value;\n      return request;\n    },\n\n    // Alias for send(\"GET\", …).\n    get: function(data, callback) {\n      return request.send(\"GET\", data, callback);\n    },\n\n    // Alias for send(\"POST\", …).\n    post: function(data, callback) {\n      return request.send(\"POST\", data, callback);\n    },\n\n    // If callback is non-null, it will be used for error and load events.\n    send: function(method, data, callback) {\n      xhr.open(method, url, true, user, password);\n      if (mimeType != null && !headers.has(\"accept\")) headers.set(\"accept\", mimeType + \",*/*\");\n      if (xhr.setRequestHeader) headers.each(function(value, name) { xhr.setRequestHeader(name, value); });\n      if (mimeType != null && xhr.overrideMimeType) xhr.overrideMimeType(mimeType);\n      if (responseType != null) xhr.responseType = responseType;\n      if (timeout > 0) xhr.timeout = timeout;\n      if (callback == null && typeof data === \"function\") callback = data, data = null;\n      if (callback != null && callback.length === 1) callback = fixCallback(callback);\n      if (callback != null) request.on(\"error\", callback).on(\"load\", function(xhr) { callback(null, xhr); });\n      event.call(\"beforesend\", request, xhr);\n      xhr.send(data == null ? null : data);\n      return request;\n    },\n\n    abort: function() {\n      xhr.abort();\n      return request;\n    },\n\n    on: function() {\n      var value = event.on.apply(event, arguments);\n      return value === event ? request : value;\n    }\n  };\n\n  if (callback != null) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    return request.get(callback);\n  }\n\n  return request;\n};\n\nfunction fixCallback(callback) {\n  return function(error, xhr) {\n    callback(error == null ? xhr : null);\n  };\n}\n\nfunction hasResponse(xhr) {\n  var type = xhr.responseType;\n  return type && type !== \"text\"\n      ? xhr.response // null on error\n      : xhr.responseText; // \"\" on error\n}\n\nvar type$1 = function(defaultMimeType, response) {\n  return function(url, callback) {\n    var r = request(url).mimeType(defaultMimeType).response(response);\n    if (callback != null) {\n      if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n      return r.get(callback);\n    }\n    return r;\n  };\n};\n\nvar html = type$1(\"text/html\", function(xhr) {\n  return document.createRange().createContextualFragment(xhr.responseText);\n});\n\nvar json = type$1(\"application/json\", function(xhr) {\n  return JSON.parse(xhr.responseText);\n});\n\nvar text = type$1(\"text/plain\", function(xhr) {\n  return xhr.responseText;\n});\n\nvar xml = type$1(\"application/xml\", function(xhr) {\n  var xml = xhr.responseXML;\n  if (!xml) throw new Error(\"parse error\");\n  return xml;\n});\n\nvar dsv$1 = function(defaultMimeType, parse) {\n  return function(url, row, callback) {\n    if (arguments.length < 3) callback = row, row = null;\n    var r = request(url).mimeType(defaultMimeType);\n    r.row = function(_) { return arguments.length ? r.response(responseOf(parse, row = _)) : row; };\n    r.row(row);\n    return callback ? r.get(callback) : r;\n  };\n};\n\nfunction responseOf(parse, row) {\n  return function(request$$1) {\n    return parse(request$$1.responseText, row);\n  };\n}\n\nvar csv$1 = dsv$1(\"text/csv\", csvParse);\n\nvar tsv$1 = dsv$1(\"text/tab-separated-values\", tsvParse);\n\nvar array$2 = Array.prototype;\n\nvar map$3 = array$2.map;\nvar slice$4 = array$2.slice;\n\nvar implicit = {name: \"implicit\"};\n\nfunction ordinal(range) {\n  var index = map$1(),\n      domain = [],\n      unknown = implicit;\n\n  range = range == null ? [] : slice$4.call(range);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map$1();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice$4.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n\nfunction band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range$$1 = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = range$$1[1] < range$$1[0],\n        start = range$$1[reverse - 0],\n        stop = range$$1[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = [+_[0], +_[1]], rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range$$1)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nfunction point$1() {\n  return pointish(band().paddingInner(1));\n}\n\nvar constant$9 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar number$1 = function(x) {\n  return +x;\n};\n\nvar unit = [0, 1];\n\nfunction deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant$9(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range$$1, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range$$1[0], r1 = range$$1[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range$$1, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range$$1.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range$$1 = range$$1.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range$$1[i], range$$1[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisectRight(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nfunction copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nfunction continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range$$1 = unit,\n      interpolate$$1 = interpolateValue,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range$$1.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range$$1, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate$$1)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range$$1, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map$3.call(_, number$1), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$4.call(_), rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = slice$4.call(_), interpolate$$1 = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate$$1 = _, rescale()) : interpolate$$1;\n  };\n\n  return rescale();\n}\n\nvar tickFormat = function(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return exports.formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return exports.format(specifier);\n};\n\nfunction linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    var d = domain(),\n        i = d.length - 1,\n        n = count == null ? 10 : count,\n        start = d[0],\n        stop = d[i],\n        step = tickStep(start, stop, n);\n\n    if (step) {\n      step = tickStep(Math.floor(start / step) * step, Math.ceil(stop / step) * step, n);\n      d[0] = Math.floor(start / step) * step;\n      d[i] = Math.ceil(stop / step) * step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nfunction linear$2() {\n  var scale = continuous(deinterpolateLinear, reinterpolate);\n\n  scale.copy = function() {\n    return copy(scale, linear$2());\n  };\n\n  return linearish(scale);\n}\n\nfunction identity$6() {\n  var domain = [0, 1];\n\n  function scale(x) {\n    return +x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map$3.call(_, number$1), scale) : domain.slice();\n  };\n\n  scale.copy = function() {\n    return identity$6().domain(domain);\n  };\n\n  return linearish(scale);\n}\n\nvar nice = function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n};\n\nfunction deinterpolate(a, b) {\n  return (b = Math.log(b / a))\n      ? function(x) { return Math.log(x / a) / b; }\n      : constant$9(b);\n}\n\nfunction reinterpolate$1(a, b) {\n  return a < 0\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nfunction log$1() {\n  var scale = continuous(deinterpolate, reinterpolate$1).domain([1, 10]),\n      domain = scale.domain,\n      base = 10,\n      logs = logp(10),\n      pows = powp(10);\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = exports.format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  scale.copy = function() {\n    return copy(scale, log$1().base(base));\n  };\n\n  return scale;\n}\n\nfunction raise$1(x, exponent) {\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n}\n\nfunction pow$1() {\n  var exponent = 1,\n      scale = continuous(deinterpolate, reinterpolate),\n      domain = scale.domain;\n\n  function deinterpolate(a, b) {\n    return (b = raise$1(b, exponent) - (a = raise$1(a, exponent)))\n        ? function(x) { return (raise$1(x, exponent) - a) / b; }\n        : constant$9(b);\n  }\n\n  function reinterpolate(a, b) {\n    b = raise$1(b, exponent) - (a = raise$1(a, exponent));\n    return function(t) { return raise$1(a + b * t, 1 / exponent); };\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n  };\n\n  scale.copy = function() {\n    return copy(scale, pow$1().exponent(exponent));\n  };\n\n  return linearish(scale);\n}\n\nfunction sqrt$1() {\n  return pow$1().exponent(0.5);\n}\n\nfunction quantile$$1() {\n  var domain = [],\n      range$$1 = [],\n      thresholds = [];\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range$$1.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return range$$1[bisectRight(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$4.call(_), rescale()) : range$$1.slice();\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile$$1()\n        .domain(domain)\n        .range(range$$1);\n  };\n\n  return scale;\n}\n\nfunction quantize$1() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range$$1 = [0, 1];\n\n  function scale(x) {\n    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range$$1 = slice$4.call(_)).length - 1, rescale()) : range$$1.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return quantize$1()\n        .domain([x0, x1])\n        .range(range$$1);\n  };\n\n  return linearish(scale);\n}\n\nfunction threshold$1() {\n  var domain = [0.5],\n      range$$1 = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice$4.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$4.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : range$$1.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return threshold$1()\n        .domain(domain)\n        .range(range$$1);\n  };\n\n  return scale;\n}\n\nvar t0$1 = new Date;\nvar t1$1 = new Date;\n\nfunction newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [];\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(new Date(+start)); while (offseti(start, step), floori(start), start < stop)\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) while (--step >= 0) while (offseti(date, 1), !test(date)) {} // eslint-disable-line no-empty\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0$1.setTime(+start), t1$1.setTime(+end);\n      floori(t0$1), floori(t1$1);\n      return Math.floor(count(t0$1, t1$1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n\nvar millisecond = newInterval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return newInterval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nvar milliseconds = millisecond.range;\n\nvar durationSecond$1 = 1e3;\nvar durationMinute$1 = 6e4;\nvar durationHour$1 = 36e5;\nvar durationDay$1 = 864e5;\nvar durationWeek$1 = 6048e5;\n\nvar second = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationSecond$1) * durationSecond$1);\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond$1);\n}, function(start, end) {\n  return (end - start) / durationSecond$1;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nvar seconds = second.range;\n\nvar minute = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationMinute$1) * durationMinute$1);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute$1);\n}, function(start, end) {\n  return (end - start) / durationMinute$1;\n}, function(date) {\n  return date.getMinutes();\n});\n\nvar minutes = minute.range;\n\nvar hour = newInterval(function(date) {\n  var offset = date.getTimezoneOffset() * durationMinute$1 % durationHour$1;\n  if (offset < 0) offset += durationHour$1;\n  date.setTime(Math.floor((+date - offset) / durationHour$1) * durationHour$1 + offset);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour$1);\n}, function(start, end) {\n  return (end - start) / durationHour$1;\n}, function(date) {\n  return date.getHours();\n});\n\nvar hours = hour.range;\n\nvar day = newInterval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute$1) / durationDay$1;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nvar days = day.range;\n\nfunction weekday(i) {\n  return newInterval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute$1) / durationWeek$1;\n  });\n}\n\nvar sunday = weekday(0);\nvar monday = weekday(1);\nvar tuesday = weekday(2);\nvar wednesday = weekday(3);\nvar thursday = weekday(4);\nvar friday = weekday(5);\nvar saturday = weekday(6);\n\nvar sundays = sunday.range;\nvar mondays = monday.range;\nvar tuesdays = tuesday.range;\nvar wednesdays = wednesday.range;\nvar thursdays = thursday.range;\nvar fridays = friday.range;\nvar saturdays = saturday.range;\n\nvar month = newInterval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nvar months = month.range;\n\nvar year = newInterval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nvar years = year.range;\n\nvar utcMinute = newInterval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute$1);\n}, function(start, end) {\n  return (end - start) / durationMinute$1;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nvar utcMinutes = utcMinute.range;\n\nvar utcHour = newInterval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour$1);\n}, function(start, end) {\n  return (end - start) / durationHour$1;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nvar utcHours = utcHour.range;\n\nvar utcDay = newInterval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay$1;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nvar utcDays = utcDay.range;\n\nfunction utcWeekday(i) {\n  return newInterval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek$1;\n  });\n}\n\nvar utcSunday = utcWeekday(0);\nvar utcMonday = utcWeekday(1);\nvar utcTuesday = utcWeekday(2);\nvar utcWednesday = utcWeekday(3);\nvar utcThursday = utcWeekday(4);\nvar utcFriday = utcWeekday(5);\nvar utcSaturday = utcWeekday(6);\n\nvar utcSundays = utcSunday.range;\nvar utcMondays = utcMonday.range;\nvar utcTuesdays = utcTuesday.range;\nvar utcWednesdays = utcWednesday.range;\nvar utcThursdays = utcThursday.range;\nvar utcFridays = utcFriday.range;\nvar utcSaturdays = utcSaturday.range;\n\nvar utcMonth = newInterval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nvar utcMonths = utcMonth.range;\n\nvar utcYear = newInterval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nvar utcYears = utcYear.range;\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nfunction formatLocale$1(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"S\": formatSeconds,\n    \"U\": formatWeekNumberSunday,\n    \"w\": formatWeekdayNumber,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"S\": formatUTCSeconds,\n    \"U\": formatUTCWeekNumberSunday,\n    \"w\": formatUTCWeekdayNumber,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"S\": parseSeconds,\n    \"U\": parseWeekNumberSunday,\n    \"w\": parseWeekdayNumber,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0);\n      if (i != string.length) return null;\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n        var day$$1 = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day$$1 + 5) % 7 : d.w + d.U * 7 - (day$$1 + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"};\nvar numberRe = /^\\s*\\d+/;\nvar percentRe = /^%/;\nvar requoteRe = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?:\\:?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + day.count(year(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(sunday.count(year(d), d), p, 2);\n}\n\nfunction formatWeekdayNumber(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(monday.count(year(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekdayNumber(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nvar locale$2;\n\n\n\n\n\ndefaultLocale$1({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nfunction defaultLocale$1(definition) {\n  locale$2 = formatLocale$1(definition);\n  exports.timeFormat = locale$2.format;\n  exports.timeParse = locale$2.parse;\n  exports.utcFormat = locale$2.utcFormat;\n  exports.utcParse = locale$2.utcParse;\n  return locale$2;\n}\n\nvar isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : exports.utcFormat(isoSpecifier);\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : exports.utcParse(isoSpecifier);\n\nvar durationSecond = 1000;\nvar durationMinute = durationSecond * 60;\nvar durationHour = durationMinute * 60;\nvar durationDay = durationHour * 24;\nvar durationWeek = durationDay * 7;\nvar durationMonth = durationDay * 30;\nvar durationYear = durationDay * 365;\n\nfunction date$1(t) {\n  return new Date(t);\n}\n\nfunction number$2(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nfunction calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format) {\n  var scale = continuous(deinterpolateLinear, reinterpolate),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second$$1,  1,      durationSecond],\n    [second$$1,  5,  5 * durationSecond],\n    [second$$1, 15, 15 * durationSecond],\n    [second$$1, 30, 30 * durationSecond],\n    [minute$$1,  1,      durationMinute],\n    [minute$$1,  5,  5 * durationMinute],\n    [minute$$1, 15, 15 * durationMinute],\n    [minute$$1, 30, 30 * durationMinute],\n    [  hour$$1,  1,      durationHour  ],\n    [  hour$$1,  3,  3 * durationHour  ],\n    [  hour$$1,  6,  6 * durationHour  ],\n    [  hour$$1, 12, 12 * durationHour  ],\n    [   day$$1,  1,      durationDay   ],\n    [   day$$1,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month$$1,  1,      durationMonth ],\n    [ month$$1,  3,  3 * durationMonth ],\n    [  year$$1,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second$$1(date) < date ? formatMillisecond\n        : minute$$1(date) < date ? formatSecond\n        : hour$$1(date) < date ? formatMinute\n        : day$$1(date) < date ? formatHour\n        : month$$1(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year$$1(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year$$1;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = tickStep(start, stop, interval);\n        interval = millisecond$$1;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map$3.call(_, number$2)) : domain().map(date$1);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format));\n  };\n\n  return scale;\n}\n\nvar time = function() {\n  return calendar(year, month, sunday, day, hour, minute, second, millisecond, exports.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n};\n\nvar utcTime = function() {\n  return calendar(utcYear, utcMonth, utcSunday, utcDay, utcHour, utcMinute, second, millisecond, exports.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n};\n\nvar colors = function(s) {\n  return s.match(/.{6}/g).map(function(x) {\n    return \"#\" + x;\n  });\n};\n\nvar category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\nvar category20b = colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n\nvar category20c = colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n\nvar category20 = colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n\nvar cubehelix$3 = cubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n\nvar warm = cubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar cool = cubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar rainbow = cubehelix();\n\nvar rainbow$1 = function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  rainbow.h = 360 * t - 100;\n  rainbow.s = 1.5 - 1.5 * ts;\n  rainbow.l = 0.8 - 0.9 * ts;\n  return rainbow + \"\";\n};\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nvar viridis = ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nvar magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nvar inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nvar plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\nfunction sequential(interpolator) {\n  var x0 = 0,\n      x1 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = (x - x0) / (x1 - x0);\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n\nvar constant$10 = function(x) {\n  return function constant() {\n    return x;\n  };\n};\n\nvar abs$1 = Math.abs;\nvar atan2$1 = Math.atan2;\nvar cos$2 = Math.cos;\nvar max$2 = Math.max;\nvar min$1 = Math.min;\nvar sin$2 = Math.sin;\nvar sqrt$2 = Math.sqrt;\n\nvar epsilon$3 = 1e-12;\nvar pi$4 = Math.PI;\nvar halfPi$3 = pi$4 / 2;\nvar tau$4 = 2 * pi$4;\n\nfunction acos$1(x) {\n  return x > 1 ? 0 : x < -1 ? pi$4 : Math.acos(x);\n}\n\nfunction asin$1(x) {\n  return x >= 1 ? halfPi$3 : x <= -1 ? -halfPi$3 : Math.asin(x);\n}\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt$2(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt$2(max$2(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nvar arc = function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant$10(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi$3,\n        a1 = endAngle.apply(this, arguments) - halfPi$3,\n        da = abs$1(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon$3)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau$4 - epsilon$3) {\n      context.moveTo(r1 * cos$2(a0), r1 * sin$2(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon$3) {\n        context.moveTo(r0 * cos$2(a1), r0 * sin$2(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon$3) && (padRadius ? +padRadius.apply(this, arguments) : sqrt$2(r0 * r0 + r1 * r1)),\n          rc = min$1(abs$1(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon$3) {\n        var p0 = asin$1(rp / r0 * sin$2(ap)),\n            p1 = asin$1(rp / r1 * sin$2(ap));\n        if ((da0 -= p0 * 2) > epsilon$3) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon$3) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos$2(a01),\n          y01 = r1 * sin$2(a01),\n          x10 = r0 * cos$2(a10),\n          y10 = r0 * sin$2(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon$3) {\n        var x11 = r1 * cos$2(a11),\n            y11 = r1 * sin$2(a11),\n            x00 = r0 * cos$2(a00),\n            y00 = r0 * sin$2(a00);\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi$4) {\n          var oc = da0 > epsilon$3 ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n              ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin$2(acos$1((ax * bx + ay * by) / (sqrt$2(ax * ax + ay * ay) * sqrt$2(bx * bx + by * by))) / 2),\n              lc = sqrt$2(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min$1(rc, (r0 - lc) / (kc - 1));\n          rc1 = min$1(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon$3)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon$3) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2$1(t0.y01, t0.x01), atan2$1(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2$1(t0.y01, t0.x01), atan2$1(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2$1(t0.cy + t0.y11, t0.cx + t0.x11), atan2$1(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2$1(t1.y11, t1.x11), atan2$1(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon$3) || !(da0 > epsilon$3)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon$3) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2$1(t0.y01, t0.x01), atan2$1(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2$1(t0.y01, t0.x01), atan2$1(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2$1(t0.cy + t0.y11, t0.cx + t0.x11), atan2$1(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2$1(t1.y11, t1.x11), atan2$1(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi$4 / 2;\n    return [cos$2(a) * r, sin$2(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n};\n\nfunction Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nvar curveLinear = function(context) {\n  return new Linear(context);\n};\n\nfunction x$3(p) {\n  return p[0];\n}\n\nfunction y$3(p) {\n  return p[1];\n}\n\nvar line = function() {\n  var x$$1 = x$3,\n      y$$1 = y$3,\n      defined = constant$10(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x$$1(d, i, data), +y$$1(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$10(+_), line) : x$$1;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$10(+_), line) : y$$1;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$10(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n};\n\nvar area$2 = function() {\n  var x0 = x$3,\n      x1 = null,\n      y0 = constant$10(0),\n      y1 = y$3,\n      defined = constant$10(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$10(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$10(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$10(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$10(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$10(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n};\n\nvar descending$1 = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar identity$7 = function(d) {\n  return d;\n};\n\nvar pie = function() {\n  var value = identity$7,\n      sortValues = descending$1,\n      sort = null,\n      startAngle = constant$10(0),\n      endAngle = constant$10(tau$4),\n      padAngle = constant$10(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau$4, Math.max(-tau$4, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$10(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : padAngle;\n  };\n\n  return pie;\n};\n\nvar curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nfunction curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n\nfunction radialLine(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nvar radialLine$1 = function() {\n  return radialLine(line().curve(curveRadialLinear));\n};\n\nvar radialArea = function() {\n  var a = area$2().curve(curveRadialLinear),\n      c = a.curve,\n      x0 = a.lineX0,\n      x1 = a.lineX1,\n      y0 = a.lineY0,\n      y1 = a.lineY1;\n\n  a.angle = a.x, delete a.x;\n  a.startAngle = a.x0, delete a.x0;\n  a.endAngle = a.x1, delete a.x1;\n  a.radius = a.y, delete a.y;\n  a.innerRadius = a.y0, delete a.y0;\n  a.outerRadius = a.y1, delete a.y1;\n  a.lineStartAngle = function() { return radialLine(x0()); }, delete a.lineX0;\n  a.lineEndAngle = function() { return radialLine(x1()); }, delete a.lineX1;\n  a.lineInnerRadius = function() { return radialLine(y0()); }, delete a.lineY0;\n  a.lineOuterRadius = function() { return radialLine(y1()); }, delete a.lineY1;\n\n  a.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return a;\n};\n\nvar circle$2 = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi$4);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau$4);\n  }\n};\n\nvar cross$2 = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n\nvar tan30 = Math.sqrt(1 / 3);\nvar tan30_2 = tan30 * 2;\n\nvar diamond = {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n\nvar ka = 0.89081309152928522810;\nvar kr = Math.sin(pi$4 / 10) / Math.sin(7 * pi$4 / 10);\nvar kx = Math.sin(tau$4 / 10) * kr;\nvar ky = -Math.cos(tau$4 / 10) * kr;\n\nvar star = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau$4 * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n\nvar square = {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n\nvar sqrt3 = Math.sqrt(3);\n\nvar triangle = {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n\nvar c = -0.5;\nvar s = Math.sqrt(3) / 2;\nvar k = 1 / Math.sqrt(12);\nvar a = (k / 2 + 1) * 3;\n\nvar wye = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n\nvar symbols = [\n  circle$2,\n  cross$2,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nvar symbol = function() {\n  var type = constant$10(circle$2),\n      size = constant$10(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant$10(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant$10(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n};\n\nvar noop$2 = function() {};\n\nfunction point$2(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nfunction Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point$2(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basis$2 = function(context) {\n  return new Basis(context);\n};\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisClosed$1 = function(context) {\n  return new BasisClosed(context);\n};\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisOpen = function(context) {\n  return new BasisOpen(context);\n};\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nvar bundle = ((function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n}))(0.85);\n\nfunction point$3(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nfunction Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point$3(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinal = ((function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n}))(0);\n\nfunction CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalClosed = ((function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n}))(0);\n\nfunction CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalOpen = ((function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n}))(0);\n\nfunction point$4(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon$3) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon$3) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRom = ((function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n}))(0.5);\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomClosed = ((function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n}))(0.5);\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomOpen = ((function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n}))(0.5);\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nvar linearClosed = function(context) {\n  return new LinearClosed(context);\n};\n\nfunction sign$1(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign$1(s0) + sign$1(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point$5(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point$5(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point$5(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point$5(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n};\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nfunction monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nfunction monotoneY(context) {\n  return new MonotoneY(context);\n}\n\nfunction Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nvar natural = function(context) {\n  return new Natural(context);\n};\n\nfunction Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nvar step = function(context) {\n  return new Step(context, 0.5);\n};\n\nfunction stepBefore(context) {\n  return new Step(context, 0);\n}\n\nfunction stepAfter(context) {\n  return new Step(context, 1);\n}\n\nvar slice$5 = Array.prototype.slice;\n\nvar none$1 = function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (var j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n};\n\nvar none$2 = function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n};\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nvar stack = function() {\n  var keys = constant$10([]),\n      order = none$2,\n      offset = none$1,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant$10(slice$5.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$10(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? none$2 : typeof _ === \"function\" ? _ : constant$10(slice$5.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? none$1 : _, stack) : offset;\n  };\n\n  return stack;\n};\n\nvar expand = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none$1(series, order);\n};\n\nvar silhouette = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n    s0[j][1] += s0[j][0] = -y / 2;\n  }\n  none$1(series, order);\n};\n\nvar wiggle = function(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none$1(series, order);\n};\n\nvar ascending$2 = function(series) {\n  var sums = series.map(sum$2);\n  return none$2(series).sort(function(a, b) { return sums[a] - sums[b]; });\n};\n\nfunction sum$2(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n\nvar descending$2 = function(series) {\n  return ascending$2(series).reverse();\n};\n\nvar insideOut = function(series) {\n  var n = series.length,\n      i,\n      j,\n      sums = series.map(sum$2),\n      order = none$2(series).sort(function(a, b) { return sums[b] - sums[a]; }),\n      top = 0,\n      bottom = 0,\n      tops = [],\n      bottoms = [];\n\n  for (i = 0; i < n; ++i) {\n    j = order[i];\n    if (top < bottom) {\n      top += sums[j];\n      tops.push(j);\n    } else {\n      bottom += sums[j];\n      bottoms.push(j);\n    }\n  }\n\n  return bottoms.reverse().concat(tops);\n};\n\nvar reverse = function(series) {\n  return none$2(series).reverse();\n};\n\nvar constant$11 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction x$4(d) {\n  return d[0];\n}\n\nfunction y$4(d) {\n  return d[1];\n}\n\nfunction RedBlackTree() {\n  this._ = null; // root node\n}\n\nfunction RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nfunction createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nfunction createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nfunction setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nfunction clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon$4\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon$4)) {\n      delete edges[i];\n    }\n  }\n}\n\nfunction createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nfunction cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nfunction cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nfunction sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nfunction clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon$4 || Math.abs(endY - startY) > epsilon$4) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon$4 && y1 - endY > epsilon$4 ? [x0, Math.abs(startX - x0) < epsilon$4 ? startY : y1]\n              : Math.abs(endY - y1) < epsilon$4 && x1 - endX > epsilon$4 ? [Math.abs(startY - y1) < epsilon$4 ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon$4 && endY - y0 > epsilon$4 ? [x1, Math.abs(startX - x1) < epsilon$4 ? startY : y0]\n              : Math.abs(endY - y0) < epsilon$4 && endX - x0 > epsilon$4 ? [Math.abs(startY - y0) < epsilon$4 ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n\nvar circlePool = [];\n\nvar firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nfunction attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2$2) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nfunction detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nfunction removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon$4\n      && Math.abs(y - lArc.circle.cy) < epsilon$4) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon$4\n      && Math.abs(y - rArc.circle.cy) < epsilon$4) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon$4) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon$4) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon$4) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon$4) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n\nvar epsilon$4 = 1e-6;\nvar epsilon2$2 = 1e-12;\nvar beaches;\nvar cells;\nvar circles;\nvar edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nfunction Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      if (!(m = (halfedges = cell.halfedges).length)) return;\n      var site = cell.site,\n          halfedges,\n          j = -1,\n          m,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\n    // Use the previously-found cell, or start with an arbitrary one.\n    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\n    // Traverse the half-edges to find a closer cell, if any.\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n};\n\nvar voronoi = function() {\n  var x$$1 = x$4,\n      y$$1 = y$4,\n      extent = null;\n\n  function voronoi(data) {\n    return new Diagram(data.map(function(d, i) {\n      var s = [Math.round(x$$1(d, i, data) / epsilon$4) * epsilon$4, Math.round(y$$1(d, i, data) / epsilon$4) * epsilon$4];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n\n  voronoi.polygons = function(data) {\n    return voronoi(data).polygons();\n  };\n\n  voronoi.links = function(data) {\n    return voronoi(data).links();\n  };\n\n  voronoi.triangles = function(data) {\n    return voronoi(data).triangles();\n  };\n\n  voronoi.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$11(+_), voronoi) : x$$1;\n  };\n\n  voronoi.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$11(+_), voronoi) : y$$1;\n  };\n\n  voronoi.extent = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n\n  voronoi.size = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n\n  return voronoi;\n};\n\nvar constant$12 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction ZoomEvent(target, type, transform) {\n  this.target = target;\n  this.type = type;\n  this.transform = transform;\n}\n\nfunction Transform(k, x, y) {\n  this.k = k;\n  this.x = x;\n  this.y = y;\n}\n\nTransform.prototype = {\n  constructor: Transform,\n  scale: function(k) {\n    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n  },\n  translate: function(x, y) {\n    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n  },\n  apply: function(point) {\n    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n  },\n  applyX: function(x) {\n    return x * this.k + this.x;\n  },\n  applyY: function(y) {\n    return y * this.k + this.y;\n  },\n  invert: function(location) {\n    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n  },\n  invertX: function(x) {\n    return (x - this.x) / this.k;\n  },\n  invertY: function(y) {\n    return (y - this.y) / this.k;\n  },\n  rescaleX: function(x) {\n    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n  },\n  rescaleY: function(y) {\n    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n  },\n  toString: function() {\n    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n  }\n};\n\nvar identity$8 = new Transform(1, 0, 0);\n\ntransform$1.prototype = Transform.prototype;\n\nfunction transform$1(node) {\n  return node.__zoom || identity$8;\n}\n\nfunction nopropagation$2() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent$2 = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$2() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent$1() {\n  var e = this, w, h;\n  if (e instanceof SVGElement) {\n    e = e.ownerSVGElement || e;\n    w = e.width.baseVal.value;\n    h = e.height.baseVal.value;\n  } else {\n    w = e.clientWidth;\n    h = e.clientHeight;\n  }\n  return [[0, 0], [w, h]];\n}\n\nfunction defaultTransform() {\n  return this.__zoom || identity$8;\n}\n\nvar zoom = function() {\n  var filter = defaultFilter$2,\n      extent = defaultExtent$1,\n      k0 = 0,\n      k1 = Infinity,\n      x0 = -k1,\n      x1 = k1,\n      y0 = x0,\n      y1 = x1,\n      duration = 250,\n      interpolate$$1 = interpolateZoom,\n      gestures = [],\n      listeners = dispatch(\"start\", \"zoom\", \"end\"),\n      touchstarting,\n      touchending,\n      touchDelay = 500,\n      wheelDelay = 150;\n\n  function zoom(selection$$1) {\n    selection$$1\n        .on(\"wheel.zoom\", wheeled)\n        .on(\"mousedown.zoom\", mousedowned)\n        .on(\"dblclick.zoom\", dblclicked)\n        .on(\"touchstart.zoom\", touchstarted)\n        .on(\"touchmove.zoom\", touchmoved)\n        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .property(\"__zoom\", defaultTransform);\n  }\n\n  zoom.transform = function(collection, transform) {\n    var selection$$1 = collection.selection ? collection.selection() : collection;\n    selection$$1.property(\"__zoom\", defaultTransform);\n    if (collection !== selection$$1) {\n      schedule(collection, transform);\n    } else {\n      selection$$1.interrupt().each(function() {\n        gesture(this, arguments)\n            .start()\n            .zoom(null, typeof transform === \"function\" ? transform.apply(this, arguments) : transform)\n            .end();\n      });\n    }\n  };\n\n  zoom.scaleBy = function(selection$$1, k) {\n    zoom.scaleTo(selection$$1, function() {\n      var k0 = this.__zoom.k,\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return k0 * k1;\n    });\n  };\n\n  zoom.scaleTo = function(selection$$1, k) {\n    zoom.transform(selection$$1, function() {\n      var e = extent.apply(this, arguments),\n          t0 = this.__zoom,\n          p0 = centroid(e),\n          p1 = t0.invert(p0),\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return constrain(translate(scale(t0, k1), p0, p1), e);\n    });\n  };\n\n  zoom.translateBy = function(selection$$1, x, y) {\n    zoom.transform(selection$$1, function() {\n      return constrain(this.__zoom.translate(\n        typeof x === \"function\" ? x.apply(this, arguments) : x,\n        typeof y === \"function\" ? y.apply(this, arguments) : y\n      ), extent.apply(this, arguments));\n    });\n  };\n\n  function scale(transform, k) {\n    k = Math.max(k0, Math.min(k1, k));\n    return k === transform.k ? transform : new Transform(k, transform.x, transform.y);\n  }\n\n  function translate(transform, p0, p1) {\n    var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;\n    return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);\n  }\n\n  function constrain(transform, extent) {\n    var dx0 = transform.invertX(extent[0][0]) - x0,\n        dx1 = transform.invertX(extent[1][0]) - x1,\n        dy0 = transform.invertY(extent[0][1]) - y0,\n        dy1 = transform.invertY(extent[1][1]) - y1;\n    return transform.translate(\n      dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1),\n      dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1)\n    );\n  }\n\n  function centroid(extent) {\n    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n  }\n\n  function schedule(transition$$1, transform, center) {\n    transition$$1\n        .on(\"start.zoom\", function() { gesture(this, arguments).start(); })\n        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).end(); })\n        .tween(\"zoom\", function() {\n          var that = this,\n              args = arguments,\n              g = gesture(that, args),\n              e = extent.apply(that, args),\n              p = center || centroid(e),\n              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n              a = that.__zoom,\n              b = typeof transform === \"function\" ? transform.apply(that, args) : transform,\n              i = interpolate$$1(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n          return function(t) {\n            if (t === 1) t = b; // Avoid rounding error on end.\n            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n            g.zoom(null, t);\n          };\n        });\n  }\n\n  function gesture(that, args) {\n    for (var i = 0, n = gestures.length, g; i < n; ++i) {\n      if ((g = gestures[i]).that === that) {\n        return g;\n      }\n    }\n    return new Gesture(that, args);\n  }\n\n  function Gesture(that, args) {\n    this.that = that;\n    this.args = args;\n    this.index = -1;\n    this.active = 0;\n    this.extent = extent.apply(that, args);\n  }\n\n  Gesture.prototype = {\n    start: function() {\n      if (++this.active === 1) {\n        this.index = gestures.push(this) - 1;\n        this.emit(\"start\");\n      }\n      return this;\n    },\n    zoom: function(key, transform) {\n      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform.invert(this.mouse[0]);\n      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform.invert(this.touch0[0]);\n      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform.invert(this.touch1[0]);\n      this.that.__zoom = transform;\n      this.emit(\"zoom\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) {\n        gestures.splice(this.index, 1);\n        this.index = -1;\n        this.emit(\"end\");\n      }\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function wheeled() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        t = this.__zoom,\n        k = Math.max(k0, Math.min(k1, t.k * Math.pow(2, -exports.event.deltaY * (exports.event.deltaMode ? 120 : 1) / 500))),\n        p = mouse(this);\n\n    // If the mouse is in the same location as before, reuse it.\n    // If there were recent wheel events, reset the wheel idle timeout.\n    if (g.wheel) {\n      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n        g.mouse[1] = t.invert(g.mouse[0] = p);\n      }\n      clearTimeout(g.wheel);\n    }\n\n    // If this wheel event won’t trigger a transform change, ignore it.\n    else if (t.k === k) return;\n\n    // Otherwise, capture the mouse point and location at the start.\n    else {\n      g.mouse = [p, t.invert(p)];\n      interrupt(this);\n      g.start();\n    }\n\n    noevent$2();\n    g.wheel = setTimeout(wheelidled, wheelDelay);\n    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent));\n\n    function wheelidled() {\n      g.wheel = null;\n      g.end();\n    }\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        v = select(exports.event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n        p = mouse(this);\n\n    dragDisable(exports.event.view);\n    nopropagation$2();\n    g.mouse = [p, this.__zoom.invert(p)];\n    interrupt(this);\n    g.start();\n\n    function mousemoved() {\n      noevent$2();\n      g.moved = true;\n      g.zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent));\n    }\n\n    function mouseupped() {\n      v.on(\"mousemove.zoom mouseup.zoom\", null);\n      yesdrag(exports.event.view, g.moved);\n      noevent$2();\n      g.end();\n    }\n  }\n\n  function dblclicked() {\n    if (!filter.apply(this, arguments)) return;\n    var t0 = this.__zoom,\n        p0 = mouse(this),\n        p1 = t0.invert(p0),\n        k1 = t0.k * (exports.event.shiftKey ? 0.5 : 2),\n        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments));\n\n    noevent$2();\n    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);\n    else select(this).call(zoom.transform, t1);\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        started,\n        n = touches$$1.length, i, t, p;\n\n    nopropagation$2();\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n      p = [p, this.__zoom.invert(p), t.identifier];\n      if (!g.touch0) g.touch0 = p, started = true;\n      else if (!g.touch1) g.touch1 = p;\n    }\n\n    // If this is a dbltap, reroute to the (optional) dblclick.zoom handler.\n    if (touchstarting) {\n      touchstarting = clearTimeout(touchstarting);\n      if (!g.touch1) {\n        g.end();\n        p = select(this).on(\"dblclick.zoom\");\n        if (p) p.apply(this, arguments);\n        return;\n      }\n    }\n\n    if (started) {\n      touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n      interrupt(this);\n      g.start();\n    }\n  }\n\n  function touchmoved() {\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, t, p, l;\n\n    noevent$2();\n    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n    }\n    t = g.that.__zoom;\n    if (g.touch1) {\n      var p0 = g.touch0[0], l0 = g.touch0[1],\n          p1 = g.touch1[0], l1 = g.touch1[1],\n          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n      t = scale(t, Math.sqrt(dp / dl));\n      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n    }\n    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n    else return;\n    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent));\n  }\n\n  function touchended() {\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, t;\n\n    nopropagation$2();\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i];\n      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n    }\n    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n    if (g.touch0) g.touch0[1] = this.__zoom.invert(g.touch0[0]);\n    else g.end();\n  }\n\n  zoom.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$12(!!_), zoom) : filter;\n  };\n\n  zoom.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$12([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n  };\n\n  zoom.scaleExtent = function(_) {\n    return arguments.length ? (k0 = +_[0], k1 = +_[1], zoom) : [k0, k1];\n  };\n\n  zoom.translateExtent = function(_) {\n    return arguments.length ? (x0 = +_[0][0], x1 = +_[1][0], y0 = +_[0][1], y1 = +_[1][1], zoom) : [[x0, y0], [x1, y1]];\n  };\n\n  zoom.duration = function(_) {\n    return arguments.length ? (duration = +_, zoom) : duration;\n  };\n\n  zoom.interpolate = function(_) {\n    return arguments.length ? (interpolate$$1 = _, zoom) : interpolate$$1;\n  };\n\n  zoom.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? zoom : value;\n  };\n\n  return zoom;\n};\n\nexports.version = version;\nexports.bisect = bisectRight;\nexports.bisectRight = bisectRight;\nexports.bisectLeft = bisectLeft;\nexports.ascending = ascending;\nexports.bisector = bisector;\nexports.cross = cross;\nexports.descending = descending;\nexports.deviation = deviation;\nexports.extent = extent;\nexports.histogram = histogram;\nexports.thresholdFreedmanDiaconis = freedmanDiaconis;\nexports.thresholdScott = scott;\nexports.thresholdSturges = sturges;\nexports.max = max;\nexports.mean = mean;\nexports.median = median;\nexports.merge = merge;\nexports.min = min;\nexports.pairs = pairs;\nexports.permute = permute;\nexports.quantile = threshold;\nexports.range = sequence;\nexports.scan = scan;\nexports.shuffle = shuffle;\nexports.sum = sum;\nexports.ticks = ticks;\nexports.tickIncrement = tickIncrement;\nexports.tickStep = tickStep;\nexports.transpose = transpose;\nexports.variance = variance;\nexports.zip = zip;\nexports.axisTop = axisTop;\nexports.axisRight = axisRight;\nexports.axisBottom = axisBottom;\nexports.axisLeft = axisLeft;\nexports.brush = brush;\nexports.brushX = brushX;\nexports.brushY = brushY;\nexports.brushSelection = brushSelection;\nexports.chord = chord;\nexports.ribbon = ribbon;\nexports.nest = nest;\nexports.set = set$2;\nexports.map = map$1;\nexports.keys = keys;\nexports.values = values;\nexports.entries = entries;\nexports.color = color;\nexports.rgb = rgb;\nexports.hsl = hsl;\nexports.lab = lab;\nexports.hcl = hcl;\nexports.cubehelix = cubehelix;\nexports.dispatch = dispatch;\nexports.drag = drag;\nexports.dragDisable = dragDisable;\nexports.dragEnable = yesdrag;\nexports.dsvFormat = dsv;\nexports.csvParse = csvParse;\nexports.csvParseRows = csvParseRows;\nexports.csvFormat = csvFormat;\nexports.csvFormatRows = csvFormatRows;\nexports.tsvParse = tsvParse;\nexports.tsvParseRows = tsvParseRows;\nexports.tsvFormat = tsvFormat;\nexports.tsvFormatRows = tsvFormatRows;\nexports.easeLinear = linear$1;\nexports.easeQuad = quadInOut;\nexports.easeQuadIn = quadIn;\nexports.easeQuadOut = quadOut;\nexports.easeQuadInOut = quadInOut;\nexports.easeCubic = cubicInOut;\nexports.easeCubicIn = cubicIn;\nexports.easeCubicOut = cubicOut;\nexports.easeCubicInOut = cubicInOut;\nexports.easePoly = polyInOut;\nexports.easePolyIn = polyIn;\nexports.easePolyOut = polyOut;\nexports.easePolyInOut = polyInOut;\nexports.easeSin = sinInOut;\nexports.easeSinIn = sinIn;\nexports.easeSinOut = sinOut;\nexports.easeSinInOut = sinInOut;\nexports.easeExp = expInOut;\nexports.easeExpIn = expIn;\nexports.easeExpOut = expOut;\nexports.easeExpInOut = expInOut;\nexports.easeCircle = circleInOut;\nexports.easeCircleIn = circleIn;\nexports.easeCircleOut = circleOut;\nexports.easeCircleInOut = circleInOut;\nexports.easeBounce = bounceOut;\nexports.easeBounceIn = bounceIn;\nexports.easeBounceOut = bounceOut;\nexports.easeBounceInOut = bounceInOut;\nexports.easeBack = backInOut;\nexports.easeBackIn = backIn;\nexports.easeBackOut = backOut;\nexports.easeBackInOut = backInOut;\nexports.easeElastic = elasticOut;\nexports.easeElasticIn = elasticIn;\nexports.easeElasticOut = elasticOut;\nexports.easeElasticInOut = elasticInOut;\nexports.forceCenter = center$1;\nexports.forceCollide = collide;\nexports.forceLink = link;\nexports.forceManyBody = manyBody;\nexports.forceSimulation = simulation;\nexports.forceX = x$2;\nexports.forceY = y$2;\nexports.formatDefaultLocale = defaultLocale;\nexports.formatLocale = formatLocale;\nexports.formatSpecifier = formatSpecifier;\nexports.precisionFixed = precisionFixed;\nexports.precisionPrefix = precisionPrefix;\nexports.precisionRound = precisionRound;\nexports.geoArea = area;\nexports.geoBounds = bounds;\nexports.geoCentroid = centroid;\nexports.geoCircle = circle;\nexports.geoClipExtent = extent$1;\nexports.geoContains = contains;\nexports.geoDistance = distance;\nexports.geoGraticule = graticule;\nexports.geoGraticule10 = graticule10;\nexports.geoInterpolate = interpolate$1;\nexports.geoLength = length$1;\nexports.geoPath = index$1;\nexports.geoAlbers = albers;\nexports.geoAlbersUsa = albersUsa;\nexports.geoAzimuthalEqualArea = azimuthalEqualArea;\nexports.geoAzimuthalEqualAreaRaw = azimuthalEqualAreaRaw;\nexports.geoAzimuthalEquidistant = azimuthalEquidistant;\nexports.geoAzimuthalEquidistantRaw = azimuthalEquidistantRaw;\nexports.geoConicConformal = conicConformal;\nexports.geoConicConformalRaw = conicConformalRaw;\nexports.geoConicEqualArea = conicEqualArea;\nexports.geoConicEqualAreaRaw = conicEqualAreaRaw;\nexports.geoConicEquidistant = conicEquidistant;\nexports.geoConicEquidistantRaw = conicEquidistantRaw;\nexports.geoEquirectangular = equirectangular;\nexports.geoEquirectangularRaw = equirectangularRaw;\nexports.geoGnomonic = gnomonic;\nexports.geoGnomonicRaw = gnomonicRaw;\nexports.geoIdentity = identity$5;\nexports.geoProjection = projection;\nexports.geoProjectionMutator = projectionMutator;\nexports.geoMercator = mercator;\nexports.geoMercatorRaw = mercatorRaw;\nexports.geoOrthographic = orthographic;\nexports.geoOrthographicRaw = orthographicRaw;\nexports.geoStereographic = stereographic;\nexports.geoStereographicRaw = stereographicRaw;\nexports.geoTransverseMercator = transverseMercator;\nexports.geoTransverseMercatorRaw = transverseMercatorRaw;\nexports.geoRotation = rotation;\nexports.geoStream = geoStream;\nexports.geoTransform = transform;\nexports.cluster = cluster;\nexports.hierarchy = hierarchy;\nexports.pack = index$2;\nexports.packSiblings = siblings;\nexports.packEnclose = enclose;\nexports.partition = partition;\nexports.stratify = stratify;\nexports.tree = tree;\nexports.treemap = index$3;\nexports.treemapBinary = binary;\nexports.treemapDice = treemapDice;\nexports.treemapSlice = treemapSlice;\nexports.treemapSliceDice = sliceDice;\nexports.treemapSquarify = squarify;\nexports.treemapResquarify = resquarify;\nexports.interpolate = interpolateValue;\nexports.interpolateArray = array$1;\nexports.interpolateBasis = basis$1;\nexports.interpolateBasisClosed = basisClosed;\nexports.interpolateDate = date;\nexports.interpolateNumber = reinterpolate;\nexports.interpolateObject = object;\nexports.interpolateRound = interpolateRound;\nexports.interpolateString = interpolateString;\nexports.interpolateTransformCss = interpolateTransformCss;\nexports.interpolateTransformSvg = interpolateTransformSvg;\nexports.interpolateZoom = interpolateZoom;\nexports.interpolateRgb = interpolateRgb;\nexports.interpolateRgbBasis = rgbBasis;\nexports.interpolateRgbBasisClosed = rgbBasisClosed;\nexports.interpolateHsl = hsl$2;\nexports.interpolateHslLong = hslLong;\nexports.interpolateLab = lab$1;\nexports.interpolateHcl = hcl$2;\nexports.interpolateHclLong = hclLong;\nexports.interpolateCubehelix = cubehelix$2;\nexports.interpolateCubehelixLong = cubehelixLong;\nexports.quantize = quantize;\nexports.path = path;\nexports.polygonArea = area$1;\nexports.polygonCentroid = centroid$1;\nexports.polygonHull = hull;\nexports.polygonContains = contains$1;\nexports.polygonLength = length$2;\nexports.quadtree = quadtree;\nexports.queue = queue;\nexports.randomUniform = uniform;\nexports.randomNormal = normal;\nexports.randomLogNormal = logNormal;\nexports.randomBates = bates;\nexports.randomIrwinHall = irwinHall;\nexports.randomExponential = exponential$1;\nexports.request = request;\nexports.html = html;\nexports.json = json;\nexports.text = text;\nexports.xml = xml;\nexports.csv = csv$1;\nexports.tsv = tsv$1;\nexports.scaleBand = band;\nexports.scalePoint = point$1;\nexports.scaleIdentity = identity$6;\nexports.scaleLinear = linear$2;\nexports.scaleLog = log$1;\nexports.scaleOrdinal = ordinal;\nexports.scaleImplicit = implicit;\nexports.scalePow = pow$1;\nexports.scaleSqrt = sqrt$1;\nexports.scaleQuantile = quantile$$1;\nexports.scaleQuantize = quantize$1;\nexports.scaleThreshold = threshold$1;\nexports.scaleTime = time;\nexports.scaleUtc = utcTime;\nexports.schemeCategory10 = category10;\nexports.schemeCategory20b = category20b;\nexports.schemeCategory20c = category20c;\nexports.schemeCategory20 = category20;\nexports.interpolateCubehelixDefault = cubehelix$3;\nexports.interpolateRainbow = rainbow$1;\nexports.interpolateWarm = warm;\nexports.interpolateCool = cool;\nexports.interpolateViridis = viridis;\nexports.interpolateMagma = magma;\nexports.interpolateInferno = inferno;\nexports.interpolatePlasma = plasma;\nexports.scaleSequential = sequential;\nexports.creator = creator;\nexports.local = local$1;\nexports.matcher = matcher$1;\nexports.mouse = mouse;\nexports.namespace = namespace;\nexports.namespaces = namespaces;\nexports.select = select;\nexports.selectAll = selectAll;\nexports.selection = selection;\nexports.selector = selector;\nexports.selectorAll = selectorAll;\nexports.touch = touch;\nexports.touches = touches;\nexports.window = window;\nexports.customEvent = customEvent;\nexports.arc = arc;\nexports.area = area$2;\nexports.line = line;\nexports.pie = pie;\nexports.radialArea = radialArea;\nexports.radialLine = radialLine$1;\nexports.symbol = symbol;\nexports.symbols = symbols;\nexports.symbolCircle = circle$2;\nexports.symbolCross = cross$2;\nexports.symbolDiamond = diamond;\nexports.symbolSquare = square;\nexports.symbolStar = star;\nexports.symbolTriangle = triangle;\nexports.symbolWye = wye;\nexports.curveBasisClosed = basisClosed$1;\nexports.curveBasisOpen = basisOpen;\nexports.curveBasis = basis$2;\nexports.curveBundle = bundle;\nexports.curveCardinalClosed = cardinalClosed;\nexports.curveCardinalOpen = cardinalOpen;\nexports.curveCardinal = cardinal;\nexports.curveCatmullRomClosed = catmullRomClosed;\nexports.curveCatmullRomOpen = catmullRomOpen;\nexports.curveCatmullRom = catmullRom;\nexports.curveLinearClosed = linearClosed;\nexports.curveLinear = curveLinear;\nexports.curveMonotoneX = monotoneX;\nexports.curveMonotoneY = monotoneY;\nexports.curveNatural = natural;\nexports.curveStep = step;\nexports.curveStepAfter = stepAfter;\nexports.curveStepBefore = stepBefore;\nexports.stack = stack;\nexports.stackOffsetExpand = expand;\nexports.stackOffsetNone = none$1;\nexports.stackOffsetSilhouette = silhouette;\nexports.stackOffsetWiggle = wiggle;\nexports.stackOrderAscending = ascending$2;\nexports.stackOrderDescending = descending$2;\nexports.stackOrderInsideOut = insideOut;\nexports.stackOrderNone = none$2;\nexports.stackOrderReverse = reverse;\nexports.timeInterval = newInterval;\nexports.timeMillisecond = millisecond;\nexports.timeMilliseconds = milliseconds;\nexports.utcMillisecond = millisecond;\nexports.utcMilliseconds = milliseconds;\nexports.timeSecond = second;\nexports.timeSeconds = seconds;\nexports.utcSecond = second;\nexports.utcSeconds = seconds;\nexports.timeMinute = minute;\nexports.timeMinutes = minutes;\nexports.timeHour = hour;\nexports.timeHours = hours;\nexports.timeDay = day;\nexports.timeDays = days;\nexports.timeWeek = sunday;\nexports.timeWeeks = sundays;\nexports.timeSunday = sunday;\nexports.timeSundays = sundays;\nexports.timeMonday = monday;\nexports.timeMondays = mondays;\nexports.timeTuesday = tuesday;\nexports.timeTuesdays = tuesdays;\nexports.timeWednesday = wednesday;\nexports.timeWednesdays = wednesdays;\nexports.timeThursday = thursday;\nexports.timeThursdays = thursdays;\nexports.timeFriday = friday;\nexports.timeFridays = fridays;\nexports.timeSaturday = saturday;\nexports.timeSaturdays = saturdays;\nexports.timeMonth = month;\nexports.timeMonths = months;\nexports.timeYear = year;\nexports.timeYears = years;\nexports.utcMinute = utcMinute;\nexports.utcMinutes = utcMinutes;\nexports.utcHour = utcHour;\nexports.utcHours = utcHours;\nexports.utcDay = utcDay;\nexports.utcDays = utcDays;\nexports.utcWeek = utcSunday;\nexports.utcWeeks = utcSundays;\nexports.utcSunday = utcSunday;\nexports.utcSundays = utcSundays;\nexports.utcMonday = utcMonday;\nexports.utcMondays = utcMondays;\nexports.utcTuesday = utcTuesday;\nexports.utcTuesdays = utcTuesdays;\nexports.utcWednesday = utcWednesday;\nexports.utcWednesdays = utcWednesdays;\nexports.utcThursday = utcThursday;\nexports.utcThursdays = utcThursdays;\nexports.utcFriday = utcFriday;\nexports.utcFridays = utcFridays;\nexports.utcSaturday = utcSaturday;\nexports.utcSaturdays = utcSaturdays;\nexports.utcMonth = utcMonth;\nexports.utcMonths = utcMonths;\nexports.utcYear = utcYear;\nexports.utcYears = utcYears;\nexports.timeFormatDefaultLocale = defaultLocale$1;\nexports.timeFormatLocale = formatLocale$1;\nexports.isoFormat = formatIso;\nexports.isoParse = parseIso;\nexports.now = now;\nexports.timer = timer;\nexports.timerFlush = timerFlush;\nexports.timeout = timeout$1;\nexports.interval = interval$1;\nexports.transition = transition;\nexports.active = active;\nexports.interrupt = interrupt;\nexports.voronoi = voronoi;\nexports.zoom = zoom;\nexports.zoomTransform = transform$1;\nexports.zoomIdentity = identity$8;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3/build/d3.js\n// module id = 4\n// module chunks = 0","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/object-assign/index.js\n// module id = 6\n// module chunks = 0","'use strict';\n\n//This file contains the ES6 extensions to the core Promises/A+ API\n\nvar Promise = require('./core.js');\n\nmodule.exports = Promise;\n\n/* Static Functions */\n\nvar TRUE = valuePromise(true);\nvar FALSE = valuePromise(false);\nvar NULL = valuePromise(null);\nvar UNDEFINED = valuePromise(undefined);\nvar ZERO = valuePromise(0);\nvar EMPTYSTRING = valuePromise('');\n\nfunction valuePromise(value) {\n  var p = new Promise(Promise._61);\n  p._81 = 1;\n  p._65 = value;\n  return p;\n}\nPromise.resolve = function (value) {\n  if (value instanceof Promise) return value;\n\n  if (value === null) return NULL;\n  if (value === undefined) return UNDEFINED;\n  if (value === true) return TRUE;\n  if (value === false) return FALSE;\n  if (value === 0) return ZERO;\n  if (value === '') return EMPTYSTRING;\n\n  if (typeof value === 'object' || typeof value === 'function') {\n    try {\n      var then = value.then;\n      if (typeof then === 'function') {\n        return new Promise(then.bind(value));\n      }\n    } catch (ex) {\n      return new Promise(function (resolve, reject) {\n        reject(ex);\n      });\n    }\n  }\n  return valuePromise(value);\n};\n\nPromise.all = function (arr) {\n  var args = Array.prototype.slice.call(arr);\n\n  return new Promise(function (resolve, reject) {\n    if (args.length === 0) return resolve([]);\n    var remaining = args.length;\n    function res(i, val) {\n      if (val && (typeof val === 'object' || typeof val === 'function')) {\n        if (val instanceof Promise && val.then === Promise.prototype.then) {\n          while (val._81 === 3) {\n            val = val._65;\n          }\n          if (val._81 === 1) return res(i, val._65);\n          if (val._81 === 2) reject(val._65);\n          val.then(function (val) {\n            res(i, val);\n          }, reject);\n          return;\n        } else {\n          var then = val.then;\n          if (typeof then === 'function') {\n            var p = new Promise(then.bind(val));\n            p.then(function (val) {\n              res(i, val);\n            }, reject);\n            return;\n          }\n        }\n      }\n      args[i] = val;\n      if (--remaining === 0) {\n        resolve(args);\n      }\n    }\n    for (var i = 0; i < args.length; i++) {\n      res(i, args[i]);\n    }\n  });\n};\n\nPromise.reject = function (value) {\n  return new Promise(function (resolve, reject) {\n    reject(value);\n  });\n};\n\nPromise.race = function (values) {\n  return new Promise(function (resolve, reject) {\n    values.forEach(function(value){\n      Promise.resolve(value).then(resolve, reject);\n    });\n  });\n};\n\n/* Prototype Methods */\n\nPromise.prototype['catch'] = function (onRejected) {\n  return this.then(null, onRejected);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/promise/lib/es6-extensions.js\n// module id = 7\n// module chunks = 0","'use strict';\n\nvar Promise = require('./core');\n\nvar DEFAULT_WHITELIST = [\n  ReferenceError,\n  TypeError,\n  RangeError\n];\n\nvar enabled = false;\nexports.disable = disable;\nfunction disable() {\n  enabled = false;\n  Promise._10 = null;\n  Promise._97 = null;\n}\n\nexports.enable = enable;\nfunction enable(options) {\n  options = options || {};\n  if (enabled) disable();\n  enabled = true;\n  var id = 0;\n  var displayId = 0;\n  var rejections = {};\n  Promise._10 = function (promise) {\n    if (\n      promise._81 === 2 && // IS REJECTED\n      rejections[promise._72]\n    ) {\n      if (rejections[promise._72].logged) {\n        onHandled(promise._72);\n      } else {\n        clearTimeout(rejections[promise._72].timeout);\n      }\n      delete rejections[promise._72];\n    }\n  };\n  Promise._97 = function (promise, err) {\n    if (promise._45 === 0) { // not yet handled\n      promise._72 = id++;\n      rejections[promise._72] = {\n        displayId: null,\n        error: err,\n        timeout: setTimeout(\n          onUnhandled.bind(null, promise._72),\n          // For reference errors and type errors, this almost always\n          // means the programmer made a mistake, so log them after just\n          // 100ms\n          // otherwise, wait 2 seconds to see if they get handled\n          matchWhitelist(err, DEFAULT_WHITELIST)\n            ? 100\n            : 2000\n        ),\n        logged: false\n      };\n    }\n  };\n  function onUnhandled(id) {\n    if (\n      options.allRejections ||\n      matchWhitelist(\n        rejections[id].error,\n        options.whitelist || DEFAULT_WHITELIST\n      )\n    ) {\n      rejections[id].displayId = displayId++;\n      if (options.onUnhandled) {\n        rejections[id].logged = true;\n        options.onUnhandled(\n          rejections[id].displayId,\n          rejections[id].error\n        );\n      } else {\n        rejections[id].logged = true;\n        logError(\n          rejections[id].displayId,\n          rejections[id].error\n        );\n      }\n    }\n  }\n  function onHandled(id) {\n    if (rejections[id].logged) {\n      if (options.onHandled) {\n        options.onHandled(rejections[id].displayId, rejections[id].error);\n      } else if (!rejections[id].onUnhandled) {\n        console.warn(\n          'Promise Rejection Handled (id: ' + rejections[id].displayId + '):'\n        );\n        console.warn(\n          '  This means you can ignore any previous messages of the form \"Possible Unhandled Promise Rejection\" with id ' +\n          rejections[id].displayId + '.'\n        );\n      }\n    }\n  }\n}\n\nfunction logError(id, error) {\n  console.warn('Possible Unhandled Promise Rejection (id: ' + id + '):');\n  var errStr = (error && (error.stack || error)) + '';\n  errStr.split('\\n').forEach(function (line) {\n    console.warn('  ' + line);\n  });\n}\n\nfunction matchWhitelist(error, list) {\n  return list.some(function (cls) {\n    return error instanceof cls;\n  });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/promise/lib/rejection-tracking.js\n// module id = 8\n// module chunks = 0","// @remove-on-eject-begin\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n// @remove-on-eject-end\n'use strict';\n\nif (typeof Promise === 'undefined') {\n  // Rejection tracking prevents a common issue where React gets into an\n  // inconsistent state due to an error, but it gets swallowed by a Promise,\n  // and the user has no idea what causes React's erratic future behavior.\n  require('promise/lib/rejection-tracking').enable();\n  window.Promise = require('promise/lib/es6-extensions.js');\n}\n\n// fetch() polyfill for making API calls.\nrequire('whatwg-fetch');\n\n// Object.assign() is commonly used with React.\n// It will use the native implementation if it's present and isn't buggy.\nObject.assign = require('object-assign');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-scripts/config/polyfills.js\n// module id = 9\n// module chunks = 0","(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ]\n\n    var isDataView = function(obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj)\n    }\n\n    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var oldValue = this.map[name]\n    this.map[name] = oldValue ? oldValue+','+value : value\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name)\n    return this.has(name) ? this.map[name] : null\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value)\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this)\n      }\n    }\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsArrayBuffer(blob)\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsText(blob)\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf)\n    var chars = new Array(view.length)\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i])\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength)\n      view.set(new Uint8Array(buf))\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (!body) {\n        this._bodyText = ''\n      } else if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer)\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer])\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body)\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      }\n    }\n\n    this.text = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = String(input)\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, { body: this._bodyInit })\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers()\n    rawHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':')\n      var key = parts.shift().trim()\n      if (key) {\n        var value = parts.join(':').trim()\n        headers.append(key, value)\n      }\n    })\n    return headers\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = 'status' in options ? options.status : 200\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n    this.headers = new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init)\n      var xhr = new XMLHttpRequest()\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        }\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-scripts/~/whatwg-fetch/fetch.js\n// module id = 10\n// module chunks = 0"],"sourceRoot":""}